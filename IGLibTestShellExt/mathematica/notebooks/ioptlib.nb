(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    719967,      19927]
NotebookOptionsPosition[    675044,      18571]
NotebookOutlinePosition[    675590,      18593]
CellTagsIndexPosition[    675547,      18590]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["\n",
  FontSize->24,
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Optimization utilities.",
  FontFamily->"Old English Text MT",
  FontSize->24,
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["\n",
  FontFamily->"Old English Text MT",
  FontSize->20,
  FontWeight->"Bold"],
 StyleBox["\nOriginal opt_inverse is contained in $IGHOME/inverse.\n",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->GrayLevel[0.666667]],
 "\nMany definitions were taken from that notebook.\n\nThis notebook contains \
initialization cells that are used to set up the necessary definitions.\n"
}], "Subsubtitle",
 CellChangeTimes->{{3.571826598448437*^9, 3.571826629201947*^9}, {
  3.571826678232072*^9, 3.571826732119217*^9}, {3.571827006136994*^9, 
  3.57182707094154*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Set working directory:\n  ",
 StyleBox[" ",
  FontSize->36],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
    "Allways", " ", "check", " ", "that", "  ", "working", " ", "directory", 
     " ", "is", " ", "set", " ", 
     RowBox[{"correctly", "!"}]}],
    FontSize->12,
    FontColor->RGBColor[1, 0, 1]], TraditionalForm]],
  FontSize->24],
 StyleBox[" ",
  FontSize->24]
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Gradbena", ":", "\[IndentingNewLine]", 
    RowBox[{
    "SetDirectory", "[", 
     "\"\<E:/users/c3m/igor/enlub/work/SRT_identification_2006-01-20/\
StripReduction\>\"", "]"}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "SetDirectory", "[", 
    "\"\<c:/users/igor/doc/pr/enlub/work/SRT_identification_2006-01-20/\
StripReduction/\>\"", "]"}], "\[IndentingNewLine]"}]}]], "Input"],

Cell[BoxData["\<\"c:\\\\users\\\\igor\\\\doc\\\\pr\\\\enlub\\\\work\\\\SRT_\
identification_2006-01-20\\\\StripReduction\"\>"], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Running optimization from ",
 StyleBox["\"Inverse\"",
  FontSlant->"Italic"],
 "  - ",
 StyleBox["debugging mode",
  FontWeight->"Bold"],
 "   "
}], "Subsubtitle"],

Cell[TextData[{
 "Instructions:\n  For debugging, run Inverse from debugger with the  ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"-", "linkcreate"}],
    FontVariations->{"Underline"->True}], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0.501961]],
 StyleBox[" option",
  FontColor->RGBColor[1, 0, 0.501961]],
 ", e.g.\n  \n      C:/users/igor/cz/invmath.exe  optmath.cm -linkcreate\n    \
  \n      A message box is launched stating the name of the link. You must \
insert this name in the cell below and evaluate it, then swithch to debugger \
and perform debugging (don't forget to set breakpoints).\n      "
}], "Subsection"],

Cell["\<\
Important note:
    Correct directory paths before evaluation! \
\>", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"For", " ", "debugging"}], " ", "-", " ", 
    RowBox[{
    "insert", " ", "the", " ", "reported", " ", "link", " ", "name", " ", 
     RowBox[{"(", 
      RowBox[{"copy", " ", "from", " ", "message", " ", "box"}], ")"}], " ", 
     RowBox[{"first", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"link", "=", 
     RowBox[{"Install", "[", 
      RowBox[{"LinkConnect", "[", "\"\<bmr_shm\>\"", "]"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"InvInterpret", "[", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "\<\"KONTROLA: InvInterpret - finished.\"\>", "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Run ",
 StyleBox["\"Inverse\"",
  FontSlant->"Italic"],
 " - ",
 StyleBox["test",
  FontColor->RGBColor[1, 0, 0]],
 " \n",
 StyleBox["This will run \"",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox["Inverse\".",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontSize->16,
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"This", " ", "is", " ", "a", " ", "test"}], ",", " ", 
      RowBox[{
      "otherwise", " ", "Inverse", " ", "is", " ", "run", " ", "by", " ", 
       "the", " ", "command", " ", 
       RowBox[{
        RowBox[{"runinverse", "[", "]"}], "."}]}]}], " ", ")"}],
    FontSize->12], TraditionalForm]]]
}], "Subtitle",
 CellChangeTimes->{{3.410603339*^9, 3.410603342828125*^9}, 3.41060568675*^9, {
   3.41060581046875*^9, 3.41060582903125*^9}}],

Cell["\<\
You don't need to run this if you don't do optimization with Inverse.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Checks for of runiverse[ ]", "Subsection",
 CellChangeTimes->{{3.410605733640625*^9, 3.41060577496875*^9}}],

Cell["\<\
Important note:
    Correct directory paths before evaluation! \
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "SetDirectory", "[", "\"\<C:\\\\users\\\\igor\\\\c\\\\0exmath\>\"", "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"link", "=", 
     RowBox[{
     "Install", "[", "\"\<C:\\users\\igor\\cz\\invmath.exe invmath.cm\>\"", 
      "]"}]}], ";"}], "\n", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Remark", ":", " ", 
    RowBox[{"command", " ", "file", " ", 
     RowBox[{"default", ".", "cm"}], " ", "must", " ", "be", " ", "in", " ", 
     "the", " ", "current", " ", "directory", " ", "before", " ", 
     "evaluating", " ", "this", " ", 
     RowBox[{"cell", ".", " ", "The"}], " ", "file", " ", "can", " ", "be", 
     " ", 
     RowBox[{"empty", "."}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"link", "=", 
     RowBox[{"Install", "[", "\"\<invmath.exe default.cm\>\"", "]"}]}], ";"}],
    "\n", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Running \>\"", ",", 
     RowBox[{"InvGetVar", "[", 
      RowBox[{"\"\<string\>\"", ",", "\"\<program\>\"", ",", 
       RowBox[{"{", "}"}]}], "]"}], ",", "\"\< \>\"", ",", 
     RowBox[{"InvGetVar", "[", 
      RowBox[{"\"\<scalar\>\"", ",", "\"\<version\>\"", ",", 
       RowBox[{"{", "}"}]}], "]"}], ",", "\"\<.\>\""}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"InvInterpret", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"runinverse", "[", "]"}]}]}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running \"\>", "\[InvisibleSpace]", "\<\"Inverse\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "3.12`", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["Running ", "Inverse", " ", 3.12, "."],
  Editable->False]], "Print"],

Cell[BoxData[
 RowBox[{"{", "\<\"KONTROLA: InvInterpret - finished.\"\>", "}"}]], "Output"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Input"],

Cell[BoxData["\<\"c:\\\\users\\\\igor\\\\doc\\\\pr\\\\enlub\\\\work\\\\SRT_\
identification_2006-01-20\\\\StripReduction\"\>"], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell["Collection of Numerical Utilities", "Title",
 CellChangeTimes->{{3.5718386543740396`*^9, 3.5718386608554106`*^9}}],

Cell[CellGroupData[{

Cell["Functions of Vector variables:", "Subtitle",
 CellChangeTimes->{{3.5718384412611227`*^9, 3.5718384504011354`*^9}}],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["Definitions:", "Subsubtitle",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"vecvar", ",", "gradfunc", ",", "vecnorm"}], "]"}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "remove", " ", "definitios", " ", "to", " ", "reset", " ", "the", " ", 
    "state"}], " ", "*)"}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["vecvar",
  FontWeight->"Bold"],
 " [",
 StyleBox["name",
  FontSlant->"Italic"],
 ", ",
 StyleBox["n",
  FontSlant->"Italic"],
 "] : creates a list of ",
 StyleBox["n",
  FontSlant->"Italic"],
 " variables thatc do not have any definition assigned; name is used as a \
base of variable name. The returned list is {name1,name2,...,namen}. If a \
variable of one of these names has been defined before the call then its \
definition is cleared, such that the list always contains pure variables.\n",
 StyleBox["name",
  FontSlant->"Italic"],
 " should be a string, but it can also be a symbol without a value or with a \
string value."
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"vecvar", "[", 
   RowBox[{"name_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"var", ",", "str"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"var", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Create", " ", "variable", " ", 
         RowBox[{"name", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"str", "=", 
          RowBox[{"StringJoin", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ToString", "[", "name", "]"}], ",", 
            RowBox[{"ToString", "[", "i", "]"}]}], " ", "\[IndentingNewLine]",
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Clear", " ", "variable", " ", "definition", " ", "if", " ", "it", 
           " ", 
           RowBox[{"exists", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"ToExpression", "[", " ", 
          RowBox[{"StringJoin", "[", "\[IndentingNewLine]", 
           RowBox[{"\"\<Clear[\>\"", ",", "str", ",", "\"\<]\>\""}], 
           "\[IndentingNewLine]", "]"}], " ", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Convert", " ", "name", " ", "to", " ", 
           RowBox[{"variable", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"ToExpression", "[", "str", "]"}]}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "var", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5718387260588417`*^9},
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]]
}, Open  ]],

Cell[TextData[{
 StyleBox["gradfunc",
  FontWeight->"Bold"],
 " [",
 StyleBox["func",
  FontSlant->"Italic"],
 ", ",
 StyleBox["p,clientdata",
  FontSlant->"Italic"],
 "] : \n",
 StyleBox["gradfunc",
  FontWeight->"Bold"],
 " [",
 StyleBox["func",
  FontSlant->"Italic"],
 ", ",
 StyleBox["p",
  FontSlant->"Italic"],
 "] : \nreturns gradients of function ",
 StyleBox["func",
  FontSlant->"Italic"],
 " of vector variable at parameters ",
 StyleBox["p",
  FontSlant->"Italic"],
 ", with function definition data ",
 StyleBox["clientdata",
  FontSlant->"Italic"],
 ". If there is no ",
 StyleBox["clientdata",
  FontSlant->"Italic"],
 " then ",
 StyleBox["func",
  FontSlant->"Italic"],
 " is must also be such that it does not teed the definition data."
}], "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gradfunc", "[", 
    RowBox[{"func_", ",", "p_", ",", "clientdata_"}], "]"}], ":=", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ret", ",", "i", ",", "transf", ",", "var", ",", 
       RowBox[{"name", "=", "\"\<xzt\>\""}], ",", "dim"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dim", "=", 
       RowBox[{"Length", "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"var", "=", 
       RowBox[{"vecvar", "[", 
        RowBox[{"name", ",", "dim"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"transf", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"var", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
          RowBox[{"p", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "dim"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"var", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", "1"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Remove", "[", 
            RowBox[{"var", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ret", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"func", "[", 
            RowBox[{"var", ",", "clientdata"}], "]"}], ",", 
           RowBox[{"var", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "\[IndentingNewLine]",
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ret", "=", 
       RowBox[{"ret", " ", "/.", " ", "transf"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", " ", "[", "ret", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gradfunc", "[", 
    RowBox[{"func_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x_", ",", "cd_"}], "]"}], ":=", 
       RowBox[{"func", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"gradfunc", "[", 
        RowBox[{"f", ",", "p", ",", "cd"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Norm", " ", "of", " ", "a", " ", 
    RowBox[{"vector", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"vecnorm", "[", "p_", "]"}], ":=", 
     RowBox[{"Sqrt", " ", "[", "\[IndentingNewLine]", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "p", "]"}]}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vecnorm", "[", 
      RowBox[{"p_", ",", "clientdata_"}], "]"}], ":=", 
     RowBox[{"vecnorm", "[", "p", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Sum", " ", "of", " ", "squares", " ", "of", " ", "components", " ", 
    "with", " ", "coefficients", " ", "in", " ", 
    RowBox[{"coef", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"diagsqr", "[", 
     RowBox[{"x_", ",", "coef_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "ret", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "x", "]"}], "\[NotEqual]", 
          RowBox[{"Length", "[", "coef", "]"}]}], ",", "\[IndentingNewLine]", 
         
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Number of coefficients, \>\"", ",", 
            RowBox[{"Length", "[", "x", "]"}], ",", 
            "\"\<, is different from number of parameters, \>\"", ",", 
            RowBox[{"Length", "[", "x", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ret", "=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"coef", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "*", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "^", "2"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "ret", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Jo\:017ee: nasveti", "Subsubtitle"],

Cell[CellGroupData[{

Cell["Izdelava modulov in interpretacija:", "Subsection"],

Cell[TextData[{
 "Celicam v notebooku, ki naj se izvedejo pri inicializaciji nekega modula, \
da\[SHacek] atribut ",
 StyleBox["inicializacijske celice",
  FontWeight->"Bold"],
 ". Pri shranjevanju notebooka, ki vsebuje inicialiyacijske celice, te ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " vpra\[SHacek]a, ali ho\[SHacek]e\[SHacek] inicialiyacijske celice shraniti \
v poseben datoteko (.m), ki vsebuje samo kodo brez dodatnega formatiranja \
(celic itd.). Izbere\[SHacek], da bo\[SHacek] te stvari shranil v posebno \
datoteko. Vsebino te datoteke interpretira\[SHacek] z ukatom \n\n  \
Get[\"Filename\"]\n  \n Z ukazom Get lahko interpretira\[SHacek] tudi \
notebook v obi\[CHacek]ajni obliki, vendar Jo\:017ee tega ne \
priporo\[CHacek]a (morda samo zaradi ve\[CHacek]jih mo\:017enosti napak??)"
}], "Text"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Problem, da se del kode funkcije za izra\[CHacek]un ne\[CHacek]esa ne izvede, \
ko je funkcija klicana v funkcijah kot je NMinimize \
\>", "Subsection"],

Cell[TextData[{
 "Ne izvedejo se deli, ki jih funkcija ",
 StyleBox["ne rabi za ovrednotenje",
  FontWeight->"Bold"],
 " (kot npr. izpisi vmesnih rezultatov), ker se ti deli kode (recimo v ukazu \
",
 StyleBox["Module",
  FontWeight->"Bold"],
 ") izpustijo, ko klico\[CHacek]a funkcija prevede izraz (pretvori ga v \
\"Compiled form\")."
}], "Text"],

Cell["\<\
Re\[SHacek]itev: prepre\[CHacek]iti kompajliranje izraza, ki se uporabi pri \
ra\[CHacek]unanju, na primer z ukazom Hold; Primer:\
\>", "Subsubsection"],

Cell[TextData[{
 "NMinimize[ expr. // ",
 StyleBox["Hold",
  FontWeight->"Bold"],
 " , ... ]\nali \nNMinimize [ Hold [ expr ] , ... ]"
}], "Text"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Vnaprej neznano \[SHacek]tevilo spremenljivk pri NMinimize[ ], D[ ] itd.:\
\>", "Subsection"],

Cell[TextData[{
 "Problem se ne da elegantno re\[SHacek]iti brez uporabe globalnih \
spremenljivk (glej spodaj). Problem je v tem, da je na enem ali drugem nivoju \
vedno potrebno definirati spremenljivke, od katerih je odvisen izraz (torej \
po katerih npr. minimiziramo ali odvajamo). Takoj, ko ",
 StyleBox["nimamo vnaprej znanega \[SHacek]tevila spremenljivk",
  FontWeight->"Bold"],
 ", je predpis za izra\[CHacek]un ",
 StyleBox["program in ne funkcija",
  FontWeight->"Bold"],
 ". Da pa lahko kli\[CHacek]emo operacije nad funkcijo, ",
 StyleBox["moramo na nekem nivoju definirati funkcijo s fiksnimi simboli, ki \
predstavljajo spremenljivke",
  FontWeight->"Bold"],
 ". To sicer lahko naredimo v znotraj danega modula tako, da preko nizov \
(npr. s ",
 StyleBox["ToExpression",
  FontWeight->"Bold"],
 ")",
 " definiramo potrebne spremenljivke, vendar so tako definirane spremenljivke \
",
 StyleBox["globalne",
  FontWeight->"Bold"],
 ". Najbolje je, da definiramo za vsako tak\[SHacek]no stvar kak poseben \
koren imen spremenljivk tako, da ne bo problemov z uporabo istega imena za \
dve razli\[CHacek]ni stvari."
}], "Text"],

Cell[CellGroupData[{

Cell["Preizkusi:", "Subsubsection"],

Cell["grad[a_,b_,c_]:=Map[ D[a,#]&,b ]  /.  MapTo [Rule,{b,c}]", "Text"],

Cell["MapThread[Rule,{b,c}]", "Text"],

Cell["Outer[ ... ]", "Text"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests:", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vecnorm", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 SqrtBox["5"]], "Output"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vecnorm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 SqrtBox["5"]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gradfunc", "[", 
  RowBox[{"vecnorm", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["13"]], ",", 
   FractionBox["3", 
    SqrtBox["13"]]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gradfunc", "[", 
  RowBox[{"vecnorm", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["13"]], ",", 
   FractionBox["3", 
    SqrtBox["13"]]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diagsqr", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xx", ",", "yy"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["xx", "2"], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["yy", "2"]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gradfunc", "[", 
  RowBox[{"diagsqr", ",", 
   RowBox[{"{", 
    RowBox[{"xx", ",", "yy"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", "xx"}], ",", 
   RowBox[{"10", " ", "yy"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.571838663149542*^9, 3.571838663349553*^9}}]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["Collection of Supporting Utilities for Optimization", "Title",
 CellChangeTimes->{{3.571838639759204*^9, 3.5718386513958693`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"testmode", "\[NotEqual]", "0"}], ",", 
    RowBox[{
     RowBox[{"testmode", "=", "0"}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
    RowBox[{
     RowBox[{"debugmode", "=", "0"}], ";"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4107621556875*^9, 3.410762238609375*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell["\<\
Definition of test optimization problems (analysis functions)\
\>", "Subtitle"],

Cell[TextData[{
 "In order to define optimisation problems in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " for use with ",
 StyleBox["Inverse",
  FontSlant->"Italic"],
 ",  the problem must be defined in form of ",
 StyleBox["standard analysis function",
  FontWeight->"Bold"],
 ". This function is called in the following way:\n\n",
 StyleBox["results = analysisfunction[param, calcobj, calcconstr, \
calcgradobj, calcgradconstr, clientdata ];",
  FontSlant->"Italic"],
 "\n\nArguments of the function have the following meaning:\n  ",
 StyleBox["param",
  FontSlant->"Italic"],
 " is vector of optimization parameters at which response functions and \
eventually their gradients must be evaluated. It must be a list of numbers.\n \
 ",
 StyleBox["calcobj",
  FontSlant->"Italic"],
 " specifies whether the objective function should be evaluated. 0 means that \
it does not need to be evaluated, non-zero values mean that it should be \
evaluated. It must be an integer number (usually 0 or 1).\n  ",
 StyleBox["calcconstr",
  FontSlant->"Italic"],
 " specifies whether constraint functions should be evaluated.\n  ",
 StyleBox["calcgradobj",
  FontSlant->"Italic"],
 " specifies whether gradient of the objective function should be evaluated.\n\
  ",
 StyleBox["calcgradconstr",
  FontSlant->"Italic"],
 " specifies whether gradients of constraint functions should be evaluated.\n \
 ",
 StyleBox["clientdata",
  FontSlant->"Italic"],
 " can hold additional definition data that define how to evaluate the \
response or provide some other information for the analysis function. The \
structure of ",
 StyleBox["clientdata",
  FontSlant->"Italic"],
 " is not prescribed in general and is dependent on the analysis function. \
Some functions will not use this argument, so this will be a dummy argument \
defined just for sticking with the prescribed function form. There is however \
a standard agreement that ",
 StyleBox["clientdata",
  FontSlant->"Italic"],
 " should b a string, which can eventually be interpreted within the function \
by using the ToExpression function. This is convenient for calling analysis \
functions from a program that uses Mathlink.\n  \n",
 StyleBox["Returned result",
  FontWeight->"Bold"],
 " must be of the form \n    {",
 StyleBox["calcobj, obj, calcconstr, constr, calcgradobj, gradobj, \
calcgradconstr, gradconstr, ret",
  FontSlant->"Italic"],
 "}\n  where\n    ",
 StyleBox["calcobj, calcconstr, calcgradobj ",
  FontSlant->"Italic"],
 "and ",
 StyleBox["calcgradconstr",
  FontSlant->"Italic"],
 " specify whether the objective function, constraint functions, gradient of \
teh objective function and gradients of the constraint functions were \
evaluated\n    ",
 StyleBox["obj",
  FontSlant->"Italic"],
 " is the value of the objective function (numerical)\n    ",
 StyleBox["constr",
  FontSlant->"Italic"],
 " is a list of constraint function values\n    ",
 StyleBox["gradobj",
  FontSlant->"Italic"],
 " is objective function gradient (vector / list of numbers)\n    ",
 StyleBox["gradconstr",
  FontSlant->"Italic"],
 " is a list of constraint function gradients (themselves being list of \
numbers)\n    ",
 StyleBox["ret",
  FontSlant->"Italic"],
 " is error code (integer) - 0 if no error has been detected or usually a \
negative value if an error occured. \n\n",
 StyleBox["Remarks - inequality constraints",
  FontWeight->"Bold"],
 " \nAgreement for constraint functions corresponding to inequality \
constraint is that constraints are defined as",
 "\n ",
 StyleBox[" ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["c", "i"], " ", 
     RowBox[{"(", 
      StyleBox["p",
       FontWeight->"Bold",
       FontSlant->"Plain"], ")"}]}], "\[LessEqual]", "0"}], TraditionalForm]],
  
  FontSize->14,
  FontColor->RGBColor[1, 0, 0]],
 "\n"
}], "Text"],

Cell[CellGroupData[{

Cell["Remarks on use:", "Subsubsection"],

Cell["\<\
Such definitions of optimisation problems can be used in optimization \
algorithms called from Inverse by calling the function Smathanalyse{} in the \
commmand file. This function must be called in the analysis block of the \
command file, such as e.g. in optmath.cm, which is interpreted below. Inverse \
interpreter function Smathanalyse{} calls the appropriate analysis function \
in Mathematica (whose name and definition data are passed as arguments), gets \
results of evaluation and writes these results to the appropriate pre-defined \
variables. Optimisation algorithms implemented in Inverse pick the result \
from these pre-defined variables (which are implementation specifics of \
Inverse). 

\tOnce again, if we want to use problem definition for solution by \
optimisation procedures implemented in Inverse then Smathanalyse{} (which \
calls a particular analysis function defined in Mathematica) must be called \
within the analysis{} block of Inverse command file. Caller does not need to \
take care of other things because Smathanalyse automatically writes the \
results to appropriate places (pre-defined variables of Inverse) where the \
algorithms look for them. Also, Smath{} obtains the current optimization \
parameters (that are usually set by an optimisation algorithm) and passes \
them properly to the analysis function called in Mathematica. \
\>", "Text"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Example: ",
 StyleBox["anfuncsimp",
  FontWeight->"Bold"],
 "[...], ",
 "very simple unconstrained analysis function ",
 "(quadratic objective, arbitrary number of parameters specified by \
definition data)"
}], "Subsubtitle"],

Cell["Problem description:", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "This particular function is set up for the problem\nmin ",
 StyleBox["f(x1,x1,...)=x1^2+x2^2+...",
  FontWeight->"Bold"],
 " . \nSolution is {1, 1, 1, ..., 1}\nThe number of parameters must be \
specified by the definition data (the last argument)."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"anfuncsimp", "[", 
     RowBox[{
     "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
      "calcgradconstr_", ",", "cd_"}], "]"}], ":=", "\[IndentingNewLine]", 
    " ", 
    RowBox[{"N", "[", "\[IndentingNewLine]", 
     RowBox[{"anfuncbassimp", "[", 
      RowBox[{
      "p", ",", "calcobj", ",", "calcconstr", ",", "calcgradobj", ",", 
       "calcgradconstr", ",", "cd"}], "]"}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anfuncbassimp", "[", 
    RowBox[{
    "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
     "calcgradconstr_", ",", "cd_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"retcalcobj", "=", "calcobj"}], ",", 
       RowBox[{"retcalcconstr", "=", "calcconstr"}], ",", 
       RowBox[{"retcalcgradobj", "=", "calcgradobj"}], ",", 
       RowBox[{"retcalcgradconstr", "=", "calcgradconstr"}], ",", "    ", 
       RowBox[{"obj", "=", "0"}], ",", 
       RowBox[{"constr", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"gradobj", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"gradconstr", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"ret", "=", "0"}], ",", "result"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"$A", " ", "Igor", " ", "jan06"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"debugmode", "!"}], "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<anfuncsimp : analysis at parameters \>\"", ",", "p"}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcobj", "\[NotEqual]", " ", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"obj", "=", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "p", "]"}]}], "}"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcgradobj", "\[NotEqual]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"gradobj", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"2", "*", 
             RowBox[{"p", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "p", "]"}]}], "}"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcconstr", "\[NotEqual]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ret", "=", 
          RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"retcalcconstr", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcgradconstr", "\[NotEqual]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ret", "=", 
          RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"retcalcgradconstr", "=", "0"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"{", 
        RowBox[{
        "retcalcobj", ",", "obj", ",", "\[IndentingNewLine]", "retcalcconstr",
          ",", "constr", ",", "\[IndentingNewLine]", "retcalcgradobj", ",", 
         "gradobj", ",", "\[IndentingNewLine]", "retcalcgradconstr", ",", 
         "gradconstr", ",", "\[IndentingNewLine]", "ret"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Record", " ", "results", " ", "in", " ", "analysis", " ", 
         "history"}], ",", " ", 
        RowBox[{"if", " ", "recording", " ", "is", " ", 
         RowBox[{"on", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"appendanhistory", "[", 
       RowBox[{"\"\<anfuncsimp\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "result", ",", 
          RowBox[{"{", 
           RowBox[{
           "calcobj", ",", "calcconstr", ",", "calcgradobj", ",", 
            "calcgradconstr", ",", "cd"}], "}"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Return", " ", "the", " ", 
        RowBox[{"result", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      "result"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[CellGroupData[{

Cell["Checks (anfuncsimp):", "Subsubsection"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"anfuncsimp", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1", ",", "3"}], "}"}], ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "\"\<4\>\""}], "]"}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testangrad", "[", 
    RowBox[{"anfuncsimp", ",", "\"\<3\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"10", "^", 
      RowBox[{"-", "5"}]}]}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Example: ",
 StyleBox["anfuncsimpconstr",
  FontWeight->"Bold"],
 "[...],",
 StyleBox[" very simple constrained analysis function ",
  FontWeight->"Bold"],
 "(quadratic objective, linear constraints (each parameter must be greater or \
equal to 1), arbitrary number of parameters specified by definition data)"
}], "Subsubtitle"],

Cell["Problem description:", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "This particular function is set up for the problem\nmin ",
 StyleBox["f(x1,x1,...)=x1^2+x2^2+...",
  FontWeight->"Bold"],
 ",\n\nsubject to",
 StyleBox[" x1>1, x2>1, ...",
  FontWeight->"Bold"],
 "\nConstraint functions are therefore\n",
 StyleBox["g_1(x1,x2,...)=1-x1",
  FontWeight->"Bold"],
 ",\n",
 StyleBox["g_2(x1,x2,...)=1-x2,",
  FontWeight->"Bold"],
 ".\nThe solution is ",
 StyleBox["{x1,x2,x3,...}={1,1,1,...}",
  FontWeight->"Bold"],
 ".\n\nThe number of parameters must be specified by the definition data (the \
last argument)."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"anfuncsimpconstr", "[", 
     RowBox[{
     "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
      "calcgradconstr_", ",", "cd_"}], "]"}], ":=", "\[IndentingNewLine]", 
    " ", 
    RowBox[{"N", "[", "\[IndentingNewLine]", 
     RowBox[{"anfuncbassimpconstr", "[", 
      RowBox[{
      "p", ",", "calcobj", ",", "calcconstr", ",", "calcgradobj", ",", 
       "calcgradconstr", ",", "cd"}], "]"}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anfuncbassimpconstr", "[", 
    RowBox[{
    "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
     "calcgradconstr_", ",", "cd_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"retcalcobj", "=", "calcobj"}], ",", 
       RowBox[{"retcalcconstr", "=", "calcconstr"}], ",", 
       RowBox[{"retcalcgradobj", "=", "calcgradobj"}], ",", 
       RowBox[{"retcalcgradconstr", "=", "calcgradconstr"}], ",", "    ", 
       RowBox[{"obj", "=", "0"}], ",", 
       RowBox[{"constr", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"gradobj", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"gradconstr", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"ret", "=", "0"}], ",", "result", ",", "dim", ",", "i", ",", 
       "j"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"$A", " ", "Igor", " ", "jan06"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dim", "=", 
       RowBox[{"Length", "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcobj", "\[NotEqual]", " ", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"obj", "=", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcgradobj", "\[NotEqual]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"gradobj", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"2", "*", 
             RowBox[{"p", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcconstr", "\[NotEqual]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"constr", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"i", "/", "dim"}]}], ")"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"p", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcgradconstr", "\[NotEqual]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"gradconstr", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "dim"}], ",", 
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"gradconstr", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "i"}], "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"i", "/", "dim"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}]}]}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"{", 
        RowBox[{
        "retcalcobj", ",", "obj", ",", "\[IndentingNewLine]", "retcalcconstr",
          ",", "constr", ",", "\[IndentingNewLine]", "retcalcgradobj", ",", 
         "gradobj", ",", "\[IndentingNewLine]", "retcalcgradconstr", ",", 
         "gradconstr", ",", "\[IndentingNewLine]", "ret"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Record", " ", "results", " ", "in", " ", "analysis", " ", 
         "history"}], ",", " ", 
        RowBox[{"if", " ", "recording", " ", "is", " ", 
         RowBox[{"on", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"appendanhistory", "[", 
       RowBox[{"\"\<anfuncsimpconstr\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "result", ",", 
          RowBox[{"{", 
           RowBox[{
           "calcobj", ",", "calcconstr", ",", "calcgradobj", ",", 
            "calcgradconstr", ",", "cd"}], "}"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Return", " ", "the", " ", 
        RowBox[{"result", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      "result"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[CellGroupData[{

Cell["Checks:", "Subsubsection"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"anfuncsimpconstr", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "\"\<cd\>\""}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testangrad", "[", 
    RowBox[{"anfuncsimpconstr", ",", "\"\<3\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
     RowBox[{"10", "^", 
      RowBox[{"-", "5"}]}]}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Test problem  (2 parameters, 2 constraints) -analysis function ",
 StyleBox["testanfunc",
  FontWeight->"Bold"],
 " (the same optimisation problem as in testanfunc() in optbas.c)"
}], "Subsubtitle"],

Cell["Problem description:", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "This particular function is set up for the problem\nmin ",
 StyleBox["f(x,y)=(sin(sqrt(A*(x-CX)^2+B*(y-CY)^2)))^2",
  FontWeight->"Bold"],
 ",\nsubject to x\[GreaterEqual]TX+y^2 and y\[GreaterEqual]TY,\nwhere A=0.1, \
B=0.005, CX=0.2, CY=-1, TX=0.6, and TY=1.\nConstraint functions are therefore\
\n",
 StyleBox["g_1(x,y)=TX+y*y-x",
  FontWeight->"Bold"],
 ",\n",
 StyleBox["g_2(x,y)=TY-y",
  FontWeight->"Bold"],
 ".\nThe solution is ",
 StyleBox["x=1.6,y=1",
  FontWeight->"Bold"],
 ".\n"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"testanfunc", "[", 
     RowBox[{
     "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
      "calcgradconstr_", ",", "cd_"}], "]"}], ":=", "\[IndentingNewLine]", 
    " ", 
    RowBox[{"N", "[", "\[IndentingNewLine]", 
     RowBox[{"testanfuncbas", "[", 
      RowBox[{
      "p", ",", "calcobj", ",", "calcconstr", ",", "calcgradobj", ",", 
       "calcgradconstr", ",", "cd"}], "]"}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testanfuncbas", "[", 
   RowBox[{
   "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
    "calcgradconstr_", ",", "cd_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "A", ",", "B", ",", "CX", ",", "CY", ",", "TX", ",", "TY", ",", "x", ",",
       "y", ",", "f", ",", "g1", ",", "g2", ",", 
      RowBox[{"obj", "=", "0"}], ",", 
      RowBox[{"constr", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"gradobj", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"gradconstr", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"ret", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"$A", " ", "Igor", " ", "jan06"}], ";"}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"A", "=", "0.1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"B", "=", "0.005"}], ";", "\[IndentingNewLine]", 
     RowBox[{"CX", "=", "0.2"}], ";", "\[IndentingNewLine]", 
     RowBox[{"CY", "=", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"TX", "=", "0.6"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TY", "=", "1"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Functions", " ", "that", " ", "constitute", " ", "problem", " ", 
       RowBox[{"definition", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"Sin", "[", " ", 
         RowBox[{"Sqrt", "[", " ", 
          RowBox[{
           RowBox[{"A", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "-", "CX"}], ")"}], "^", "2"}]}], "+", 
           RowBox[{"B", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"y", "-", "CY"}], ")"}], "^", "2"}]}]}], " ", "]"}], 
         " ", "]"}], " ", ")"}], "^", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g1", "[", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
      StyleBox[
       RowBox[{"TX", "+", 
        RowBox[{"y", "*", "y"}], "-", "x"}],
       FontWeight->"Bold"]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g2", "[", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
      StyleBox[
       RowBox[{"TY", "-", "y"}],
       FontWeight->"Bold"]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Function testanfunc called.\\n\>\"", "]"}], 
       ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"calcobj", "\[NotEqual]", " ", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"obj", "=", 
         RowBox[{"f", "[", "p", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<Calculating objective function.\\n\>\"", "]"}], 
        ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"calcgradobj", "\[NotEqual]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gradobj", "=", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "x"}], "]"}], 
            "    ", ",", " ", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "y"}], "]"}]}], 
           " ", "\[IndentingNewLine]", "}"}], "    ", "/.", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "\[Rule]", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "   ", ",", "  ", 
            RowBox[{"y", "\[Rule]", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "  ", "}"}]}]}], "   ", 
        ";"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Calculating gradient of the objective function.\\n\>\"", "]"}], 
        ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"calcconstr", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]",
        
       RowBox[{
        RowBox[{"constr", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g1", "[", "p", "]"}], ",", 
           RowBox[{"g2", "[", "p", "]"}]}], "}"}]}], ";"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<Calculating constraint functions.\\n\>\"", "]"}], 
        ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"calcgradconstr", "\[NotEqual]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gradconstr", "=", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "  ", 
             RowBox[{
              RowBox[{"D", "[", " ", 
               RowBox[{
                RowBox[{"g1", "[", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "x"}], 
               "]"}], ",", "     ", 
              RowBox[{"D", "[", " ", 
               RowBox[{
                RowBox[{"g1", "[", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "y"}], 
               "]"}]}], "  ", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", "  ", 
             RowBox[{
              RowBox[{"D", "[", " ", 
               RowBox[{
                RowBox[{"g2", "[", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "x"}], " ",
                "]"}], ",", "     ", 
              RowBox[{"D", "[", " ", 
               RowBox[{
                RowBox[{"g2", "[", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "y"}], 
               "]"}]}], "  ", "}"}]}], "\[IndentingNewLine]", "}"}], "   ", "/.",
           " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "\[Rule]", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "   ", ",", "  ", 
            RowBox[{"y", "\[Rule]", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "  ", "}"}]}]}], "  ", 
        ";"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Calculating gradient of the constraint functions.\\n\>\"", 
         "]"}], ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Return", " ", "the", " ", 
       RowBox[{"result", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "calcobj", ",", "obj", ",", "\[IndentingNewLine]", "calcconstr", ",", 
       "constr", ",", "\[IndentingNewLine]", "calcgradobj", ",", "gradobj", 
       ",", "\[IndentingNewLine]", "calcgradconstr", ",", "gradconstr", ",", 
       "\[IndentingNewLine]", "ret"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[CellGroupData[{

Cell["Check (testanfunc):", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"Sin", "[", " ", 
        RowBox[{"Sqrt", "[", " ", 
         RowBox[{
          RowBox[{"A", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "-", "CX"}], ")"}], "^", "2"}]}], "+", 
          RowBox[{"B", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"y", "-", "CY"}], ")"}], "^", "2"}]}]}], " ", "]"}], " ",
         "]"}], " ", ")"}], "^", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g1", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     StyleBox[
      RowBox[{"TX", "+", 
       RowBox[{"y", "*", "y"}], "-", "x"}],
      FontWeight->"Bold"]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g2", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     StyleBox[
      RowBox[{"TY", "-", "y"}],
      FontWeight->"Bold"]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<f[{x,y}]: \>\"", ",", 
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<g1[{x,y}]: \>\"", ",", 
      RowBox[{"g1", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<g2[{x,y}]: \>\"", ",", 
      RowBox[{"g2", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<{ D[f[{x,y}],x],D[f[{x,y}],y]}: \>\"", ",", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "x"}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "y"}], "]"}]}], 
       "}"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<{\[IndentingNewLine]{ D[g1[{x,y}],x],D[g1[{x,y}],y]},\
\[IndentingNewLine]{ D[g2[{x,y}],x],D[g2[{x,y}],y]}\[IndentingNewLine]}: \
\>\"", ",", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"g1", "[", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"g1", "[", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "y"}], "]"}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"g2", "[", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"g2", "[", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "y"}], "]"}]}], 
         "}"}]}], "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<testanfuncbas[{x,y},1,1,1,1,cd]: \>\"", ",", 
      RowBox[{"testanfuncbas", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", 
        "1", ",", "\"\<cd\>\""}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<testanfuncbas[{x,y},1,1,1,1,cd]: \>\"", ",", 
      RowBox[{"testanfuncbas", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", 
        "1", ",", "\"\<cd\>\""}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"\"\<testanfuncbas[{x,y},1,1,1,1,\>\"", "cd", "\"\<]: \>\""}], 
      ",", 
      RowBox[{"testanfuncbas", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", 
        "1", ",", "\"\<cd\>\""}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Test problem 1 (2 parameters, 2 constraints) -analysis function ",
 StyleBox["testanfunc1",
  FontWeight->"Bold"],
 " (the same optimisation problem as in testanfunc1() in optbas.c)"
}], "Subsubtitle"],

Cell["Problem description:", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "min f(x,y)=x^2+y^4, subject to y\[GreaterEqual](x-3)^6   and   y\
\[GreaterEqual]17-x^2,\ntherefore \nf(x,y)=x^2+y^4,\ng_1(x,y)=(x-3)^6-y,\n\
g_2(x,y)=17-x^2-y.\n",
 StyleBox["Solution:",
  FontWeight->"Bold"],
 " ",
 "Optimum: {4,1},  objective func.in optimum:17.\n"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"testanfunc1", "[", 
     RowBox[{
     "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
      "calcgradconstr_", ",", "cd_"}], "]"}], ":=", "\[IndentingNewLine]", 
    " ", 
    RowBox[{"N", "[", "\[IndentingNewLine]", 
     RowBox[{"testanfunc1bas", "[", 
      RowBox[{
      "p", ",", "calcobj", ",", "calcconstr", ",", "calcgradobj", ",", 
       "calcgradconstr", ",", "cd"}], "]"}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testanfunc1bas", "[", 
   RowBox[{
   "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
    "calcgradconstr_", ",", "cd_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "f", ",", "g1", ",", "g2", ",", 
      RowBox[{"obj", "=", "0"}], ",", 
      RowBox[{"constr", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"gradobj", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"gradconstr", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"ret", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"$A", " ", "Igor", " ", "jan06"}], ";"}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Functions", " ", "that", " ", "constitute", " ", "problem", " ", 
      RowBox[{"definition", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "4"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g1", "[", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "3"}], ")"}], "^", "6"}], "-", "y"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g2", "[", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
      RowBox[{"17", "-", 
       RowBox[{"x", "^", "2"}], "-", "y"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Function testanfunc1 called.\\n\>\"", "]"}],
        ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"calcobj", "\[NotEqual]", " ", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"obj", "=", 
         RowBox[{"f", "[", "p", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<Calculating objective function.\\n\>\"", "]"}], 
        ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"calcgradobj", "\[NotEqual]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gradobj", "=", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "x"}], "]"}], 
            "    ", ",", " ", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "y"}], "]"}]}], 
           " ", "\[IndentingNewLine]", "}"}], "    ", "/.", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "\[Rule]", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "   ", ",", "  ", 
            RowBox[{"y", "\[Rule]", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "  ", "}"}]}]}], "   ", 
        ";"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Calculating gradient of the objective function.\\n\>\"", "]"}], 
        ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"calcconstr", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]",
        
       RowBox[{
        RowBox[{"constr", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g1", "[", "p", "]"}], ",", 
           RowBox[{"g2", "[", "p", "]"}]}], "}"}]}], ";"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<Calculating constraint functions.\\n\>\"", "]"}], 
        ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"calcgradconstr", "\[NotEqual]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gradconstr", "=", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "  ", 
             RowBox[{
              RowBox[{"D", "[", " ", 
               RowBox[{
                RowBox[{"g1", "[", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "x"}], 
               "]"}], ",", "     ", 
              RowBox[{"D", "[", " ", 
               RowBox[{
                RowBox[{"g1", "[", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "y"}], 
               "]"}]}], "  ", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", "  ", 
             RowBox[{
              RowBox[{"D", "[", " ", 
               RowBox[{
                RowBox[{"g2", "[", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "x"}], " ",
                "]"}], ",", "     ", 
              RowBox[{"D", "[", " ", 
               RowBox[{
                RowBox[{"g2", "[", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "y"}], 
               "]"}]}], "  ", "}"}]}], "\[IndentingNewLine]", "}"}], "   ", "/.",
           " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "\[Rule]", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "   ", ",", "  ", 
            RowBox[{"y", "\[Rule]", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "  ", "}"}]}]}], "  ", 
        ";"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Calculating gradient of the constraint functions.\\n\>\"", 
         "]"}], ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Return", " ", "the", " ", 
       RowBox[{"result", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "calcobj", ",", "obj", ",", "\[IndentingNewLine]", "calcconstr", ",", 
       "constr", ",", "\[IndentingNewLine]", "calcgradobj", ",", "gradobj", 
       ",", "\[IndentingNewLine]", "calcgradconstr", ",", "gradconstr", ",", 
       "\[IndentingNewLine]", "ret"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[CellGroupData[{

Cell["Check (testanfunc1):", "Subsubsection"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"y", "^", "4"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g1", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "3"}], ")"}], "^", "6"}], "-", "y"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g2", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{"17", "-", 
      RowBox[{"x", "^", "2"}], "-", "y"}]}], ";"}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testanfunc1bas", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "\"\<cd\>\""}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testanfunc1", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "\"\<cd\>\""}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testanfunc1", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.1", ",", "1.2"}], "}"}], ",", "1", ",", "1", ",", "1", ",", 
     "1", ",", "\"\<cd\>\""}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"testangrad", "[", 
      RowBox[{"testanfunc1", ",", "\"\<cd\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.1", ",", "1.2"}], "}"}], ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "6"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
    ","}], "]"}], ";"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Test problem  simple (2 param. quadratic function and two linear \
constraints): ",
 StyleBox["testanfuncsimp",
  FontWeight->"Bold"]
}], "Subsubtitle",
 CellChangeTimes->{3.412429919421875*^9}],

Cell["Problem description:", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "min f(x,y)=(x/2)^2+(y/1)^2, subject to x+y\[GreaterEqual]2   and   y\
\[GreaterEqual]0.5,\ntherefore \nf(x,y)= (x/2)^2 + (y/1)^2 ,\ng_1(x,y)=2-x-y \
,\ng_2(x,y)=0.5-y .\n",
 StyleBox["Solution:",
  FontWeight->"Bold"],
 " Optimum: {1.5,0.5},  objective func.in optimum: ",
 "1.5625",
 ".\n"
}], "Text"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"testanfuncsimp", "[", 
      RowBox[{
      "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
       "calcgradconstr_", ",", "cd_"}], "]"}], ":=", "\[IndentingNewLine]", 
     " ", 
     RowBox[{"N", "[", "\[IndentingNewLine]", 
      RowBox[{"testanfuncsimpbas", "[", 
       RowBox[{
       "p", ",", "calcobj", ",", "calcconstr", ",", "calcgradobj", ",", 
        "calcgradconstr", ",", "cd"}], "]"}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testanfuncsimpbas", "[", 
     RowBox[{
     "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
      "calcgradconstr_", ",", "cd_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "f", ",", "g1", ",", "g2", ",", 
        RowBox[{"obj", "=", "0"}], ",", 
        RowBox[{"constr", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"gradobj", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"gradconstr", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"ret", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"$A", " ", "Igor", " ", "jan06"}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Functions", " ", "that", " ", "constitute", " ", "problem", " ", 
        RowBox[{"definition", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"{", 
          RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "/", "2"}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y", "/", "1"}], ")"}], "^", "2"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g1", "[", 
         RowBox[{"{", 
          RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
        RowBox[{"2", "-", "x", "-", "y"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g2", "[", 
         RowBox[{"{", 
          RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
        RowBox[{"0.5", "-", "y"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<Function testanfunc1 called.\\n\>\"", "]"}], 
         ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"calcobj", "\[NotEqual]", " ", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"obj", "=", 
           RowBox[{"f", "[", "p", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Print", "[", "\"\<Calculating objective function.\\n\>\"", "]"}], 
          ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"calcgradobj", "\[NotEqual]", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"gradobj", "=", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "x"}], "]"}], 
              "    ", ",", " ", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "y"}], "]"}]}], 
             " ", "\[IndentingNewLine]", "}"}], "    ", "/.", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", 
               RowBox[{"p", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "   ", ",", "  ", 
              RowBox[{"y", "\[Rule]", 
               RowBox[{"p", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "  ", "}"}]}]}], "   ", 
          ";"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Calculating gradient of the objective function.\\n\>\"", 
           "]"}], ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]",
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"calcconstr", "\[NotEqual]", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"constr", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"g1", "[", "p", "]"}], ",", 
             RowBox[{"g2", "[", "p", "]"}]}], "}"}]}], ";"}]}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Print", "[", "\"\<Calculating constraint functions.\\n\>\"", "]"}],
           ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", "]"}],
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"calcgradconstr", "\[NotEqual]", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"gradconstr", "=", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "  ", 
               RowBox[{
                RowBox[{"D", "[", " ", 
                 RowBox[{
                  RowBox[{"g1", "[", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "x"}], 
                 "]"}], ",", "     ", 
                RowBox[{"D", "[", " ", 
                 RowBox[{
                  RowBox[{"g1", "[", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "y"}], 
                 "]"}]}], "  ", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", "  ", 
               RowBox[{
                RowBox[{"D", "[", " ", 
                 RowBox[{
                  RowBox[{"g2", "[", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "x"}], 
                 " ", "]"}], ",", "     ", 
                RowBox[{"D", "[", " ", 
                 RowBox[{
                  RowBox[{"g2", "[", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", "y"}], 
                 "]"}]}], "  ", "}"}]}], "\[IndentingNewLine]", "}"}], "   ", 
            "/.", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", 
               RowBox[{"p", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "   ", ",", "  ", 
              RowBox[{"y", "\[Rule]", 
               RowBox[{"p", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "  ", "}"}]}]}], "  ", 
          ";"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Calculating gradient of the constraint functions.\\n\>\"", 
           "]"}], ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]",
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Return", " ", "the", " ", 
         RowBox[{"result", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "calcobj", ",", "obj", ",", "\[IndentingNewLine]", "calcconstr", ",", 
         "constr", ",", "\[IndentingNewLine]", "calcgradobj", ",", "gradobj", 
         ",", "\[IndentingNewLine]", "calcgradconstr", ",", "gradconstr", ",",
          "\[IndentingNewLine]", "ret"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[CellGroupData[{

Cell["Checks (testanfuncsimp):", "Subsubsection"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"y", "^", "4"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g1", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "3"}], ")"}], "^", "6"}], "-", "y"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g2", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{"17", "-", 
      RowBox[{"x", "^", "2"}], "-", "y"}]}], ";"}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testanfuncsimpbas", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "\"\<cd\>\""}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testanfuncsimp", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "\"\<cd\>\""}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testanfuncsimp", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "\"\<0\>\""}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testanfuncsimp", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.1", ",", "1.2"}], "}"}], ",", "1", ",", "1", ",", "1", ",", 
     "1", ",", "\"\<cd\>\""}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.5718495030215707`*^9, 3.5718495056267753`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Test analysis function - Constrained and Unconstrained Rosenbrock:\
\>", "Subsubtitle",
 CellChangeTimes->{{3.5718467513472595`*^9, 3.571846772224453*^9}, {
  3.571849535862836*^9, 3.571849539705055*^9}}],

Cell[TextData[{
 "AnFuncRosenbrockConstrained: ",
 StyleBox[" standard analysis functions, symbolic or numerical parameters.",
  FontWeight->"Plain"],
 "\nAnFuncRosenbrockConstrainedNum:",
 StyleBox[" standard analysis function, requires numerical paraeters. \n",
  FontWeight->"Plain"],
 "AnFuncRosenbrock: ",
 StyleBox[" standard analysis functions, symbolic or numerical parameters.",
  FontWeight->"Plain"],
 "\nAnFuncRosenbrockNum:",
 StyleBox[" standard analysis function, requires numerical paraeters. \n",
  FontWeight->"Plain"],
 "ObjRosenbrock:",
 StyleBox[" objective function applicable only to unconstrained minimization, \
symbolic or numerical parameters.\n",
  FontWeight->"Plain"],
 "ObjRosenbrockNum:",
 StyleBox[" objective function applicable only to unconstrained minimization, \
requires numerical paraeters.",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellChangeTimes->{{3.571843839480649*^9, 3.571843853099473*^9}, {
  3.5718439443948603`*^9, 3.5718439560855293`*^9}, {3.571846625943651*^9, 
  3.5718466630918436`*^9}, {3.571847164114993*^9, 3.5718471647700305`*^9}, {
  3.5718490706279144`*^9, 3.571849095533616*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Rosenbrock", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"100", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", "-", 
        RowBox[{"x", "^", "2"}]}], ")"}], "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rosenbrock", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"Rosenbrock", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RosenbrockNum", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumberQ"}], ",", 
     RowBox[{"y_", "?", "NumberQ"}]}], "]"}], ":=", 
   RowBox[{"Rosenbrock", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RosenbrockNum", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x_", "?", "NumberQ"}], ",", 
      RowBox[{"y_", "?", "NumberQ"}]}], "}"}], "]"}], ":=", 
   RowBox[{"Rosenbrock", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evaluationCount", " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RosenbrockControlled", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumberQ"}], ",", 
     RowBox[{"y_", "?", "NumberQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "a", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"evaluationCount", "++"}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"Rosenbrock", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Rosenbrock, evaluation No. \>\"", ",", "evaluationCount", ",", 
        " ", "\"\<, x = \>\"", ",", " ", "x", ",", " ", "\"\<, y = \>\"", ",",
         " ", "y", ",", " ", "\"\<, f = \>\"", ",", "a"}], "]"}], ";", 
      "\[IndentingNewLine]", "a"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RosenbrockControlled", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"RosenbrockControlled", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "testanfunc0", ",", "testanfunc", ",", "testanfuncnum", ",", "testobj0", 
      ",", "testobj", ",", "testobjnum"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{"Rosenbrock", ",", "obj0", ",", "constr01", ",", "constr02"}], 
    "]"}], " ", "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TestConstrRosenbrock01", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"x", "+", "y", "-", "1"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TestConstrRosenbrock02", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"y", "-", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ObjRosenbrockNum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"par__", "?", "NumberQ"}], "}"}], ",", "cd_"}], "]"}], ":=", 
     RowBox[{"ObjRosenbrock", "[", 
      RowBox[{
       RowBox[{"{", "par", "}"}], ",", "cd"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ObjRosenbrock", "[", 
      RowBox[{"par_", ",", "cd_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"AnFuncRosenbrockConstrained", "[", 
       RowBox[{"par", ",", "1", ",", "1", ",", "1", ",", "1", ",", "cd"}], 
       "]"}], " ", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AnFuncRosenbrockConstrainedNum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"par__", "?", "NumberQ"}], "}"}], ",", "calcobj_", ",", 
       "calcconstr_", ",", "calcgradobj_", ",", "calcgradconstr_", ",", 
       "cd_"}], "]"}], ":=", 
     RowBox[{"AnFuncRosenbrockConstrained", "[", 
      RowBox[{
       RowBox[{"{", "par", "}"}], ",", "calcobj", ",", "calcconstr", ",", 
       "calcgradobj", ",", "calcgradconstr", ",", "cd"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AnFuncRosenbrockConstrained", "[", 
      RowBox[{
      "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
       "calcgradconstr_", ",", "cd_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p", "=", 
          RowBox[{"{", "par", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\< testanfunc, parameters p: \>\"", ",", "p"}], "]"}], 
         ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"cd", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<hojla\>\"", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"1", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{"res", "=", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"calcobj", ",", 
              RowBox[{"obj0", "[", "p", "]"}], ",", "\[IndentingNewLine]", 
              "calcconstr", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"constr01", "[", "p", "]"}], ",", 
                RowBox[{"constr02", "[", "p", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", "calcgradobj", ",", 
              RowBox[{"gradfunc", "[", 
               RowBox[{"obj0", ",", "p"}], "]"}], ",", "\[IndentingNewLine]", 
              "calcgradconstr", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"gradfunc", "[", 
                 RowBox[{"constr01", ",", "p"}], "]"}], ",", 
                RowBox[{"gradfunc", "[", 
                 RowBox[{"constr02", ",", "p"}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", "cd"}], "\[IndentingNewLine]", "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"res", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"calcobj", ",", 
               RowBox[{"obj0", "[", "p", "]"}], ",", "\[IndentingNewLine]", 
               "calcconstr", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"constr01", "[", "p", "]"}], ",", 
                 RowBox[{"constr02", "[", "p", "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", "calcgradobj", ",", 
               RowBox[{"gradfunc", "[", 
                RowBox[{"obj0", ",", "p"}], "]"}], ",", "\[IndentingNewLine]",
                "calcgradconstr", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"gradfunc", "[", 
                  RowBox[{"constr01", ",", "p"}], "]"}], ",", 
                 RowBox[{"gradfunc", "[", 
                  RowBox[{"constr02", ",", "p"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", "cd"}], "\[IndentingNewLine]", "}"}]}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"calcobj", ",", 
           RowBox[{"Rosenbrock", "[", "p", "]"}], ",", "\[IndentingNewLine]", 
           "calcconstr", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"TestConstrRosenbrock01", "[", "p", "]"}], ",", 
             RowBox[{"TestConstrRosenbrock02", "[", "p", "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", "calcgradobj", ",", 
           RowBox[{"gradfunc", "[", 
            RowBox[{"Rosenbrock", ",", "p"}], "]"}], ",", 
           "\[IndentingNewLine]", "calcgradconstr", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"gradfunc", "[", 
              RowBox[{"TestConstrRosenbrock01", ",", "p"}], "]"}], ",", 
             RowBox[{"gradfunc", "[", 
              RowBox[{"TestConstrRosenbrock02", ",", "p"}], "]"}]}], "}"}], 
           ",", "\[IndentingNewLine]", "cd"}], "\[IndentingNewLine]", "}"}]}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"saveanresults", ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"reganres", "[", 
              RowBox[{"p", ",", "res"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "*)"}],
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AnFuncRosenbrockNum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"par__", "?", "NumberQ"}], "}"}], ",", "calcobj_", ",", 
       "calcconstr_", ",", "calcgradobj_", ",", "calcgradconstr_", ",", 
       "cd_"}], "]"}], ":=", 
     RowBox[{"AnFuncRosenbrock", "[", 
      RowBox[{
       RowBox[{"{", "par", "}"}], ",", "calcobj", ",", "calcconstr", ",", 
       "calcgradobj", ",", "calcgradconstr", ",", "cd"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AnFuncRosenbrock", "[", 
      RowBox[{
      "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
       "calcgradconstr_", ",", "cd_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"calcobj", ",", 
           RowBox[{"Rosenbrock", "[", "p", "]"}], ",", "\[IndentingNewLine]", 
           "calcconstr", ",", 
           RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "calcgradobj", ",",
            
           RowBox[{"gradfunc", "[", 
            RowBox[{"TestObj0", ",", "p"}], "]"}], ",", "\[IndentingNewLine]",
            "calcgradconstr", ",", 
           RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "cd"}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.571838233325865*^9, 3.571838234101909*^9}, {
   3.57183827314773*^9, 3.571838339704981*^9}, 3.5718383768171034`*^9, {
   3.5718396226723957`*^9, 3.571839673913831*^9}, {3.5718434432563906`*^9, 
   3.57184345551047*^9}, {3.5718434865252438`*^9, 3.5718435647807903`*^9}, {
   3.571843641436079*^9, 3.5718436902215595`*^9}, {3.5718437849643803`*^9, 
   3.571843831337435*^9}, {3.5718444576053066`*^9, 3.571844497259902*^9}, {
   3.571845548623254*^9, 3.571845560907956*^9}, {3.571846670283456*^9, 
   3.571846703243715*^9}, {3.5718469196570625`*^9, 3.5718469231332617`*^9}, {
   3.571846957450594*^9, 3.5718470499612913`*^9}, {3.5718471065230727`*^9, 
   3.571847116990691*^9}, {3.571847894407714*^9, 3.571847919807167*^9}, 
   3.5718479684879513`*^9, {3.571849141220229*^9, 3.5718491861433554`*^9}, {
   3.571849220089015*^9, 3.571849267684574*^9}, {3.5718493304491644`*^9, 
   3.571849360395877*^9}},
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[CellGroupData[{

Cell["Tests of Rosenbrock constraint analysis function:", "Subsection",
 CellChangeTimes->{{3.571848684603591*^9, 3.5718486958532343`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"AnFuncRosenbrockConstrained", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "cd33"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AnFuncRosenbrockConstrainedNum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "cd33"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AnFuncRosenbrockConstrainedNum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "cd33"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AnFuncRosenbrockConstrainedNum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "cd33"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.571847373402748*^9, {3.571847607199356*^9, 3.5718476107045565`*^9}, {
   3.5718476478286796`*^9, 3.5718476592083306`*^9}, {3.571847693723296*^9, 
   3.571847698184904*^9}, {3.571847771659129*^9, 3.5718478213104897`*^9}, {
   3.5718480063266954`*^9, 3.5718480115215044`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], "2"], "+", 
    RowBox[{"100", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "+", "y"}], ")"}], "2"]}]}], ",", "1", 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", "x", "-", "y"}], ",", 
     RowBox[{"1", "-", "y"}]}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}]}], "-", 
      RowBox[{"400", " ", "x", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["x", "2"]}], "+", "y"}], ")"}]}]}], ",", 
     RowBox[{"200", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "+", "y"}], ")"}]}]}], "}"}], ",", "1", 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd33"}], "}"}]], "Output",
 CellChangeTimes->{
  3.571847376022639*^9, 3.5718476120266323`*^9, 3.5718476493397665`*^9, {
   3.5718476949244986`*^9, 3.5718476991833057`*^9}, 3.571847784082839*^9, {
   3.5718478175497537`*^9, 3.5718478218096905`*^9}, {3.57184799787148*^9, 
   3.5718480126915064`*^9}, 3.5718486991654243`*^9, {3.5718492812753515`*^9, 
   3.5718492863216405`*^9}, 3.5718493650371428`*^9, 3.571849415363978*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd33"}], "}"}]], "Output",
 CellChangeTimes->{
  3.571847376022639*^9, 3.5718476120266323`*^9, 3.5718476493397665`*^9, {
   3.5718476949244986`*^9, 3.5718476991833057`*^9}, 3.571847784082839*^9, {
   3.5718478175497537`*^9, 3.5718478218096905`*^9}, {3.57184799787148*^9, 
   3.5718480126915064`*^9}, 3.5718486991654243`*^9, {3.5718492812753515`*^9, 
   3.5718492863216405`*^9}, 3.5718493650371428`*^9, 3.5718494153699784`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2504", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"6004", ",", 
     RowBox[{"-", "1000"}]}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd33"}], "}"}]], "Output",
 CellChangeTimes->{
  3.571847376022639*^9, 3.5718476120266323`*^9, 3.5718476493397665`*^9, {
   3.5718476949244986`*^9, 3.5718476991833057`*^9}, 3.571847784082839*^9, {
   3.5718478175497537`*^9, 3.5718478218096905`*^9}, {3.57184799787148*^9, 
   3.5718480126915064`*^9}, 3.5718486991654243`*^9, {3.5718492812753515`*^9, 
   3.5718492863216405`*^9}, 3.5718493650371428`*^9, 3.571849415372978*^9}],

Cell[BoxData[
 RowBox[{"AnFuncRosenbrockConstrainedNum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "cd33"}], "]"}]], "Output",
 CellChangeTimes->{
  3.571847376022639*^9, 3.5718476120266323`*^9, 3.5718476493397665`*^9, {
   3.5718476949244986`*^9, 3.5718476991833057`*^9}, 3.571847784082839*^9, {
   3.5718478175497537`*^9, 3.5718478218096905`*^9}, {3.57184799787148*^9, 
   3.5718480126915064`*^9}, 3.5718486991654243`*^9, {3.5718492812753515`*^9, 
   3.5718492863216405`*^9}, 3.5718493650371428`*^9, 3.571849415376979*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ObjRosenbrock", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", " ", "cd33"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ObjRosenbrockNum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", " ", "cd33"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ObjRosenbrockNum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", " ", "cd33"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ObjRosenbrockNum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", " ", "cd33"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.571847389816719*^9, {3.5718478431261826`*^9, 3.5718478752466383`*^9}, {
   3.5718480420039577`*^9, 3.5718480665961275`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "x"}], ")"}], "2"], "+", 
  RowBox[{"100", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "+", "y"}], ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.571847390893121*^9, 3.5718478388361745`*^9, 
  3.57184787612024*^9, 3.571847939166274*^9, 3.5718479754817853`*^9, 
  3.5718480677901955`*^9, 3.571848699256429*^9, 3.5718492893458138`*^9, 
  3.5718493859433384`*^9, 3.571849418138137*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.571847390893121*^9, 3.5718478388361745`*^9, 
  3.57184787612024*^9, 3.571847939166274*^9, 3.5718479754817853`*^9, 
  3.5718480677901955`*^9, 3.571848699256429*^9, 3.5718492893458138`*^9, 
  3.5718493859433384`*^9, 3.571849418145137*^9}],

Cell[BoxData["2504"], "Output",
 CellChangeTimes->{3.571847390893121*^9, 3.5718478388361745`*^9, 
  3.57184787612024*^9, 3.571847939166274*^9, 3.5718479754817853`*^9, 
  3.5718480677901955`*^9, 3.571848699256429*^9, 3.5718492893458138`*^9, 
  3.5718493859433384`*^9, 3.5718494181511374`*^9}],

Cell[BoxData[
 RowBox[{"ObjRosenbrockNum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", "cd33"}], "]"}]], "Output",
 CellChangeTimes->{3.571847390893121*^9, 3.5718478388361745`*^9, 
  3.57184787612024*^9, 3.571847939166274*^9, 3.5718479754817853`*^9, 
  3.5718480677901955`*^9, 3.571848699256429*^9, 3.5718492893458138`*^9, 
  3.5718493859433384`*^9, 3.57184941818814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"TestConstrRosenbrock01", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
   RowBox[{"TestConstrRosenbrock02", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.571848156998386*^9, 3.571848169197607*^9}, {
  3.571848224741892*^9, 3.5718482294661627`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "-", "x", "-", "y"}], ",", 
   RowBox[{"1", "-", "y"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5718481704300094`*^9, 3.5718482303862147`*^9, 
  3.571848699358435*^9, 3.571849421918353*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Rosenbrock", "[", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "]"}], "-", 
  RowBox[{
   RowBox[{"AnFuncRosenbrockConstrained", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "cd33"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.571848239250722*^9, 3.5718482494423046`*^9}, {
  3.571848286639063*^9, 3.5718483079019003`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.571848308822302*^9, 3.57184869944744*^9, 
  3.5718494267646303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"TestConstrRosenbrock01", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
    RowBox[{"TestConstrRosenbrock02", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "}"}], "-", 
  RowBox[{
   RowBox[{"AnFuncRosenbrockConstrained", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "cd33"}], "]"}], "[", 
   RowBox[{"[", "4", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5718483386651545`*^9, 3.5718483573407*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.57184835802874*^9, 3.5718486995244446`*^9, 
  3.571849432482957*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gradfunc", "[", 
   RowBox[{"Rosenbrock", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "-", 
  RowBox[{
   RowBox[{"AnFuncRosenbrockConstrained", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "cd33"}], "]"}], "[", 
   RowBox[{"[", "6", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5718483757677546`*^9, 3.5718483840382276`*^9}, {
   3.5718484369086103`*^9, 3.571848508356351*^9}, 3.5718485585552225`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.571848450511834*^9, {3.5718484917374*^9, 3.5718485093444076`*^9}, 
   3.5718485596542854`*^9, 3.571848699597449*^9, 3.5718494353381205`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"gradfunc", "[", 
     RowBox[{"TestConstrRosenbrock01", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
    RowBox[{"gradfunc", "[", 
     RowBox[{"TestConstrRosenbrock02", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "}"}], "-", 
  RowBox[{
   RowBox[{"AnFuncRosenbrockConstrained", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "cd33"}], "]"}], "[", 
   RowBox[{"[", "8", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5718485951737213`*^9, 3.5718486429232073`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.571848630429783*^9, 3.5718486436832504`*^9}, 
   3.5718486996614523`*^9, 3.5718494383312917`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.412429948453125*^9}],

Cell[CellGroupData[{

Cell["Penalty function (with derivatives)", "Subtitle",
 CellChangeTimes->{{3.41234996759375*^9, 3.412350007640625*^9}, {
  3.412429214515625*^9, 3.41242921903125*^9}}],

Cell["\<\
This section defines a penalty functioin that is assigned to the original \
constrained optimization problem. The function is written in the standard \
analysis form (with no constraints in results since they are replaced by \
penalty terms added to the objective function). Penaly parameters must be \
defined in the last argument cd.
 \
\>", "Text",
 CellChangeTimes->{{3.412428201125*^9, 3.4124282399375*^9}}],

Cell[CellGroupData[{

Cell["Definitions of penalty generating functions :", "Subsection",
 CellChangeTimes->{{3.412237501484375*^9, 3.412237513265625*^9}}],

Cell[TextData[{
 "derpenfunc",
 StyleBox["  [ penfunc, c, param ] -",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" calculates & returns the derivative of a penalty function \
derpenfunc with respect to ",
  FontWeight->"Plain"],
 StyleBox["c",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" (constrint function)\n    ",
  FontWeight->"Plain"],
 StyleBox["penfunc",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - penaltr function, must take the remaining arguments ",
  FontWeight->"Plain"],
 StyleBox["c",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontWeight->"Plain"],
 StyleBox["param",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[". \n    ",
  FontWeight->"Plain"],
 StyleBox["c",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - value of the constriant function that generates the penalty \
term (i.e. argument of the penalty function)\n    ",
  FontWeight->"Plain"],
 StyleBox["param",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - additional parameters (definition data) for the penalty \
function.\n",
  FontWeight->"Plain"],
 "derpenfunc",
 StyleBox["  [ penfunc, c, p1, p2 ] -",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" the same with two definition parameters, ",
  FontWeight->"Plain"],
 StyleBox["p1",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontWeight->"Plain"],
 StyleBox["p2\n",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "derpenfunc",
 StyleBox["  [ penfunc, c, p1, p2 ] -",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" the same with two definition parameters, ",
  FontWeight->"Plain"],
 StyleBox["p1",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontWeight->"Plain"],
 StyleBox["p2\n\n  ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "Penalty generating functions",
 StyleBox[" are provided in different forms:\n",
  FontWeight->"Plain"],
 StyleBox["func [ c, p1, p2, ... ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - basic form, with all parameters being numbers\n",
  FontWeight->"Plain"],
 StyleBox["func [ c, { p1, p2, ... } ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - definition data out in a single vector - form suited for use in \
higher level functions (such as ",
  FontWeight->"Plain"],
 "penaltyanfunc",
 StyleBox[") because the number of parameters is constant over all \
implemented penalty functions.\n  There are also reduced forms with less \
parameters for some functions, i.e. in functions with 2 parameters these two \
are taken in some constant ratio to reduce to one parameter.\n  Implemented \
penalty functions: \n  ",
  FontWeight->"Plain"],
 "penfuncsqr",
 StyleBox[" [ c, { d, h } ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - square-constant function. It is zero until ",
  FontWeight->"Plain"],
 StyleBox["-d",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", and has value ",
  FontWeight->"Plain"],
 StyleBox["h",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" at 0.\n  ",
  FontWeight->"Plain"],
 "penfunccub, penfunc4",
 StyleBox[" [ c, { d, h } ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - cubic-constant or 4-th-order-constant function. It is zero \
until ",
  FontWeight->"Plain"],
 StyleBox["-d",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", and has value ",
  FontWeight->"Plain"],
 StyleBox["h",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" at 0.\n  ",
  FontWeight->"Plain"],
 "penfuncexp",
 StyleBox[" [ c, { d, h } ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" -exponential function ",
  FontWeight->"Plain"],
 StyleBox["h",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["*Exp[",
  FontWeight->"Plain"],
 StyleBox["c/d",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]. It is non-zero everywkere and has value ",
  FontWeight->"Plain"],
 StyleBox["h",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" at 0.",
  FontWeight->"Plain"],
 StyleBox["d",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is characteristic length at which it growths by a factor ",
  FontWeight->"Plain"],
 StyleBox["e",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" (base of natural logarithm)\n  ",
  FontWeight->"Plain"],
 "penfuncexpsqr",
 StyleBox[" [ c, { d, h }  ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - exponential multiplied by a square-constant function to achieve \
zero values. It is zero until ",
  FontWeight->"Plain"],
 StyleBox["-d",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", and has value ",
  FontWeight->"Plain"],
 StyleBox["h",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" at 0.\n    ",
  FontWeight->"Plain"],
 "penfuncexpcub, penfuncexp4",
 StyleBox[" [ c, { d, h }  ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - exponential multiplied by a cube-constant function or by \
fourth-order-constant function to achieve zero values. It is zero until ",
  FontWeight->"Plain"],
 StyleBox["-d",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", and has value ",
  FontWeight->"Plain"],
 StyleBox["h",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" at 0.\n\n  ",
  FontWeight->"Plain"],
 "penfuncjump",
 StyleBox[" [ c, { h, k } ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - discontinuous jump function. It is zero until 0, jumps to value \
",
  FontWeight->"Plain"],
 StyleBox["h",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" at 0 and grows linearly with a factor k for positive ",
  FontWeight->"Plain"],
 StyleBox["c",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[".\n  ",
  FontWeight->"Plain"],
 "penfunc0",
 StyleBox[" [ c, {   } ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - zero function (for testing purposes, e.g. to abolish \
constraints)\n\n  These penalty generating functions have corresponding \
derivative functions defined, which take the same arguments, and have the \
name derived form the corresponding penalty generating function by adding a \
prefic ",
  FontWeight->"Plain"],
 "der",
 StyleBox[", e.g.\n  ",
  FontWeight->"Plain"],
 "derpenfuncjump",
 StyleBox[" [ c, { h, k } ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["  returns the derivative of ",
  FontWeight->"Plain"],
 "penfuncjump",
 StyleBox[" with respect to ",
  FontWeight->"Plain"],
 StyleBox["c",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[". These derivative functions are mainly intended for some testing \
purposes, but some have more practical intention of overcoming the \
discontinuity of th epenalty generating function. \n  ",
  FontWeight->"Plain"],
 StyleBox["\n",
  FontWeight->"Plain",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.4122734769375*^9, 3.412273535078125*^9}, {
   3.412350142390625*^9, 3.41235064921875*^9}, {3.412350698171875*^9, 
   3.41235096040625*^9}, {3.41235103290625*^9, 3.41235115753125*^9}, {
   3.41235119325*^9, 3.412351311140625*^9}, {3.4123513708125*^9, 
   3.412351475921875*^9}, {3.41235307946875*^9, 3.412353114640625*^9}, {
   3.412355586859375*^9, 3.412355820515625*^9}, {3.412488950015625*^9, 
   3.412488955421875*^9}, {3.4124896433125*^9, 3.41248967653125*^9}, 
   3.412928859921875*^9, {3.413634154847703*^9, 3.413634246816453*^9}, 
   3.413700284078125*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"General", " ", 
    RowBox[{"utilities", ":", " ", "derivatives"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunc_", ",", "c_", ",", "param_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{"(", "  ", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"penfunc", "[", 
            RowBox[{"t", ",", "param"}], "]"}], ",", "t"}], "]"}], " ", "/.", 
         " ", 
         RowBox[{"t", "\[Rule]", "c"}]}], " ", ")"}]}], "  ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunc_", ",", "c_", ",", "p1_", ",", "p2_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunc", ",", "c", ",", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunc_", ",", "c_", ",", "p1_", ",", "p2_", ",", "p3_"}], 
      "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunc", ",", "c", ",", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc", "[", 
      RowBox[{
      "penfunc_", ",", "c_", ",", "p1_", ",", "p2_", ",", "p3_", ",", "p4_"}],
       "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunc", ",", "c", ",", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Zero", " ", "penalty", " ", "generating", " ", 
     RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunc0", "[", 
      RowBox[{"c_", ",", "d_", ",", "h_"}], "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunc0", "[", 
      RowBox[{"c_", ",", "h_"}], "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunc0", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", 
        RowBox[{"d_", ",", "h_"}], "}"}]}], "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunc0", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "h_", "}"}]}], "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunc0", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "}"}]}], "]"}], ":=", "0"}], ";"}], "\[IndentingNewLine]",
    
   RowBox[{
    RowBox[{
     RowBox[{"penfunc0", "[", "c_", "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc0", "[", 
      RowBox[{"c_", ",", "d_", ",", "h_"}], "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc0", "[", 
      RowBox[{"c_", ",", "h_"}], "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc0", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", 
        RowBox[{"d_", ",", "h_"}], "}"}]}], "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc0", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "h_", "}"}]}], "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc0", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "}"}]}], "]"}], ":=", "0"}], ";"}], "\[IndentingNewLine]",
    
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc0", "[", "c_", "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Square", " ", "penalty", " ", "generating", " ", 
     RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncsqr", "[", 
      RowBox[{"c_", ",", "d_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "<=", 
        RowBox[{"-", "d"}]}], ",", "0", ",", " ", 
       RowBox[{"h", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "+", "d"}], ")"}], "/", "d"}], ")"}], "^", "2"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncsqr", "[", 
      RowBox[{"c_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"penfuncsqr", "[", 
      RowBox[{"c", ",", "h", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncsqr", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", 
        RowBox[{"d_", ",", "h_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncsqr", "[", 
      RowBox[{"c", ",", "d", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncsqr", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "h_", "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncsqr", "[", "h", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncsqr", "[", 
      RowBox[{"c_", ",", "p_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncsqr", ",", "c", ",", "p"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncsqr", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncsqr", ",", "c", ",", "p1", ",", "p2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncsqr", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncsqr", ",", "c", ",", "p1", ",", "p2", ",", "p3"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Cubic", " ", "penalty", " ", "generating", " ", 
     RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunccub", "[", 
      RowBox[{"c_", ",", "d_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "<=", 
        RowBox[{"-", "d"}]}], ",", "0", ",", " ", 
       RowBox[{"h", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "+", "d"}], ")"}], "/", "d"}], ")"}], "^", "3"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunccub", "[", 
      RowBox[{"c_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"penfunccub", "[", 
      RowBox[{"c", ",", "h", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunccub", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", 
        RowBox[{"d_", ",", "h_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"penfunccub", "[", 
      RowBox[{"c", ",", "d", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunccub", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "h_", "}"}]}], "]"}], ":=", 
     RowBox[{"penfunccub", "[", "h", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunccub", "[", 
      RowBox[{"c_", ",", "p_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunccub", ",", "c", ",", "p"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunccub", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunccub", ",", "c", ",", "p1", ",", "p2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunccub", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunccub", ",", "c", ",", "p1", ",", "p2", ",", "p3"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Fourth", " ", "order", " ", "penalty", " ", "generating", " ", 
     RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunc4", "[", 
      RowBox[{"c_", ",", "d_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "<=", 
        RowBox[{"-", "d"}]}], ",", "0", ",", " ", 
       RowBox[{"h", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "+", "d"}], ")"}], "/", "d"}], ")"}], "^", "4"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunc4", "[", 
      RowBox[{"c_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"penfunc4", "[", 
      RowBox[{"c", ",", "h", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunc4", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", 
        RowBox[{"d_", ",", "h_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"penfunc4", "[", 
      RowBox[{"c", ",", "d", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfunc4", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "h_", "}"}]}], "]"}], ":=", 
     RowBox[{"penfunc4", "[", "h", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc4", "[", 
      RowBox[{"c_", ",", "p_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunc4", ",", "c", ",", "p"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc4", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunc4", ",", "c", ",", "p1", ",", "p2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfunc4", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfunc4", ",", "c", ",", "p1", ",", "p2", ",", "p3"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "  ", 
    RowBox[{
    "Exponential", " ", "penalty", " ", "generating", " ", "function"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexp", "[", 
      RowBox[{"c_", ",", "d_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"h", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"c", "/", "d"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexp", "[", 
      RowBox[{"c_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"penfuncexp", "[", 
      RowBox[{"c", ",", "h", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexp", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", 
        RowBox[{"d_", ",", "h_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncexp", "[", 
      RowBox[{"c", ",", "d", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexp", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "h_", "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncexp", "[", "h", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexp", "[", 
      RowBox[{"c_", ",", "p_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexp", ",", "c", ",", "p"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexp", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexp", ",", "c", ",", "p1", ",", "p2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexp", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexp", ",", "c", ",", "p1", ",", "p2", ",", "p3"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "  ", 
    RowBox[{"Exponential", "-", 
     RowBox[{
     "quadratic", " ", "penalty", " ", "generating", " ", "function"}]}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexpsqr", "[", 
      RowBox[{"c_", ",", "d_", ",", "h_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"penfuncexp", "[", 
       RowBox[{"c", ",", "d", ",", "h"}], "]"}], "*", 
      RowBox[{
       RowBox[{"penfuncsqr", "[", 
        RowBox[{"c", ",", "d", ",", "h"}], "]"}], "/", "h"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexpsqr", "[", 
      RowBox[{"c_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"penfuncexpsqr", "[", 
      RowBox[{"c", ",", "h", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexpsqr", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", 
        RowBox[{"d_", ",", "h_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncexpsqr", "[", 
      RowBox[{"c", ",", "d", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexpsqr", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "h_", "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncexpsqr", "[", "h", "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexpsqr", "[", 
      RowBox[{"c_", ",", "p_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexpsqr", ",", "c", ",", "p"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexpsqr", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexpsqr", ",", "c", ",", "p1", ",", "p2"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexpsqr", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexpsqr", ",", "c", ",", "p1", ",", "p2", ",", "p3"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "  ", 
    RowBox[{"Exponential", "-", 
     RowBox[{"cubic", " ", "penalty", " ", "generating", " ", "function"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexpcub", "[", 
      RowBox[{"c_", ",", "d_", ",", "h_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"penfuncexp", "[", 
       RowBox[{"c", ",", "d", ",", "h"}], "]"}], "*", 
      RowBox[{
       RowBox[{"penfunccub", "[", 
        RowBox[{"c", ",", "d", ",", "h"}], "]"}], "/", "h"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexpcub", "[", 
      RowBox[{"c_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"penfuncexpcub", "[", 
      RowBox[{"c", ",", "h", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexpcub", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", 
        RowBox[{"d_", ",", "h_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncexpcub", "[", 
      RowBox[{"c", ",", "d", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexpcub", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "h_", "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncexpcub", "[", "h", "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexpcub", "[", 
      RowBox[{"c_", ",", "p_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexpcub", ",", "c", ",", "p"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexpcub", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexpcub", ",", "c", ",", "p1", ",", "p2"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexpcub", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexpcub", ",", "c", ",", "p1", ",", "p2", ",", "p3"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "  ", 
    RowBox[{"Exponential", "-", 
     RowBox[{
     "4", "th", " ", "order", " ", "penalty", " ", "generating", " ", 
      "function"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexp4", "[", 
      RowBox[{"c_", ",", "d_", ",", "h_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"penfuncexp", "[", 
       RowBox[{"c", ",", "d", ",", "h"}], "]"}], "*", 
      RowBox[{
       RowBox[{"penfunc4", "[", 
        RowBox[{"c", ",", "d", ",", "h"}], "]"}], "/", "h"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexp4", "[", 
      RowBox[{"c_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"penfuncexp4", "[", 
      RowBox[{"c", ",", "h", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexp4", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", 
        RowBox[{"d_", ",", "h_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncexp4", "[", 
      RowBox[{"c", ",", "d", ",", "h"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncexp4", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "h_", "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncexp4", "[", "h", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexp4", "[", 
      RowBox[{"c_", ",", "p_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexp4", ",", "c", ",", "p"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexp4", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexp4", ",", "c", ",", "p1", ",", "p2"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncexp4", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
     RowBox[{"derpenfunc", "[", 
      RowBox[{"penfuncexp4", ",", "c", ",", "p1", ",", "p2", ",", "p3"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Jump", " ", "discontinuous", " ", "penalty", " ", "generating", " ", 
     RowBox[{"functions", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncjump", "[", 
      RowBox[{"c_", ",", "h_", ",", "k_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "<=", 
        RowBox[{"-", "0"}]}], ",", "0", ",", " ", 
       RowBox[{"h", "+", 
        RowBox[{"k", "*", "c"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncjump", "[", 
      RowBox[{"c_", ",", "h_"}], "]"}], ":=", 
     RowBox[{"penfuncjump", "[", 
      RowBox[{"c", ",", "h", ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncjump", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", 
        RowBox[{"h_", ",", "k_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncjump", "[", 
      RowBox[{"c", ",", "h", ",", "k"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penfuncjump", "[", 
      RowBox[{"c_", ",", 
       RowBox[{"{", "h_", "}"}]}], "]"}], ":=", 
     RowBox[{"penfuncjump", "[", 
      RowBox[{"c", ",", "h"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncjump", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_", ",", "p3_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[LessEqual]", "0"}], ",", "0", ",", 
       RowBox[{"derpenfunc", "[", 
        RowBox[{"penfuncjump", ",", "c", ",", "p1", ",", "p2", ",", "p3"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncjump", "[", 
      RowBox[{"c_", ",", "p1_", ",", "p2_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[LessEqual]", "0"}], ",", "0", ",", 
       RowBox[{"derpenfunc", "[", 
        RowBox[{"penfuncjump", ",", "c", ",", "p1", ",", "p2"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derpenfuncjump", "[", 
      RowBox[{"c_", ",", "p1_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[LessEqual]", "0"}], ",", "0", ",", 
       RowBox[{"derpenfunc", "[", 
        RowBox[{"penfuncjump", ",", "c", ",", "p1"}], "]"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412235875171875*^9, 3.412235917671875*^9}, {
   3.412235971640625*^9, 3.412235976453125*^9}, {3.41223623628125*^9, 
   3.412236261359375*^9}, {3.4122367328125*^9, 3.41223679503125*^9}, {
   3.412237127359375*^9, 3.412237166828125*^9}, {3.41223728859375*^9, 
   3.412237520578125*^9}, {3.412237672609375*^9, 3.412237686109375*^9}, {
   3.41223779028125*^9, 3.41223781825*^9}, 3.412237988828125*^9, {
   3.412238022125*^9, 3.412238048171875*^9}, {3.412240567953125*^9, 
   3.412240597859375*^9}, {3.412240716328125*^9, 3.41224082715625*^9}, {
   3.4122408610625*^9, 3.412240935703125*^9}, {3.41224097575*^9, 
   3.41224123975*^9}, {3.41225297153125*^9, 3.412252996890625*^9}, {
   3.4122542514375*^9, 3.41225425190625*^9}, {3.412254369546875*^9, 
   3.412254451984375*^9}, {3.412254493640625*^9, 3.41225456571875*^9}, {
   3.412254740109375*^9, 3.41225478221875*^9}, {3.412254813796875*^9, 
   3.41225484284375*^9}, 3.412254893953125*^9, {3.412255671109375*^9, 
   3.41225567515625*^9}, {3.412255897015625*^9, 3.412255950671875*^9}, {
   3.4122560305*^9, 3.4122560315*^9}, {3.4122560948125*^9, 
   3.4122561198125*^9}, 3.41236214575*^9, {3.41248955009375*^9, 
   3.412489576*^9}, {3.412489688015625*^9, 3.41248969596875*^9}, {
   3.412489864015625*^9, 3.412489895234375*^9}, {3.412489941546875*^9, 
   3.412490012859375*^9}, {3.412490068265625*^9, 3.412490097421875*^9}, {
   3.4124901354375*^9, 3.412490204296875*^9}, {3.412797466*^9, 
   3.412797488390625*^9}, {3.412797528390625*^9, 3.41279757296875*^9}, {
   3.41279761690625*^9, 3.41279763103125*^9}, {3.41279813153125*^9, 
   3.412798142765625*^9}, {3.41292890475*^9, 3.4129289055625*^9}, {
   3.412947169890625*^9, 3.412947203890625*^9}, {3.41295283265625*^9, 
   3.412953001390625*^9}, {3.41370027765625*^9, 3.41370027915625*^9}},
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4122375265625*^9, 3.412237526765625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Penalty function - penaltyanfunc
\
\>", "Subsection",
 CellChangeTimes->{{3.412256969453125*^9, 3.41225698896875*^9}, 
   3.412257385234375*^9, {3.412257419421875*^9, 3.4122574195625*^9}, {
   3.412351765203125*^9, 3.412351800453125*^9}}],

Cell[TextData[{
 "penaltyanfunc",
 StyleBox[" [ p, calcobjpen, calcconstrpen, calcgradobjpen, \
calcgradconstrpen, ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["cdpen",
  FontSlant->"Italic"],
 StyleBox[" ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - analysis function that adds penalty terms to the objective \
function of some original problem; constraint functions may or may not be \
kept.\n  Standard parameters of the function are ",
  FontWeight->"Plain"],
 StyleBox["p",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - parameters, ",
  FontWeight->"Plain"],
 StyleBox["calcobjpen, calcconstrpen, calcgradobjpen ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["and",
  FontWeight->"Plain"],
 StyleBox[" calcgradconstrpen",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - calculation request flags for the objective function, the \
constraint functions, and their gradients, respectively (the flags apply to \
this function, the ",
  FontWeight->"Plain"],
 "penaltyanfunc",
 StyleBox[", and not to the original function - it is inferred what is needed \
there). The definition data argument ",
  FontWeight->"Plain"],
 StyleBox["cd",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" must be structured in the prescribed way (it can also be a string \
that represent the data structured in this way, in which case conversio nis \
performed first).\n",
  FontWeight->"Plain"],
 StyleBox[" ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" cdpen = {  anfuncorig, < ancdorig,  penfunc, penparam,  \
defderpenfunc, derpenfuncarg, keepconstraints > }\n    anfuncorig",
  FontSlant->"Italic"],
 StyleBox[" - the analysis function of the original problem that is modified \
by addition of penalty terms (and eventually annihilation of constraints)\n",
  FontWeight->"Plain"],
 StyleBox["    ancdorig",
  FontSlant->"Italic"],
 StyleBox[" - definition data passed to the original analysis function ",
  FontWeight->"Plain"],
 StyleBox["anfuncorig",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[". Optional (default: {})\n",
  FontWeight->"Plain"],
 StyleBox["    penfunc",
  FontSlant->"Italic"],
 StyleBox[" [ c, { penparam } ] ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["- penalty generating function. It must take arguments as stated \
here (",
  FontWeight->"Plain"],
 StyleBox["c",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - independent parameter - value of the constrint function from \
which penalty term is generated, and ",
  FontWeight->"Plain"],
 StyleBox["{ param }",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is a vector containing definition parameters for the penalty \
generating function)\n",
  FontWeight->"Plain"],
 StyleBox["    penparam",
  FontSlant->"Italic"],
 StyleBox[" - vector of definition parameters for ",
  FontWeight->"Plain"],
 StyleBox["penfunc",
  FontSlant->"Italic"],
 StyleBox[". Default is {1,1}\n",
  FontWeight->"Plain"],
 StyleBox["    defderpenfunc",
  FontSlant->"Italic"],
 StyleBox[" - a falg for whether the derivative of ",
  FontWeight->"Plain"],
 StyleBox["penfunc",
  FontSlant->"Italic"],
 StyleBox[" is defined by the next element (",
  FontWeight->"Plain"],
 StyleBox["derpenfuncarg",
  FontSlant->"Italic"],
 StyleBox[") (0 - this function is not specified and will be calculated \
internally by symbolic differentiation of ",
  FontWeight->"Plain"],
 StyleBox["penfunc",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["; non-zero number - defined)\n",
  FontWeight->"Plain"],
 StyleBox["    derpenfuncarg",
  FontSlant->"Italic"],
 StyleBox[" [ c, { penparam } ] ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - function that calculates the derivative of ",
  FontWeight->"Plain"],
 StyleBox["penfunc",
  FontSlant->"Italic"],
 StyleBox[" with respect to its argument ",
  FontWeight->"Plain"],
 StyleBox["c",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" (the constraint function value). If ",
  FontWeight->"Plain"],
 StyleBox["defderpenfuncarg",
  FontSlant->"Italic"],
 StyleBox[" is 0 or not specified then this function is not used and does not \
need to be specified.\n",
  FontWeight->"Plain"],
 StyleBox["    keepconstraints",
  FontSlant->"Italic"],
 StyleBox[" - flag for keeping constriants (default is 0) - if 0 then \
constraints are not kept by ",
  FontWeight->"Plain"],
 "penaltyanfunc",
 StyleBox[" and are reflected only in penalty terms added to the original \
objective function; otherwise constraints are kept. \n    \n    ",
  FontWeight->"Plain"],
 "Important:",
 StyleBox[" it is generally agreed that all elements of ",
  FontWeight->"Plain"],
 "cdpen",
 StyleBox[" are specified (otherwise, warnings are launched).\n    \n    ",
  FontWeight->"Plain"],
 "penaltyanfuncconstr",
 StyleBox[" - always keeps the constraints of the original function (if they \
exist), regardless fo the corresponding parameter in cdpen\n    \n    ",
  FontWeight->"Plain"],
 "penaltyanfuncbas",
 StyleBox[" [ p, calcobjpen, calcconstrpen, calcgradobjpen, \
calcgradconstrpen, ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["cdpen[[1]], cdpen[[2]], ..., cdpen[[-1]]",
  FontSlant->"Italic"],
 StyleBox[" ] ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["- performs calculation for ",
  FontWeight->"Plain"],
 "penaltyanfunc",
 StyleBox[".\n    \n    ",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellChangeTimes->{{3.4122734769375*^9, 3.412273535078125*^9}, {
  3.412350142390625*^9, 3.41235064921875*^9}, {3.412350698171875*^9, 
  3.41235096040625*^9}, {3.41235103290625*^9, 3.41235115753125*^9}, {
  3.41235119325*^9, 3.412351311140625*^9}, {3.4123513708125*^9, 
  3.412351475921875*^9}, {3.41235180909375*^9, 3.412352177890625*^9}, {
  3.41235222525*^9, 3.412352232203125*^9}, {3.412352282453125*^9, 
  3.412352379890625*^9}, {3.41235270415625*^9, 3.41235270978125*^9}, {
  3.4123527630625*^9, 3.4123528660625*^9}, {3.412352900671875*^9, 
  3.412353061890625*^9}, {3.412353127046875*^9, 3.412353366296875*^9}, {
  3.4123534335625*^9, 3.41235374596875*^9}, {3.41235377903125*^9, 
  3.412353783703125*^9}, {3.412353987671875*^9, 3.41235411878125*^9}, {
  3.41235472025*^9, 3.41235483628125*^9}, {3.412361294265625*^9, 
  3.412361351078125*^9}, {3.412401454609375*^9, 3.412401460765625*^9}, {
  3.412401731578125*^9, 3.41240175753125*^9}, {3.4124019124375*^9, 
  3.412401916359375*^9}, {3.412409151234375*^9, 3.412409225625*^9}, {
  3.412410036640625*^9, 3.412410085515625*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "where", " ", "one", " ", "can", " ", "specify", " ", 
    "whether", " ", "to", " ", "keep", " ", "constraints", " ", "in", " ", 
    "the", " ", "analysis", " ", "function", " ", "or", " ", 
    RowBox[{"not", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"penaltyanfunc", "[", 
      RowBox[{
      "p_", ",", "calcobjpen_", ",", "calcconstrpen_", ",", "calcgradobjpen_",
        ",", "calcgradconstrpen_", ",", "\[IndentingNewLine]", "cdpen_"}], 
      "]"}], ":=", 
     RowBox[{"penaltyanfunc0", "[", 
      RowBox[{
      "p", ",", "calcobjpen", ",", "calcconstrpen", ",", "calcgradobjpen", 
       ",", "calcgradconstrpen", ",", "\[IndentingNewLine]", "cdpen", ",", 
       "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penaltyanfuncconstr", "[", 
      RowBox[{
      "p_", ",", "calcobjpen_", ",", "calcconstrpen_", ",", "calcgradobjpen_",
        ",", "calcgradconstrpen_", ",", "\[IndentingNewLine]", "cdpen_"}], 
      "]"}], ":=", 
     RowBox[{"penaltyanfunc0", "[", 
      RowBox[{
      "p", ",", "calcobjpen", ",", "calcconstrpen", ",", "calcgradobjpen", 
       ",", "calcgradconstrpen", ",", "\[IndentingNewLine]", "cdpen", ",", 
       "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penaltyanfunc0", "[", 
      RowBox[{
      "p_", ",", "calcobjpen_", ",", "calcconstrpen_", ",", "calcgradobjpen_",
        ",", "calcgradconstrpen_", ",", "\[IndentingNewLine]", "cdpen_", ",", 
       "constrswitch_"}], "]"}], ":=", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cd", ",", "anfuncorig", ",", 
         RowBox[{"ancdorig", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"penfunc", "=", "penfuncexpsqr"}], ",", 
         RowBox[{"penparam", "=", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], ",", 
         RowBox[{"defderpenfunc", "=", "0"}], ",", "derpenfuncarg", " ", ",", 
         
         RowBox[{"keepconstraints", "=", "0"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"$A", " ", "Igor", " ", "feb08"}], ";"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Parameter", " ", 
         RowBox[{"constrswitch", ":", "\[IndentingNewLine]", "  ", 
          RowBox[{"0", " ", "-", " ", 
           RowBox[{
           "conatraints", " ", "are", " ", "not", " ", "kept", 
            "\[IndentingNewLine]", "1"}], " ", "-", " ", 
           RowBox[{
           "constraints", " ", "are", " ", "kept", " ", "\[IndentingNewLine]",
             "2"}], " ", "-", " ", 
           RowBox[{
           "constraints", " ", "are", " ", "kept", " ", "in", " ", "the", " ",
             "analysis", " ", "function", " ", "according", " ", "to", " ", 
            "definition", " ", "data", " ", 
            RowBox[{"(", 
             RowBox[{"default", " ", "is", " ", "0"}], ")"}]}]}]}]}], "  ", 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"cdpen", "[", 
            RowBox[{"[", "0", "]"}], "]"}], "\[Equal]", "String"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"cd", "=", 
           RowBox[{"ToExpression", "[", "cdpen", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"cd", "=", "cdpen"}], ",", 
          RowBox[{
           RowBox[{"cd", "=", "cdpen"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Get", " ", "the", " ", "original", " ", "analysis", " ", 
          RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cd", "]"}], "\[GreaterEqual]", "1"}], ",", 
          "  ", 
          RowBox[{"anfuncorig", "=", 
           RowBox[{"cd", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<\\n\\nERROR in penaltyanfunc: the original analysis function \
is not defined.\\n   Definition data: \>\"", ",", "cd", ",", 
             "\"\< \\n\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", " ", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Get", " ", "the", " ", "definition", " ", "data", " ", "for", " ", 
          "the", " ", "original", " ", "analysis", " ", 
          RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cd", "]"}], "\[GreaterEqual]", "2"}], ",", 
          "  ", 
          RowBox[{"ancdorig", "=", 
           RowBox[{"cd", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<\\nWarning: penaltyanfunc: analysis definition data is not \
defined, \>\"", ",", "ancdorig", ",", 
             "\"\< is taken.\\n   Definition data: \>\"", ",", "cd", ",", 
             "\"\< \\n\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", " ", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Get", " ", "the", " ", "penalty", " ", "generating", " ", 
          RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cd", "]"}], "\[GreaterEqual]", "3"}], ",", 
          "  ", 
          RowBox[{"penfunc", "=", 
           RowBox[{"cd", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<\\n\\nWarning: penaltyanfunc: penalty generating function is \
not defined, \>\"", ",", "penfunc", ",", 
             "\"\< is taken.\\n   Definition data: \>\"", ",", "cd", ",", 
             "\"\< \\n\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", " ", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Get", " ", "the", " ", "definition", " ", "data", " ", "for", " ", 
          "the", " ", "penalty", " ", "generating", " ", 
          RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cd", "]"}], "\[GreaterEqual]", "4"}], ",", 
          "  ", 
          RowBox[{"penparam", "=", 
           RowBox[{"cd", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<\\n\\nWarning: penaltyanfunc: penalty generating function's \
definition data is not defined, \>\"", ",", "penparam", ",", 
             "\"\< is taken.\\n   Definition data: \>\"", ",", "cd", ",", 
             "\"\< \\n\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", " ", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Check", " ", "whether", " ", "the", " ", "flag", " ", "for", " ", 
          "defined", " ", "derivative", " ", "function", " ", "is", " ", 
          RowBox[{"specified", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cd", "]"}], "\[GreaterEqual]", "5"}], ",", 
          "  ", 
          RowBox[{"defderpenfunc", "=", 
           RowBox[{"cd", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}]}], "   ", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "If", " ", "the", " ", "derivative", " ", "function", " ", "should",
            " ", "be", " ", "defined"}], ",", " ", 
          RowBox[{"try", " ", "to", " ", "extract", " ", 
           RowBox[{"it", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"defderpenfunc", "\[NotEqual]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "cd", "]"}], "\[GreaterEqual]", "6"}], 
             ",", "  ", 
             RowBox[{"derpenfuncarg", "=", 
              RowBox[{"cd", "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<\\n\\nWarning: penaltyanfunc: derivative of penalty \
generating function is not defined, symbolic differentiation is performed.\\n \
  Definition data: \>\"", ",", "cd", ",", "\"\< \\n\>\""}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"derpenfuncarg", "[", 
                RowBox[{"c_", ",", "penpar_"}], "]"}], ":=", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "t", "}"}], ",", "  ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"penfunc", "[", 
                    RowBox[{"t", ",", "penpar"}], "]"}], ",", "t"}], "]"}], 
                   "   ", "/.", " ", 
                   RowBox[{"t", "\[Rule]", "c"}]}], "  ", ")"}]}], "  ", 
                "]"}]}], ";"}]}], "\[IndentingNewLine]", " ", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Get", " ", "the", " ", "flag", " ", "for", " ", "keeping", " ", 
          "constraint", " ", "function", " ", "in", " ", "the", " ", 
          RowBox[{"analysis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cd", "]"}], "\[GreaterEqual]", "7"}], ",", 
          "  ", 
          RowBox[{"keepconstraints", "=", 
           RowBox[{"cd", "[", 
            RowBox[{"[", "7", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", "   ", 
            RowBox[{
             RowBox[{
              RowBox[{"constrswitch", "\[NotEqual]", "0"}], " ", "&&", " ", 
              RowBox[{"constrswitch", "\[NotEqual]", "1"}]}], "   ", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<\\n\\nWarning: penaltyanfunc: flag for keeping \
constraints is not defined, \>\"", ",", "keepconstraints", ",", 
                "\"\< is taken.\\n   Definition data: \>\"", ",", "cd", ",", 
                "\"\< \\n\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", " ", 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"constrswitch", "\[Equal]", "0"}], ",", " ", 
          RowBox[{"keepconstraints", "=", "0"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"constrswitch", "\[Equal]", "1"}], ",", " ", 
          RowBox[{"keepconstraints", "=", "1"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"penaltyanfuncbas", "[", 
          RowBox[{
          "p", ",", "calcobjpen", ",", "calcconstrpen", ",", "calcgradobjpen",
            ",", "calcgradconstrpen", ",", "     ", "anfuncorig", ",", 
           "ancdorig", ",", "    ", "penfunc", ",", "penparam", ",", "     ", 
           "defderpenfunc", ",", "derpenfuncarg", ",", "   ", 
           "keepconstraints"}], " ", "]"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"penaltyanfuncbas", "[", 
      RowBox[{
      "p_", ",", "calcobjpen_", ",", "calcconstrpen_", ",", "calcgradobjpen_",
        ",", "calcgradconstrpen_", ",", "    ", "anfuncorig_", ",", 
       "ancdorig_", ",", "    ", "penfunc_", ",", "penparam_", ",", "    ", 
       "defderpenfunc_", ",", "derpenfuncarg_", ",", "  ", 
       "keepconstraints_"}], "  ", "]"}], ":=", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"calcobj", "=", "0"}], ",", 
         RowBox[{"calcconstr", "=", "0"}], ",", 
         RowBox[{"calcgradobj", "=", "0"}], ",", 
         RowBox[{"calcgradconstr", "=", "0"}], ",", "       ", 
         RowBox[{"reqcalcobj", "=", "0"}], ",", 
         RowBox[{"reqcalcconstr", "=", "0"}], ",", 
         RowBox[{"reqcalcgradobj", "=", "0"}], ",", 
         RowBox[{"reqcalcgradconstr", "=", "0"}], ",", "        ", " ", 
         RowBox[{"obj", "=", "0"}], ",", 
         RowBox[{"constr", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"gradobj", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"gradconstr", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"ret", "=", "0"}], ",", "     ", "xx", ",", "i", ",", "cd0", 
         ",", "      ", "derpenfuncloc", ",", " ", "fff"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"$A", " ", "Igor", " ", "feb08"}], ";"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Define", " ", "derivative", " ", "of", " ", "the", " ", "penalty", 
          " ", "function", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "there", " ", "is", " ", "a", " ", "possibility", " ", "to", " ", 
             "manually", " ", "provide", " ", "the", " ", "derivative", " ", 
             "function"}], " ", "-", " ", 
            RowBox[{
             RowBox[{"e", ".", "g", ".", " ", "to"}], " ", "handle", " ", 
             "discontinuity", " ", "in", " ", "a", " ", "specific", " ", 
             "way"}]}], ")"}]}], ":"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"defderpenfunc", "\[NotEqual]", "0"}], " ", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"derpenfuncloc", ":=", "derpenfuncarg"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"derpenfuncloc", "[", 
            RowBox[{"c_", ",", "penpar_"}], "]"}], ":=", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "t", "}"}], ",", "  ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"penfunc", "[", 
                  RowBox[{"t", ",", "penpar"}], "]"}], ",", "t"}], "]"}], 
               "   ", "/.", " ", 
               RowBox[{"t", "\[Rule]", "c"}]}], "  ", ")"}]}], "  ", "]"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"derpenfuncloc", "[", 
            RowBox[{"c_", ",", "penpar_"}], "]"}], ":=", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "t", "}"}], ",", "  ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"penfunc", "[", 
                  RowBox[{"t", ",", "penpar"}], "]"}], ",", "t"}], "]"}], 
               "   ", "/.", " ", 
               RowBox[{"t", "\[Rule]", "c"}]}], "  ", ")"}]}], "  ", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"parameters", " ", 
            RowBox[{"(", 
             RowBox[{"penalty", " ", "deifnition", " ", "data"}], ")"}], " ", 
            "arranged", " ", "for", " ", 
            RowBox[{"output", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           StyleBox[
            RowBox[{"argtab", ":=", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<anfuncorig\>\"", ",", "\"\<ancdorig\>\"", ",", 
                  "\"\<penfunc\>\"", ",", "\"\<penparam\>\"", ",", 
                  "\"\<defderpenfunc\>\"", ",", "\"\<derpenfuncarg\>\"", ",", 
                  "\"\<keepconstraints\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "anfuncorig", ",", " ", "ancdorig", ",", "  ", "penfunc", 
                  ",", " ", "penparam", ",", "  ", "defderpenfunc", ",", " ", 
                  "derpenfuncarg", ",", " ", "keepconstraints"}], " ", 
                 "}"}]}], "}"}], "]"}]}],
            FontSlant->"Italic"], 
           StyleBox[";",
            FontSlant->"Italic"], 
           StyleBox["\[IndentingNewLine]",
            FontSlant->"Italic"], 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<\\n\\npenaltyanfuncbas: penalty definition data: \\n\>\"", 
             ",", " ", 
             RowBox[{"TableForm", "[", "argtab", "]"}]}], "   ", "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Identify", " ", "what", " ", "needs", " ", "to", " ", "be", " ", 
          "calculated", " ", "by", " ", "the", " ", "original", " ", 
          "analysis", " ", 
          RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"calcobjpen", "\[NotEqual]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reqcalcobj", "=", "1"}], ";", "\[IndentingNewLine]", 
           RowBox[{"reqcalcconstr", "=", "1"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"calcgradobjpen", "\[NotEqual]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reqcalcgradobj", "=", "1"}], ";", "\[IndentingNewLine]", 
           RowBox[{"reqcalcgradconstr", "=", "1"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"calcconstrpen", "\[NotEqual]", "0"}], " ", "&&", " ", 
           RowBox[{"keepconstraints", "\[NotEqual]", "0"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reqcalcconstr", "=", "1"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"calcgradconstrpen", "\[NotEqual]", "0"}], " ", "&&", " ", 
           
           RowBox[{"keepconstraints", "\[NotEqual]", "0"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reqcalcgradconstr", "=", "1"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Call", " ", "the", " ", "original", " ", "analysis", " ", 
          RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "calcobj", ",", "obj", ",", "\[IndentingNewLine]", "calcconstr", 
           ",", "constr", ",", "\[IndentingNewLine]", "calcgradobj", ",", 
           "gradobj", ",", "\[IndentingNewLine]", "calcgradconstr", ",", 
           "gradconstr", ",", "\[IndentingNewLine]", "ret"}], "}"}], "=", 
         RowBox[{"anfuncorig", "[", 
          RowBox[{
          "p", ",", "reqcalcobj", ",", "reqcalcconstr", ",", "reqcalcgradobj",
            ",", "reqcalcgradconstr", ",", "ancdorig"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"calcobj", "\[Equal]", "0"}], " ", "&&", " ", 
           RowBox[{"reqcalcobj", "\[NotEqual]", "0"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<\\n\\nError in penaltyanfuncbas: Objective function could \
not be calculated by the original analysis.\\n\\n\>\"", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"calcconstr", "\[Equal]", "0"}], " ", "&&", " ", 
           RowBox[{"reqcalcconstr", "\[NotEqual]", "0"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<\\n\\nError in penaltyanfuncbas: Constraint functions could \
not be calculated by the original analysis.\\n\\n\>\"", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"calcgradobj", "\[Equal]", "0"}], " ", "&&", " ", 
           RowBox[{"reqcalcgradobj", "\[NotEqual]", "0"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<\\n\\nError in penaltyanfuncbas: Gradient of the objective \
function could not be calculated by the original analysis.\\n\\n\>\"", "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"calcgradconstr", "\[Equal]", "0"}], " ", "&&", " ", 
           RowBox[{"reqcalcgradconstr", "\[NotEqual]", "0"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<\\n\\nError in penaltyanfuncbas: Gradients of constraint \
functions could not be calculated by the original analysis.\\n\\n\>\"", "]"}],
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Add", " ", "penalty", " ", "terms", " ", "to", " ", "the", " ", 
          "objective", " ", 
          RowBox[{"functions", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"calcobj", "\[NotEqual]", "0"}], "  ", "&&", " ", 
           RowBox[{"calcconstr", "\[NotEqual]", "0"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "\[LessEqual]", 
              RowBox[{"Length", "[", "constr", "]"}]}], ",", 
             RowBox[{"i", "=", 
              RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"obj", "=", 
               RowBox[{"obj", "+", 
                RowBox[{"penfunc", "[", " ", 
                 RowBox[{
                  RowBox[{"constr", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], " ", ",", "penparam"}], 
                 "]"}]}]}], " ", ";"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Penalty term \>\"", ",", 
                RowBox[{"penfunc1", "[", " ", 
                 RowBox[{
                  RowBox[{"constr", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], " ", ",", " ", "d", ",", 
                  "h"}], "]"}], ",", "\"\< for constraint \>\"", ",", "i", 
                ",", "\"\< added, new objective function: \>\"", ",", "obj"}],
                "]"}], ";"}], "\[IndentingNewLine]", "*)"}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Add", " ", "gradients", " ", "of", " ", "penalty", " ", "terms", 
          " ", "to", " ", "the", " ", "objective", " ", 
          RowBox[{"gradients", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"calcgradobj", "\[NotEqual]", "0"}], "  ", "&&", " ", 
           RowBox[{"calcgradconstr", "\[NotEqual]", "0"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "\[LessEqual]", 
              RowBox[{"Length", "[", "gradconstr", "]"}]}], ",", 
             RowBox[{"i", "=", 
              RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gradobj", "=", 
               RowBox[{"gradobj", "+", 
                RowBox[{
                 RowBox[{"gradconstr", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], " ", "*", " ", 
                 RowBox[{"derpenfuncloc", " ", "[", 
                  RowBox[{
                   RowBox[{"constr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "penparam"}], 
                  "]"}]}]}]}], " ", ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"debugmode", "\[NotEqual]", "0"}], "  ", "&&", " ", 
                 "False"}], " ", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{
                  "\"\<Derivative of penalty gen. func at constr. \>\"", ",", 
                   "i", ",", "\"\< : \>\"", ",", 
                   RowBox[{"derpenfuncloc", " ", "[", 
                    RowBox[{
                    RowBox[{"constr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "penparam"}], 
                    "]"}]}], " ", "]"}], " ", ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Grad. of penalty term \>\"", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"gradconstr", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], " ", "*", "  ", 
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"penfunc1", "[", 
                    RowBox[{"xx", " ", ",", " ", "d", ",", "h"}], "]"}], ",", 
                    "xx"}], "]"}]}], "  ", "/.", "  ", 
                 RowBox[{"xx", "\[Rule]", 
                  RowBox[{"constr", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}]}], " ", 
                "\[IndentingNewLine]", "  ", ",", "\"\< for constraint \>\"", 
                ",", "i", ",", 
                "\"\< added, new objective function gradient: \>\"", ",", 
                "gradobj"}], "]"}], ";"}], "\[IndentingNewLine]", "*)"}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"keepconstraints", "\[Equal]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Penalty", " ", "updated", " ", "analysis", " ", "function", " ", 
            "does", " ", "not", " ", "have", " ", 
            RowBox[{"constraints", ":"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"calcconstr", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"calcgradconstr", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", " ", 
            RowBox[{
             RowBox[{"calcconstrpen", " ", "\[NotEqual]", "0"}], ",", "   ", 
             RowBox[{
              RowBox[{"ret", "=", 
               RowBox[{"-", "56"}]}], ";"}]}], "  ", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", " ", 
            RowBox[{
             RowBox[{"calcgradconstrpen", " ", "\[NotEqual]", "0"}], ",", 
             "   ", 
             RowBox[{
              RowBox[{"ret", "=", 
               RowBox[{"-", "57"}]}], ";"}]}], "  ", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Return", " ", "the", " ", 
          RowBox[{"result", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"N", "[", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
           "calcobj", ",", "obj", ",", "\[IndentingNewLine]", "calcconstr", 
            ",", "constr", ",", "\[IndentingNewLine]", "calcgradobj", ",", 
            "gradobj", ",", "\[IndentingNewLine]", "calcgradconstr", ",", 
            "gradconstr", ",", "\[IndentingNewLine]", "ret"}], "}"}], 
          "\[IndentingNewLine]", "]"}], "]"}], ";"}]}], "\[IndentingNewLine]",
       "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41225694371875*^9, 3.41225696253125*^9}, {
   3.41225745134375*^9, 3.41225751028125*^9}, {3.412257589125*^9, 
   3.412257609984375*^9}, {3.412257651078125*^9, 3.412257708734375*^9}, {
   3.412257756890625*^9, 3.412257806109375*^9}, {3.41225784684375*^9, 
   3.412257968453125*^9}, {3.41225805259375*^9, 3.412258093890625*^9}, {
   3.41225826603125*^9, 3.41225828096875*^9}, {3.412266356453125*^9, 
   3.41226635671875*^9}, {3.412266406890625*^9, 3.41226644446875*^9}, {
   3.412266567015625*^9, 3.412266849765625*^9}, {3.41226688103125*^9, 
   3.4122669441875*^9}, {3.412266974328125*^9, 3.412266990015625*^9}, {
   3.412267024671875*^9, 3.4122671919375*^9}, {3.41226722225*^9, 
   3.41226728553125*^9}, {3.4122673225*^9, 3.41226737615625*^9}, 
   3.412267436265625*^9, {3.412267471953125*^9, 3.412267494375*^9}, {
   3.412267990078125*^9, 3.41226838609375*^9}, {3.41226843990625*^9, 
   3.412268447109375*^9}, {3.412268477875*^9, 3.41226858471875*^9}, {
   3.4122686483125*^9, 3.412268661421875*^9}, {3.412268699*^9, 
   3.412268701453125*^9}, {3.412268815859375*^9, 3.412268840953125*^9}, 
   3.412268874359375*^9, {3.412268975046875*^9, 3.412269308921875*^9}, {
   3.41226934103125*^9, 3.4122694566875*^9}, {3.412269487359375*^9, 
   3.412269550234375*^9}, {3.412269722875*^9, 3.4122697251875*^9}, {
   3.412269831828125*^9, 3.41226994325*^9}, {3.412270569984375*^9, 
   3.412270602734375*^9}, {3.412270656234375*^9, 3.412270719703125*^9}, {
   3.4122708005625*^9, 3.412271013296875*^9}, {3.412271062203125*^9, 
   3.412271065*^9}, {3.412271102875*^9, 3.4122711093125*^9}, {3.41227119*^9, 
   3.412271468296875*^9}, {3.412271523625*^9, 3.41227186203125*^9}, {
   3.41227215275*^9, 3.412272277078125*^9}, {3.41227234246875*^9, 
   3.41227234446875*^9}, {3.412272391734375*^9, 3.412272393671875*^9}, {
   3.412272424828125*^9, 3.412272445421875*^9}, {3.412272741890625*^9, 
   3.412272772484375*^9}, 3.412272809734375*^9, {3.41227286934375*^9, 
   3.412273007328125*^9}, {3.412273093984375*^9, 3.412273094234375*^9}, {
   3.412352252859375*^9, 3.41235225471875*^9}, {3.41235413803125*^9, 
   3.412354139734375*^9}, {3.412361364109375*^9, 3.412361486578125*^9}, {
   3.412401184703125*^9, 3.41240124703125*^9}, {3.4124013408125*^9, 
   3.41240134375*^9}, {3.412401411265625*^9, 3.4124014123125*^9}, {
   3.4124014634375*^9, 3.41240154128125*^9}, {3.412401584421875*^9, 
   3.41240170621875*^9}, {3.41240177771875*^9, 3.412401874984375*^9}, {
   3.41240196434375*^9, 3.41240200371875*^9}, {3.41240203675*^9, 
   3.4124021475*^9}, {3.41240262646875*^9, 3.4124026409375*^9}, {
   3.4124034333125*^9, 3.412403479375*^9}, {3.412404633640625*^9, 
   3.412404689390625*^9}, {3.412404722765625*^9, 3.412404734078125*^9}, {
   3.4124048115625*^9, 3.41240485059375*^9}, {3.41240658246875*^9, 
   3.41240658278125*^9}, {3.4124069840625*^9, 3.412407083578125*^9}, {
   3.412408500171875*^9, 3.412408530453125*^9}, {3.41240970859375*^9, 
   3.412409710859375*^9}, {3.41240974125*^9, 3.412409742421875*^9}, {
   3.412409782171875*^9, 3.4124097934375*^9}, {3.41240985084375*^9, 
   3.41240987840625*^9}, {3.412409932796875*^9, 3.412409971453125*^9}, {
   3.412428671546875*^9, 3.412428672953125*^9}, {3.412489167453125*^9, 
   3.412489169328125*^9}, {3.412489612390625*^9, 3.4124896171875*^9}},
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.412402582078125*^9, 3.4124025985625*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.412257059484375*^9, 3.41225705965625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Graphical representation of ",
 Cell[BoxData[
  FormBox["penalty", TraditionalForm]]],
 " generating functions:"
}], "Subsection",
 CellChangeTimes->{{3.412234659484375*^9, 3.412234697828125*^9}, {
  3.412428157421875*^9, 3.412428171703125*^9}, {3.412489421765625*^9, 
  3.412489421828125*^9}}],

Cell[CellGroupData[{

Cell["Formulas", "Subsubsection",
 CellChangeTimes->{{3.412797811421875*^9, 3.4127978143125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"penfuncsqr", "[", 
  RowBox[{"c", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.41223805775*^9, 3.412238061296875*^9}, {
  3.412253000796875*^9, 3.412253004828125*^9}, {3.412489452578125*^9, 
  3.412489454609375*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"c", "\[LessEqual]", 
    RowBox[{"-", "d"}]}], ",", "0", ",", 
   RowBox[{"h", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"c", "+", "d"}], "d"], ")"}], "2"]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.41060295646875*^9, {3.410702749515625*^9, 3.410702768953125*^9}, 
   3.410759108328125*^9, 3.41076040246875*^9, {3.410760756703125*^9, 
   3.410760784546875*^9}, 3.4107608369375*^9, {3.410761536921875*^9, 
   3.41076155540625*^9}, 3.410761695796875*^9, 3.410761797078125*^9, 
   3.410763203390625*^9, {3.410844542921875*^9, 3.410844550984375*^9}, 
   3.4120834574375*^9, 3.412083533140625*^9, 3.41218512403125*^9, {
   3.412234686671875*^9, 3.412234712015625*^9}, 3.41223800540625*^9, 
   3.41223806190625*^9, 3.412253005734375*^9, 3.412351624515625*^9, 
   3.41235412665625*^9, 3.412362153015625*^9, 3.412404284796875*^9, 
   3.412426902703125*^9, 3.41243010596875*^9, 3.412489110359375*^9, 
   3.412489455*^9, {3.41248949990625*^9, 3.412489524*^9}, 
   3.41279106609375*^9, {3.412797777875*^9, 3.41279779525*^9}, 
   3.412912926484375*^9, {3.412914300296875*^9, 3.412914309921875*^9}, 
   3.4129472816875*^9, 3.412947476234375*^9, 3.413610242453125*^9, 
   3.413623676015625*^9, 3.41362450121875*^9, 3.41370119971875*^9, 
   3.413703189515625*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derpenfuncsqr", "[", 
  RowBox[{"c", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.41248906103125*^9, 3.41248910234375*^9}, {
  3.412489447703125*^9, 3.412489459796875*^9}, {3.4127977080625*^9, 
  3.412797710328125*^9}, {3.41279776240625*^9, 3.412797763578125*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"c", "\[LessEqual]", 
    RowBox[{"-", "d"}]}], ",", "0", ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"c", "+", "d"}], ")"}], " ", "h"}], 
    RowBox[{"d", " ", "d"}]]}], "]"}]], "Output",
 CellChangeTimes->{
  3.4106029565*^9, {3.410702749578125*^9, 3.410702769*^9}, 
   3.410759108453125*^9, 3.410760402484375*^9, {3.410760756734375*^9, 
   3.410760784578125*^9}, 3.41076083696875*^9, {3.410761536953125*^9, 
   3.4107615554375*^9}, 3.41076169584375*^9, 3.410761797109375*^9, 
   3.410763203515625*^9, {3.41084454296875*^9, 3.410844551*^9}, 
   3.412083457453125*^9, 3.412083533328125*^9, 3.41218512409375*^9, 
   3.412234715328125*^9, 3.412253010140625*^9, 3.41235162453125*^9, 
   3.412354126671875*^9, 3.412362153046875*^9, 3.4124042848125*^9, 
   3.41242690271875*^9, 3.412430106*^9, 3.412489069671875*^9, {
   3.41248910321875*^9, 3.41248911290625*^9}, 3.412489460421875*^9, {
   3.4124895000625*^9, 3.41248952415625*^9}, 3.412791068328125*^9, 
   3.41279773078125*^9, {3.412797778*^9, 3.412797795359375*^9}, 
   3.41291292653125*^9, {3.41291430034375*^9, 3.412914309953125*^9}, 
   3.412947286046875*^9, 3.412947476421875*^9, 3.4136102425*^9, 
   3.413623676046875*^9, 3.41362450125*^9, 3.413701199828125*^9, 
   3.4137031895625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"penfunccub", "[", 
  RowBox[{"c", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412797774359375*^9, 3.412797775484375*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"c", "\[LessEqual]", 
    RowBox[{"-", "d"}]}], ",", "0", ",", 
   RowBox[{"h", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"c", "+", "d"}], "d"], ")"}], "3"]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.412797778046875*^9, 3.41279779540625*^9}, 
   3.412797840765625*^9, 3.412912926546875*^9, {3.412914300375*^9, 
   3.41291431*^9}, 3.412947334375*^9, 3.412947476515625*^9, 
   3.413610242515625*^9, 3.4136236760625*^9, 3.413624501265625*^9, 
   3.413701199875*^9, 3.413703189609375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derpenfunccub", "[", 
  RowBox[{"c", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.41248906103125*^9, 3.41248910234375*^9}, {
  3.412489447703125*^9, 3.412489459796875*^9}, {3.412797713484375*^9, 
  3.412797715828125*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"c", "\[LessEqual]", 
    RowBox[{"-", "d"}]}], ",", "0", ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"c", "+", "d"}], "d"], ")"}], "2"], " ", "h"}], "d"]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.4106029565*^9, {3.410702749578125*^9, 3.410702769*^9}, 
   3.410759108453125*^9, 3.410760402484375*^9, {3.410760756734375*^9, 
   3.410760784578125*^9}, 3.41076083696875*^9, {3.410761536953125*^9, 
   3.4107615554375*^9}, 3.41076169584375*^9, 3.410761797109375*^9, 
   3.410763203515625*^9, {3.41084454296875*^9, 3.410844551*^9}, 
   3.412083457453125*^9, 3.412083533328125*^9, 3.41218512409375*^9, 
   3.412234715328125*^9, 3.412253010140625*^9, 3.41235162453125*^9, 
   3.412354126671875*^9, 3.412362153046875*^9, 3.4124042848125*^9, 
   3.41242690271875*^9, 3.412430106*^9, 3.412489069671875*^9, {
   3.41248910321875*^9, 3.41248911290625*^9}, 3.412489460421875*^9, {
   3.4124895000625*^9, 3.41248952415625*^9}, 3.412791068328125*^9, 
   3.412797733109375*^9, {3.412797778109375*^9, 3.4127977954375*^9}, 
   3.41279784303125*^9, 3.4129129265625*^9, {3.41291430040625*^9, 
   3.41291431003125*^9}, 3.412922216890625*^9, 3.412947339546875*^9, 
   3.41294747659375*^9, 3.413610242546875*^9, 3.413623676078125*^9, 
   3.413624501296875*^9, 3.413701199953125*^9, 3.41370318965625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"penfunc4", "[", 
  RowBox[{"c", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412920799546875*^9, 3.412920810296875*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"c", "\[LessEqual]", 
    RowBox[{"-", "d"}]}], ",", "0", ",", 
   RowBox[{"h", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"c", "+", "d"}], "d"], ")"}], "4"]}]}], "]"}]], "Output",
 CellChangeTimes->{3.412920811015625*^9, 3.412947348953125*^9, 
  3.412947476671875*^9, 3.4136102425625*^9, 3.413623676109375*^9, 
  3.4136245013125*^9, 3.41370119996875*^9, 3.413703189703125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derpenfunc4", "[", 
  RowBox[{"c", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412920813890625*^9, 3.412920829640625*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"c", "\[LessEqual]", 
    RowBox[{"-", "d"}]}], ",", "0", ",", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"c", "+", "d"}], "d"], ")"}], "3"], " ", "h"}], "d"]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.4129208249375*^9, 3.412920830390625*^9}, 
   3.412947352765625*^9, 3.41294747671875*^9, 3.41361024259375*^9, 
   3.413623676125*^9, 3.413624501328125*^9, 3.413701200046875*^9, 
   3.41370318978125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"penfuncexp", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412920799546875*^9, 3.412920810296875*^9}, {
  3.41292662196875*^9, 3.412926623390625*^9}, {3.412926857265625*^9, 
  3.412926857375*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   FractionBox["x", "d"]], " ", "h"}]], "Output",
 CellChangeTimes->{3.412920811015625*^9, 3.4129266300625*^9, 
  3.41292685803125*^9, 3.41292912784375*^9, 3.412947362375*^9, 
  3.41294747678125*^9, 3.413610242609375*^9, 3.413623676140625*^9, 
  3.413624501375*^9, 3.4137012000625*^9, 3.413703189796875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derpenfuncexp", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412920813890625*^9, 3.412920829640625*^9}, {
  3.412926625796875*^9, 3.412926627*^9}, {3.412926866125*^9, 
  3.412926866234375*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox["x", "d"]], " ", "h"}], "d"]], "Output",
 CellChangeTimes->{{3.4129208249375*^9, 3.412920830390625*^9}, 
   3.412926627796875*^9, 3.412926866859375*^9, 3.412947364453125*^9, 
   3.412947476828125*^9, 3.413610242640625*^9, 3.413623676171875*^9, 
   3.41362450140625*^9, 3.413701200140625*^9, 3.41370318984375*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.41279775609375*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"penfuncexpsqr", "[", 
  RowBox[{"c", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.41223805775*^9, 3.412238061296875*^9}, {
  3.412253000796875*^9, 3.412253004828125*^9}, {3.412489452578125*^9, 
  3.412489454609375*^9}, {3.41248948584375*^9, 3.412489486390625*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"c", "/", "d"}]], " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[LessEqual]", 
     RowBox[{"-", "d"}]}], ",", "0", ",", 
    RowBox[{"h", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"c", "+", "d"}], "d"], ")"}], "2"]}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.41060295646875*^9, {3.410702749515625*^9, 3.410702768953125*^9}, 
   3.410759108328125*^9, 3.41076040246875*^9, {3.410760756703125*^9, 
   3.410760784546875*^9}, 3.4107608369375*^9, {3.410761536921875*^9, 
   3.41076155540625*^9}, 3.410761695796875*^9, 3.410761797078125*^9, 
   3.410763203390625*^9, {3.410844542921875*^9, 3.410844550984375*^9}, 
   3.4120834574375*^9, 3.412083533140625*^9, 3.41218512403125*^9, {
   3.412234686671875*^9, 3.412234712015625*^9}, 3.41223800540625*^9, 
   3.41223806190625*^9, 3.412253005734375*^9, 3.412351624515625*^9, 
   3.41235412665625*^9, 3.412362153015625*^9, 3.412404284796875*^9, 
   3.412426902703125*^9, 3.41243010596875*^9, 3.412489110359375*^9, 
   3.412489455*^9, {3.41248950009375*^9, 3.4124895241875*^9}, {
   3.41279777815625*^9, 3.41279779546875*^9}, 3.41291292659375*^9, {
   3.412914300453125*^9, 3.412914310078125*^9}, 3.41292087084375*^9, 
   3.4129273549375*^9, 3.412928071234375*^9, 3.41292913215625*^9, 
   3.412929207421875*^9, {3.41294674784375*^9, 3.41294677015625*^9}, 
   3.4129468216875*^9, 3.41294736725*^9, 3.4129474769375*^9, 
   3.412951835875*^9, {3.4129524856875*^9, 3.41295248825*^9}, 
   3.413610242671875*^9, 3.4136236761875*^9, 3.4136245014375*^9, 
   3.41370120015625*^9, 3.413703189921875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derpenfuncexpsqr", "[", 
  RowBox[{"c", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"c", "/", "d"}]], " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"c", "\[LessEqual]", 
       RowBox[{"-", "d"}]}], ",", "0", ",", 
      RowBox[{"h", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"c", "+", "d"}], "d"], ")"}], "2"]}]}], "]"}]}], "d"], "+", 
  
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"c", "/", "d"}]], " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"c", "\[LessEqual]", 
      RowBox[{"-", "d"}]}], ",", "0", ",", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"c", "+", "d"}], ")"}], " ", "h"}], 
      RowBox[{"d", " ", "d"}]]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.412927826921875*^9, 3.412929150296875*^9, 
  3.412946772984375*^9, 3.412946823515625*^9, 3.412947375296875*^9, 
  3.412947476984375*^9, 3.4129518379375*^9, 3.41295248996875*^9, 
  3.413610242703125*^9, 3.41362367621875*^9, 3.413624501453125*^9, 
  3.413701200234375*^9, 3.41370318996875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"penfuncexpsqr", "[", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412946823484375*^9, 3.412946833125*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"0", "\[LessEqual]", 
    RowBox[{"-", "d"}]}], ",", "0", ",", 
   RowBox[{"h", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"0", "+", "d"}], "d"], ")"}], "2"]}]}], "]"}]], "Output",
 CellChangeTimes->{3.4129468345*^9, 3.412947477015625*^9, 3.41295249221875*^9,
   3.41361024275*^9, 3.413623676234375*^9, 3.413624501484375*^9, 
  3.41370120028125*^9, 3.413703190015625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"penfuncsqr", "[", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4129470020625*^9, 3.412947011734375*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"0", "\[LessEqual]", 
    RowBox[{"-", "d"}]}], ",", "0", ",", 
   RowBox[{"h", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"0", "+", "d"}], "d"], ")"}], "2"]}]}], "]"}]], "Output",
 CellChangeTimes->{3.4129470125*^9, 3.4129474770625*^9, 3.41295249446875*^9, 
  3.413610242828125*^9, 3.41362367625*^9, 3.4136245015*^9, 
  3.413701200296875*^9, 3.4137031900625*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4129467876875*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"penfuncexpcub", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412953018640625*^9, 3.412953029765625*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   FractionBox["x", "d"]], " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[LessEqual]", 
     RowBox[{"-", "d"}]}], ",", "0", ",", 
    RowBox[{"h", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"x", "+", "d"}], "d"], ")"}], "3"]}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.41295304275*^9, 3.413610242875*^9, 3.41362367628125*^9, 
  3.41362450153125*^9, 3.413701200421875*^9, 3.413703190109375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derpenfuncexpcub", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412953039546875*^9, 3.412953039984375*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     FractionBox["x", "d"]], " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[LessEqual]", 
       RowBox[{"-", "d"}]}], ",", "0", ",", 
      RowBox[{"h", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"x", "+", "d"}], "d"], ")"}], "3"]}]}], "]"}]}], "d"], "+", 
  
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox["x", "d"]], " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "\[LessEqual]", 
      RowBox[{"-", "d"}]}], ",", "0", ",", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"x", "+", "d"}], "d"], ")"}], "2"], " ", "h"}], "d"]}], 
    "]"}]}]}]], "Output",
 CellChangeTimes->{3.41295304565625*^9, 3.41361024290625*^9, 
  3.413623676296875*^9, 3.413624501546875*^9, 3.4137012005*^9, 
  3.41370319015625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"penfuncexp4", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412953018640625*^9, 3.412953029765625*^9}, {
  3.412953069328125*^9, 3.41295307140625*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   FractionBox["x", "d"]], " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[LessEqual]", 
     RowBox[{"-", "d"}]}], ",", "0", ",", 
    RowBox[{"h", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"x", "+", "d"}], "d"], ")"}], "4"]}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.41295304275*^9, 3.412953081140625*^9, 
  3.413610242921875*^9, 3.413623676328125*^9, 3.413624501578125*^9, 
  3.413701200578125*^9, 3.413703190203125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derpenfuncexp4", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "h"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412953039546875*^9, 3.412953039984375*^9}, {
  3.412953075390625*^9, 3.412953077765625*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     FractionBox["x", "d"]], " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[LessEqual]", 
       RowBox[{"-", "d"}]}], ",", "0", ",", 
      RowBox[{"h", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"x", "+", "d"}], "d"], ")"}], "4"]}]}], "]"}]}], "d"], "+", 
  
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox["x", "d"]], " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "\[LessEqual]", 
      RowBox[{"-", "d"}]}], ",", "0", ",", 
     FractionBox[
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"x", "+", "d"}], "d"], ")"}], "3"], " ", "h"}], "d"]}], 
    "]"}]}]}]], "Output",
 CellChangeTimes->{3.41295304565625*^9, 3.4129530835625*^9, 
  3.413610242953125*^9, 3.41362367634375*^9, 3.41362450159375*^9, 
  3.413701200734375*^9, 3.41370319025*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.41294680278125*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.412252559984375*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "=", "4"}], ",", 
       RowBox[{"h", "=", "1"}], ",", "k", ",", 
       RowBox[{"func", "=", "penfuncsqr"}], ",", 
       RowBox[{"derfunc", "=", "derpenfuncsqr"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{"k", ":=", 
          RowBox[{"h", "/", "d"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<d = \>\"", ",", "d", ",", "\"\<, h = \>\"", ",", "h", ",", 
           "\"\<, k = \>\"", ",", "k"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Square", " ", "penalty", " ", 
           RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"plpenfuncsqr", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"penfuncsqr", " ", "[", 
             RowBox[{"c", ",", 
              RowBox[{"{", 
               RowBox[{"d", ",", "h"}], "}"}]}], "]"}], ",", "  ", 
            RowBox[{"{", 
             RowBox[{"c", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "*", "d"}], ",", "d"}], "}"}], " ", ",", 
            " ", "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"plderpenfuncsqr", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"derpenfuncsqr", " ", "[", 
             RowBox[{"c", ",", 
              RowBox[{"{", 
               RowBox[{"d", ",", "h"}], "}"}]}], "]"}], ",", "  ", 
            RowBox[{"{", 
             RowBox[{"c", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "*", "d"}], ",", "d"}], "}"}], " ", ",", 
            " ", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Exponential", "-", 
           RowBox[{"quadratic", " ", "penalty", " ", 
            RowBox[{"function", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]",
          
         RowBox[{"plpenfuncexpsqr", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"penfuncexpsqr", " ", "[", 
             RowBox[{"c", ",", 
              RowBox[{"{", 
               RowBox[{"d", ",", "h"}], "}"}]}], "]"}], ",", "  ", 
            RowBox[{"{", 
             RowBox[{"c", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "*", "d"}], ",", "d"}], "}"}], " ", ",", 
            " ", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"plderpenfuncexpsqr", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"derpenfuncexpsqr", " ", "[", 
             RowBox[{"c", ",", 
              RowBox[{"{", 
               RowBox[{"d", ",", "h"}], "}"}]}], "]"}], ",", "  ", 
            RowBox[{"{", 
             RowBox[{"c", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "*", "d"}], ",", "d"}], "}"}], " ", ",", 
            " ", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Jump", " ", "penalty", " ", 
           RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"plpenfuncjump", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"penfuncjump", " ", "[", 
             RowBox[{"c", ",", 
              RowBox[{"{", 
               RowBox[{"h", ",", "k"}], "}"}]}], "]"}], ",", "  ", 
            RowBox[{"{", 
             RowBox[{"c", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "*", "d"}], ",", "d"}], "}"}], " ", ",", 
            " ", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"plderpenfuncjump", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"derpenfuncjump", " ", "[", 
             RowBox[{"c", ",", 
              RowBox[{"{", 
               RowBox[{"h", ",", "k"}], "}"}]}], "]"}], ",", "  ", 
            RowBox[{"{", 
             RowBox[{"c", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "*", "d"}], ",", "d"}], "}"}], " ", ",", 
            " ", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], "\n", 
    "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Show", " ", "the", " ", 
    RowBox[{"graphs", ":"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Penalty function penfuncsqr:\>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "   ", "plpenfuncsqr", "   ", "]"}]}]}], "   ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", "\"\<Derivative of penfuncsqr:\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "   ", "plderpenfuncsqr", "   ", "]"}]}]}], "  ", 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Exponential quadratic penalty function penfuncexpsqr:\>\"", "]"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "   ", "plpenfuncexpsqr", "   ", "]"}]}]}], "   ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", "\"\<Derivative of penfuncexpsqr:\>\"", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "   ", "plderpenfuncexpsqr", "   ", "]"}]}]}], "  ",
    "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<Penalty function with a jump - penfuncjump:\>\"", 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "   ", "plpenfuncjump", "   ", "]"}]}]}], "   ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Derivative of penfuncjump:\>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "   ", "plderpenfuncjump", "   ", "]"}]}]}], "  ", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.412236270484375*^9, 3.4122364320625*^9}, {
   3.412236484625*^9, 3.412236728546875*^9}, {3.412237186671875*^9, 
   3.41223727271875*^9}, {3.4122380833125*^9, 3.412238125421875*^9}, {
   3.412238173046875*^9, 3.41223823634375*^9}, {3.41223827696875*^9, 
   3.412238299421875*^9}, {3.412238823546875*^9, 3.412239108265625*^9}, {
   3.41223915046875*^9, 3.412239195203125*^9}, {3.412239359203125*^9, 
   3.412239412703125*^9}, {3.41223944496875*^9, 3.412239720296875*^9}, {
   3.412239831515625*^9, 3.41223987940625*^9}, {3.412239936*^9, 
   3.412240024484375*^9}, {3.41224020475*^9, 3.412240317234375*^9}, {
   3.412240350234375*^9, 3.41224053878125*^9}, {3.412240614796875*^9, 
   3.41224065996875*^9}, {3.412241248765625*^9, 3.412241271703125*^9}, {
   3.412241301953125*^9, 3.412241419078125*^9}, {3.4122524510625*^9, 
   3.4122524799375*^9}, {3.4122525288125*^9, 3.412252534390625*^9}, {
   3.41225304525*^9, 3.412253056703125*^9}, {3.4122549141875*^9, 
   3.412255005765625*^9}, {3.41225507725*^9, 3.41225510509375*^9}, {
   3.412255254296875*^9, 3.412255330296875*^9}, {3.412255958265625*^9, 
   3.41225599040625*^9}, {3.412256184375*^9, 3.412256188*^9}, {
   3.4122562395625*^9, 3.412256253453125*^9}, {3.41225629178125*^9, 
   3.41225629378125*^9}, 3.412256330765625*^9, {3.4123541725625*^9, 
   3.4123541730625*^9}, {3.412797688359375*^9, 3.412797696546875*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"d = \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\", h = \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\", k = \"\>", "\[InvisibleSpace]", 
   FractionBox["1", "4"]}],
  SequenceForm["d = ", 4, ", h = ", 1, ", k = ", 
   Rational[1, 4]],
  Editable->False]], "Print",
 CellChangeTimes->{3.4137005115*^9, 3.413701200828125*^9, 
  3.413703190328125*^9}],

Cell[BoxData["\<\"Penalty function penfuncsqr:\"\>"], "Print",
 CellChangeTimes->{3.4137005115*^9, 3.413701200828125*^9, 
  3.413703190546875*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFzgk01HsbwPHBGIaZ+YvcSCglIW7XelHz/GW7QmhEt5E2e25oQSVCylY0
pawtlpI3a7lFMj+yp4uyphuKpGstsqSZd7zvPTO/c57zOd9znvOc37pD/rs8
hAkEwiPeLHu4KGmSy1VGhH/fyu+rN5osCbrWMtc1aF7QG9+VN41NCfoz5UN2
76CgA3z19zx8Lugw1TfI86Kg09LXs17SBH2rP8bfkazE75/aGPbqsor8bnRg
mL9QXcPv39RVT6xXUeC3caHr3dafV/N7Mc5TRkddnt+zcznJbmpy/D64wnp1
v8EqfmdEsntldX4S3L+dnn6bLsvvn3c+ODZrv5Lfw4zE8wQ7GX5TSD0p+5nS
/BaS+jpyYvcKfv+Sv93WyUmK37bhf8snOwja0ylkpNNW0BmcgkgXC0GTGPLl
ew0E/eb7pOpBOUHPtMV9vbNS0Nhd1er3UoI2d2C6upMF7ab6TT1XVNCnFpPm
hoUErXbLJc5uCUMyBpwEhnM83dX6kmrrDIY4sVZrSfZs+pWvNchhHENezILq
l+2d9PrMeearYQzpaWfmHPEdpn+30p5jvMPQAaPCi4aPp+lbvhxmdXZhqGBb
XFLI6UW6R0aqlksrhgi7AoNCw4UhzbK1sacBQ5v/ZO50zRKH1imi+16EIVcb
YltfLgbEdGNu3xMMNcSUnf1RKwNGFgFp+0owdIj42ydXNTk4Opmr338fQ2Ep
5WqUxTWQndrXdiALQ5dVRG9GK62DHrMVfu/TMKQkmimtNb8eqBOWYu5XMTRx
PCdwiawG21NCs4bjef/xV3j6laEBBWMjPZ9CMVRCfEDSatwC768rnvA9iaEb
HbR492odkDNlYGN/YMjJ9z6xuEsPIpOrLCbdMPT0U3R35G4jeAwzAwEuGFJu
b9giwTaBsVH10C/2GMoONw3PNaeDMz25dBbH0IVVEz8kX5lC/Kdmu2AjDC3c
4Fybo5sBYhFG53/BUOj3/I3j5eagMXJEeUkFQ6VHuo2+9VoBJ3F7grAohgan
wpTP1ewEXeMQtfM/aOgf88d1f9s7gPdQQY3oNxoaF/4Rcs7CEV79Kr8gPkJD
cYxj3R0WDLg3OOmBNdEQx5J4ojzNBdKUlkonEA096Sqarn6zBy4zxQl/PaGh
EK3Peynr90JQ59q0hDwaCtsiOeXZ4grmTY5/kWNoKMIynCVvehB+JbkpjIbT
EFcjKVxV+BBomvl6NwbTkOZx70O7Gg6B9LNI4YteNKSj7U/G3NxhoPihAdGK
hhztO9/KPPOCjnF21Ac6DZ13WBeidssbGjRa2moMaMi3TI/sGu0DhTlDvhEb
aejd/RLKJrcjEJoie4sjSkNvthFTbUz9Qe5csNhCLRVh5AuHBz4eB8qzKKee
Sirat9GrfzrkBHAXEu88fkRFcbOaXTLUk/DxeJ5JUA4V6dw/oBdrEgSPvHr9
v0ZREdUz6KFRSQg42Jv0jG+nolF9RmUJ9yyYJ1ipvjSmonF//4/NpWFg2MQ4
9kCHil4x/eNnvMJBycyPckSFik5uoGZv9TsHYwaZ+CchKnLcSoMNoxEQo8TN
e48oSGGVz1LYymjoj1G6bltOQWL5b7SCgqPB4Ou2qD9LKIjTv/sqoy8ahhpC
98VlUZCUvs8iyr0AeODiCp3zFPQ8SsTI0yIGFp7Pno6woiDnh6SQN0Xx4Osz
Zrv2L0lUUZDNeZRyBapfSxrH1UuiiXvfuq/2XAE5uqbaTJUkyju+88WwHAvq
pX2FGoskUWE4hfAhjQUqlSNl/lckkZBvzZ3tOVehj/ZBie0kiSovytZfb0kG
20e9U/v6JFDxyB4W63gaHCppTVR9LYGyp7p03BvTILiwTnu8WQI5+NnMVyqm
Q1ZeiV9ohQQqe7rqi0hzOsxnxH5KS5VALyq23RnZlAk50UYD3S4SaGVm/zdh
wm1Yck5tdewgoy6lFuVWcjZIOyUelW8ho/07j0H+1mxQc4ymDj4nI6vHV6cb
/bNhl02gTcBDMlLQ/43a3pUNeWDdcJlFRqMDwSqUvBxw2rRQ9cKBjBQXpp9r
udyFgoU9hRYvxdGgpuMHpU/3wTx9PlO3Thzdvsm1c1HJh7dbUy6teyaOuj0W
37S55oPEuW6/Hw/EUcd0B/Piq3zwJjlrliWIoyqu4oJQ9X9ARYaRt8FWHGV/
5d7Ryi+AlM12WSIvxFBRZoRzUVcxnN9ver26kYT8ckU6rpqUQbj2jKpxNQkp
TncFMNzK4PSPu2Wl5SQUqpHk8XNEGQSkUzqz80nIzPOR89aGMmB2d8tcSCCh
JaFal3ynP0HH/uiVHQ4kxG3idnSdeAyD9PSE192iiJkx+jSwuRzoSrORwx+J
KGrHBZOi5iqYDw+rffqOiJJF8qcl56ugZFCMxOoiouDyTQuxqmzYkLs6ll5P
RGkKhkuj59hA3own3sglovK3NqMZaxB0GMWnW7sT0T0tvQOUHgQ+u9c9KhgU
QaPp69t8mDVwLcFu+ORbYTR3/+wTpWt18JIRaFs4Q0ADv1h5RO5ogfmgpaez
mzls9ZrOs3sH2iExd3+zl/Iie7rp/aZa3y4Yi/79vbrLN3aN7XAlptQHkXUZ
w7XbvrDNKO3WT5gDQE5wPyPlP8auqD52r8z1A6RNVdINx4fYf+zWTd3r/hGM
1RxKlFm97KyAunrd8VEo8BZepVJVyz59JLC94OQ4BP4jvSZQsRSYrprFuqwp
UNfyGPMo7YC8uVMR0iVfYItfWdmqoUEI2RMdLdk0A79H5d7cseIziJ0NrtTV
noMzCnoVE71TYP72W8VEzAK46Zm1YSkzQHc/8XDDzHcQmxD/7nJvHt4Pnx04
9ZAD/8warnEIXIIReeq79mICbtNKu29oScA7DGvN2vSEcY2oFHndHcK4iar6
pEqNCL7xnXP0BU0inhxnIe9nJopHxwac+UOfhI+1axdozJJwobdVfg/WiOM3
e8JsFFPFcTFajq7LIhm/ua3Psn+7BB6QNHQ+mUDBXSbNtRLWUvC58t/bNYeo
+Een0nCpcSo+qKuRt3sKw2POLLBceCZIkRyv8UzNz9x8neev44MLr3iydMLr
O3gm3U21cZjGcGO7xUVHnnR58uSOLxh+sKDN05ZnGmdEH5/BcHl5jrUpT0ZT
7nONeQzXvMmka/Lk5Eb4+fDU+Jzfv2x+5D7ZPJ4yiYYRywpvlfVSXcDw9A/i
dcsWF56XWLuI4VGP4+2XpVw77Ci7hOFPJaQDln0SAIsMnnrDBrJOPA/bKWSz
eCbLpVYsW0F6PYP9wHDJOFmSFE/vU9tTJDgY3nFj4tayK52VTK15xhpxLJdl
6yyOXuS5Uc9mYtmfxkpMRLm8Pb3MbcvWNF4aMuPpZZQ1vOzRXJ9LkTyzbgz9
z9WRFgbVPOt2uv9ft3X9XJ4t//pfvQPkqw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.41225533090625*^9, 3.41225533696875*^9}, {
   3.412255418640625*^9, 3.412255431875*^9}, 3.4122557446875*^9, 
   3.41225613753125*^9, 3.412256254703125*^9, 3.412256294453125*^9, 
   3.412256331953125*^9, 3.412351625515625*^9, 3.412354126859375*^9, 
   3.412354179484375*^9, 3.41236215321875*^9, 3.412404284875*^9, 
   3.41242690278125*^9, {3.41242809871875*^9, 3.412428114984375*^9}, 
   3.4124301064375*^9, 3.41248952434375*^9, {3.41279777825*^9, 
   3.412797796703125*^9}, 3.412912926703125*^9, {3.41291430053125*^9, 
   3.412914310171875*^9}, 3.412947477390625*^9, 3.4136102430625*^9, 
   3.4136236765*^9, 3.413624501640625*^9, {3.41370050128125*^9, 
   3.413700511640625*^9}, 3.413701201046875*^9, 3.413703190546875*^9}],

Cell[BoxData["\<\"Derivative of penfuncsqr:\"\>"], "Print",
 CellChangeTimes->{3.4137005115*^9, 3.413701200828125*^9, 3.4137031905625*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF1Xs0lHkYB/BhGZeYlzIy41ZqtFNrKzG1keeN3MdGFBVKbimFrttqt3aa
Yh2WFa1bpVOkNorUqrXNi6mTNrIuHWRpNJNIZnJrjDGzv92zZ97nnOd8z+ec
53z/fRbvSdoSq02hUBLQ/pvRt3OkarUtQfl/zGaZ9i5K0kKvsvBjctL2/Q+a
R2WkR4zeXO0RkU7e5xx2t4n096xeIi6NdFHxktwWGunLA+lJQQY2Gpu3BW9m
0601fhoYvOlPlpXGPmzWkSV2lhqvrwovf7GSqbEiI26BI5uh8dSna/mRyyw0
jjL1ZQ5wFmpcwhP00B3Nyf7S4uJSN7rGK7++dWhqs5nGkuBsPiVggcZG1O6C
XTvna6xlMjF0ZKupxqtvunNDQkw05p76m5EfSDou5JuhLi7pElUlL9STNDWY
8WAHh3TvrJQVZUF6si1j4ooZaayc1TBoQnpT4M7wGAPSkaxpdpku6ROKnE8S
LdLLLodmBCgxgvKU6lF53gHCfbNYLyaRfQ5IaqO84OeJRiLwA3KS0Qa4vQWe
XJTvbJcgr9+jd81hB6waj87teon8jtrKyY8BneL16ld1yLB9NaU5Bb7yTC6K
qMYIonosurDiMByUljkP3MCI00v5FxzTj0K3h2niYBG6N7w9G+N9AipHh7rf
ncSI3fu034j3nIZtbvk1UzhG4M5hlb6iNLguksZizTQiR6J1xSDpPBTZKGvG
CBqx29ytzezjefhppz6ltY5GLPL+Vm17OA+OdS0qyqygEaUV4xGc4/mwqTmo
1SCdRhD73zCjT/0Cr+/c5eh40wjKuDCvPrsYLE4f15sRGhO42kO4tvsKpNuo
KwYJI4KYp1c3Ir8B3NoeWcQrQ6Lty0LX9NxaqJwJq/Js0Se4jBKv4Wf1wN+1
8ULDUyohx7/rOHmwEdxspniStzoEv4mucHJ8AnmZAZKjfdpE99sYZzPvZ9AS
nMKtmqQQcWHW8VfNW0F+TPn71BcqAV+oZXd2uA2yy3Y9i7dVCNY5tDG5snYY
Pbt9kB06LTDc0EHb39kJvMclEuGGcQFcXJ1lLXoJBpkxqSZJowJVn73IRdwN
RbJ6t7UfxILepsBVNcJeWL8ssNo2t0fAmO0yqG/pg8q92gvtHgkFR3uy+61r
+yHl/XyrFOsaqPJPFh71eQ1sh9jR2JpO6NjyJNLeXwSrEu/dWygWwbnK+9M8
10HYfqbskp/pCOy/0xnMdn8DqZZOD8d6ZDBAzapK5Ygh0smjDSuYBIsWk8nP
7CWgN6Y/G3pdDjyXRlUX+y28n1prFZiihNQ5Y70QqyHwf0G7sdaLgpfHp3Va
LnkHy88UMNb4aeP5G59nMljDYN+/7ey5FTr4gqRf3ZvoI3D2x+TUA85UvHFT
3R/3me9Bq+9R4i0rfZxycBdnG20U9GjX1oQqDHAdvfbCFXOjkJwj5udTjPB1
Poca/Shj8OnB9r9WiI1xZd+td/TxMRCtWV6xVYbhMga9c7lcCpkm1KA8ZC/9
M5/7Ia/7IJppRy6Zlp1MQM4pL/QP/IjhPh3PWRXIbgwDqd84hl/O5B9nzUih
SDXkjE9ieIB6grlIIYXg5rKm5XIMvyluj6IrpaAq+yExAVndjt93Qr7Ji6BX
IG9tqDIMQdZ2pcezZjBc61LG3VzkO1V8w0UKDA8Lddc1mZOCUV50EF2J4dRn
1RWGKinUJYMiGDm8znaOjRwdYHk1F7mmPCvIF/khtWMSm8PwiDMJijTkvSfc
CwxVGF7rupirq5aC2Tabjb7IhiuyS5ciCxwVw2nIuxlzkx7I5qPVLrpqDJ83
3X2Rh9z4NEvsgRwl9hq/gnywLCGLh/xbe61XAzKT58lpQDZusCt+jfw4cvGA
GnnPf39ICv8AD+G2Hg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.41225533090625*^9, 3.41225533696875*^9}, {
   3.412255418640625*^9, 3.412255431875*^9}, 3.4122557446875*^9, 
   3.41225613753125*^9, 3.412256254703125*^9, 3.412256294453125*^9, 
   3.412256331953125*^9, 3.412351625515625*^9, 3.412354126859375*^9, 
   3.412354179484375*^9, 3.41236215321875*^9, 3.412404284875*^9, 
   3.41242690278125*^9, {3.41242809871875*^9, 3.412428114984375*^9}, 
   3.4124301064375*^9, 3.41248952434375*^9, {3.41279777825*^9, 
   3.412797796703125*^9}, 3.412912926703125*^9, {3.41291430053125*^9, 
   3.412914310171875*^9}, 3.412947477390625*^9, 3.4136102430625*^9, 
   3.4136236765*^9, 3.413624501640625*^9, {3.41370050128125*^9, 
   3.413700511640625*^9}, 3.413701201046875*^9, 3.413703190578125*^9}],

Cell[BoxData["\<\"Exponential quadratic penalty function \
penfuncexpsqr:\"\>"], "Print",
 CellChangeTimes->{3.4137005115*^9, 3.413701200828125*^9, 3.413703190625*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF1nkw1f0XB/Brudd27/2GlF2lm58lSSLknm9IEVGWlBKlSNYSJaXsiSwP
T7YeJVvSolJk+X6yy/pkl5JdRWQny+/+Zn7DmTlz5jXnzPn7vfmM69Fz7CQS
aZjV/5tnX0SOraxIIdL/a/0f0W2ai2su00s76Tm35m1f86tHxtf8g9r3uKNn
zW6Ouy1fl675JqMTnQ9ec0KidHQdfc3J3SGuR3gkV72h0dRYVkhi1VUmpro1
DPFVH5RleEhvEVu1xvOT6Q07RFe9EHpeUFlWZNXTs6mx1jLCq7bl1xftVt24
6iQ/okNIecPa/4eJiQ+ZQqvecTj70rTx+lUPmEYEkIwEV02ltMedthJYNdu6
ySEPc/5V78zSNjQzW7dqQ98vIrEmaz5vdnWoxXDNScvP/I7tXzPFVCT/hOqa
O/+MMWyF1zzVGDr5aP2asXTGh951a9Y1sTppx7Nma8aMbBp5zdcWImcH2NYs
k3ws1GgRQ+bM6Lf2Uh7Mk/rhjIYpDFX9Hs7fwZ/BjJosQSajGBK7Pe2stBEx
Kx7MWX0awNADUuOi4YMG5p8DirOmXzHUkKNcJb29k6k0cTa6pRVD+p6fp9xj
+pjnkuK3H2vAkJpKVvUX25/MBL2GqvZKDMkuK63/BhPMhnFOuxMIQwf1rbb4
ec0yORM1Vj7nYch+TvGbgeUSU32/W8KpHAydqa2Xs/zNBi5jabu7n7B8ptcm
5i4ZHsd/brRJwZBq820joes80K7D79SbgKFMvZADGxANaL/0uOz+wlBgYqnN
he38oB3nkzJwF0NOqcNbS9ME4dnIUPuwD4aEOWtTv20Ugd6/JTwcr2DoXqyb
yjd+cRDeZ4qNOGOokiIweVRNCvxii/ePWWPomr6tVCC7NLyDqW9uxzB0kfgY
XN66FUa+y/pMGGOo5+f1mj9oG1gwY19N4xhSuFpxJahNDu4OfzTyUseQ1pdg
1XmO7YCiSd/ndmKIfGsw6B+9HSA3dFFqcQuGvF8dHLHmUobTUY/e3xDD0PGP
R1TlDXZBjGab+YoghgaUJk7siFOB5QjtMHYyhgYdvo4umavBLo2rMgFLdDR+
kLukrXwPOPQ/KyHP0NHgiZC93Ps04NMekXnuITp6XfB4Y9hxLcjoGTuHVdOR
hHS04yKPNiRILr76hejIw/JP9lkOHbhnxU2qz6MjnVp3rUQOXfBs2ZQQlklH
l25jRyOE9UC3+kg9TwgdpSyXiAjHGsAeirXYd186MkssCb1XfgjkdRwdqrzo
CLe8/M/SoiEIFPmxB9vTUf3PE9ydt4zh28vXqpwH6EhjWswr3OUoNI8S/n1M
Ojolci13YospVMrVNpao0lHIkQ403GkKz1P7HW9vo6P95M6YKHNz8IkTSl4m
05H87rwWSU9LEL7lxTVfRkOyyVXi7udPA7XI36y9kIaiBDIWwuVsYGU+4tG7
NzSkZKddjh7bwODlTE3PVBo6d8HpY2miLbyx73Cd9KehtP711HMpZ8HEWLN9
VJuGhAYGLbX5HEA37ACjToOGvt2YXqY/cgC1atNL2co0pKfulFq/5wJI6jhR
L26hoR2x55wVXBxhRPUBPsxGQyeqXJJCxp0gRHIlsxdRUWaWk+MNOXfoDpH8
2zCfiorID1rVfd1BdVLL/20OFe10xQ07mt2hv9LnVGgKFcWW8KSU+l0C3H2B
XzmAiuI9kmUtvl+G+dJp79sHWPcBlsLTPZ5goijk8BOoKPR+5L8y+70gM07F
3HwPFXU31v3Ue+IFFs6Xd8jKUpHuidQUQ4+r8GrD775GXioaPICVBQl5g+OF
EcNN9XzosbsvbW/gDfjQxKcRWsGHLi1ci/aZvQHCTHmZqWI+9EHPSui1402o
EHBkq3rBhwyLngVymvnClsKhXNcoPrS1XFCMEX8LPtP7JAkzPjTcPOM5fc8P
DN90jJ/6zIvKTJ6njHcGwZmchghGEy86EBdYpiAXDF7PyxVHP/KirvBiKbJ3
MKRk5jj5vOdF7F+FZcLEQmAu6c5wQjwvsn5BpaycuwOpgerf2o7xolb3LsEW
4TBYtIhvONLMgz77sv+bsBgJAmYRLiK1PMgh1+CQnWIUyBwJpPWU8qDss4oZ
fjZRcPSQ+yG31zxo5OPJvuLyKMgE/cp70TxI/7BFpGZMNJj9Z764xoQH3XbQ
V/TaFwPP5i2f76/jRoPPMp6FfL0PuolzD3aVcyO8rsMMF42Drr1x4ZuLuJG6
rl6BiUUc8N5qc1rK5kb+pXfSfRriwIFiIZ8bxo0mdzzdzFURD1sETTO3GnKj
eU3348JliRCnYJTCUcOF6h0S7LvZH4JS/UjU7xIutIOZF39z20OodA273f2e
Cz034a8yMngIM69qbAqyuFCUTHKkT/RDMFU3kLocyoWEKk5tkGI8ArregaRe
fS7ELy1qGG2aAgGn9/39oYqCKP8Jp3C1poKv4hRD4wMF3eQypa9bSgXvpfTc
V/kUdGgySEFvaxq4JVJbHmex9u8+CGhcTgOrtjbBoDAKUrB7YaEjmA7Kxi5R
BiYUpJFy/cyEVQb0MBPDmtrIaKzIn9d7XRZ00Q6LGzaS0dDIJWtLrSxo7SJl
l1WRke5sjIC9YxbUep+vyc0no8T7T7g2lGdB3tudvHGJZJT6RlaiyOcpRCpW
BZ88TUZad+O7DkxnA1Ny2m9gkBNZ8+14wk15CXO+N8sKvnKiEGLbG7T5JeT0
cFGiWzlR5YqX+n2tl7A1TfQOs4ITBb0Y/ZN85SXwKOAR99M4kaON0+ktQy+h
Wf1uor4dJ3qgWfp2oSEHLphvfvOshwPJOwqK+OS/hpgwo4ErXexIbbPKj99j
7yBH7EdFazM7Mki9oODNnwf1WUGZanXsSOm61c7Nu/KAu5q4OF/EjtgF+spr
PPPgOll5wieZHYmFbByJWcmDMzc3rPifYUf0NukO8sb3oOTWLRw9zIZqud9i
HacKoc7U3fD5FAn9oMn23slA4BT87ubuURIS7yN/JxUi4C1Yelk4QEKKmvKf
QhoRHNwSKlTTSkIe60VdauYRlIynfB3KIyGXzV1I3OgD5IU3u22+QUJNww63
Zmc+QGqlWmwMmYSMKtITao6VwpznYsG0wjKxx7Zw+adxBbziUA0gxJcJ1wg/
f7aLFeAc6Wp4h7pMjHUbxW8PqoDeJ71d4iNLhPlFxSfVhRVQ01W1pPN0iVBR
7n0tIF8J/2jHQrTsEhGQ7mA+yVcFunTFUsVti8RFZf5fet3VEJF2+qO91ALR
YUXexNdQB+vCiU966xaIwooq6YnROoj2kPrMYFsgXEX7H41R6yFGp/tnX+88
8b6kUl3xUD0k9FjTbNLniQKLSv6CqnpIl7A2sdw+T+R1NmpJVDVAcezJ1oOa
c4R02kym7EgjjAQe75U9NkPU5jSLhW5qgh/R5w+X6c0QHEtnA4JUmuB78uX3
1qozhIzk4c6og00wmB8e/ZfQDJHokOnc4tYE3aMftJeapgn2N04Yf0kTfDKX
e9xoMk0wXhgq29o3wzvGn7NeBlOE5ouM/Q+KWsCvPGmgTGuCuGoX2nw0oR0C
xJYmnm6fIB463bjXmdMOQe6nSH9JTBDXQ3WfXqpuh1AJSTHbpd+Ed98Nxea5
doi+kmyyVPibsIvP0j1l2QEpjJSC3Xt/E2ll8xwRop1QGpgRla4xThyszZLL
fvoZeMLsrq9zHSFaN2mNvWbvhoTxQqbaaD9x1c/Yo4KjDzRkTHKkojsITPGb
nJ7nEDxzYN+4pbiMeFzp+AgMRsD9p4C4u8Qr8O0YvP3jyzjIbj83cu5VMzC8
CTaS7hQoOeXmbuzvgXfUlpv7h2bhuH/aPwb8P6BxRGmBlRjgupjK+18d4xBH
ifprKYmEW6voNGJxU3A+ZWqReZAD5/rF/edYxhws/vml5hpJwX9Oq4mbuC+C
c2mXYB0XL36ogf5ETY+Eez7qlQvRo+Ny/nEiuwzY8dmgC4s8vvz4tq8WgUHy
nDjfiib1x6wgHnjH7brzbgou57Ry0nhhA87WVeyULc6NO3s6zXzZJIpz0VN3
HVvgwd8KBxf0REngbpH9AbEkKo4M1ZOTvm7CZ/OP/yvfT8ONb83EqPFK4z27
5DLNxzGccsedu/oJAw9bRzkSw/J97snvElkMfM9oz/yn/9n3fu0lliPT4w+Z
/MbwPlv9WPGnDJwpwjNmMIHhScePqLhlM/CE5aHd+BSGOzCmMze+YOCm1Wml
cnMYXv881cn+DQNfTrvtdIFl0f67lwpZzvI7JZTJ8udbf1/jz2Xg7HuF7Bnz
GF6wLHS3gOWXzwN4Ny1gOJdLcQH2joFTY84eEVrE8Dz5PNO8fAae5wYLpiy/
9Gm7SHvPwM8aiT2OZlnBWTTwDMvvKU1T2BKGv9XgK6AWMHCHa9pxvMsYrvMj
TsW2kIGvt5Dcp89ySHyL+VuWCeWF78EsW3OqXuUrYuAbRnI0ySsYXip6BuWy
XFIV3q/DskXd9kHeYgbuknYh3I9lP30Jmg3Lon77VT+wXBWttDuX5XLrzd0r
LKdl21vzEgz8vxjFdnQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.41225533090625*^9, 3.41225533696875*^9}, {
   3.412255418640625*^9, 3.412255431875*^9}, 3.4122557446875*^9, 
   3.41225613753125*^9, 3.412256254703125*^9, 3.412256294453125*^9, 
   3.412256331953125*^9, 3.412351625515625*^9, 3.412354126859375*^9, 
   3.412354179484375*^9, 3.41236215321875*^9, 3.412404284875*^9, 
   3.41242690278125*^9, {3.41242809871875*^9, 3.412428114984375*^9}, 
   3.4124301064375*^9, 3.41248952434375*^9, {3.41279777825*^9, 
   3.412797796703125*^9}, 3.412912926703125*^9, {3.41291430053125*^9, 
   3.412914310171875*^9}, 3.412947477390625*^9, 3.4136102430625*^9, 
   3.4136236765*^9, 3.413624501640625*^9, {3.41370050128125*^9, 
   3.413700511640625*^9}, 3.413701201046875*^9, 3.413703190640625*^9}],

Cell[BoxData["\<\"Derivative of penfuncexpsqr:\"\>"], "Print",
 CellChangeTimes->{3.4137005115*^9, 3.413701200828125*^9, 3.4137031906875*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFzHs0VHkAB/AhJiPNHXHlXWpHizqRV0b5/fKoMGqEocajPIrWe2O3tNEY
PSwbllaD1KmJOh4RrUfMVXRoT1FtW9Q2XrMij/FmPGbvnrNn7vec7/mezz9f
o+CYI2GKJBIpAu9/G1KZNSGTbcJI/0dzSdfYfplw636Bf+ICYePP9R2jEsIj
agN3uvsIx5629nv0jPAFeg928jJhfsHWnJdUwsWiKzGeFEO5tbq8DpugBnK3
s7yc/6Dry33QhH5m6xY9uRkV/vc6d+rKLU0/qbHLREfu2fm7eYHbtOU+oe6q
K7LZKHchV9iN7tIi/m8VFNxyQOXeeagsfvawptxir2s8koeG3GrkD/lBnA1y
K9Cmh874qMtt8cCR6e1Nk5uZ/LdOHovwSe8fh94xCReulnN9XQiTvXTqj9kQ
7lmaoJ/QJjzTlT59W5Mwco/e0k8j7Mzi+IdSCAfS50wEyoTPSrPmxQqEtxX7
pnssI1hOxErUo+co8HfNpHfOIBiMUjbzTjEH2dNPMdYYgu1RZBth1+3B86IF
zhsxguXF0izOHXMC5lMhOe/+QjDhSvL2YN4hoFTAkH2sQzAfA1MjfuoxYOcS
yw+oQrByz3B3kV8AiJ4QWIvuI5hn9p5xqvZx8MFJPbKfj2DtjJU4l6lgUD46
9OHLeQS7vCbZrrg6HLAd8qpnIYKl/bxX+XeLeFDSNxGGdFCx8LPvzYKdLwC+
4XL1OEbFeClmS5W6yeAXjgrpVR0Vs9hxjV0wmQwS323mZ5RSsZYm2ZygKwU4
d3i+olyhYtHxG0qoPC7offjIRukAFfs+xo4zsJgGtFN+WLvYuh4zdq3Uqt2S
Ca4Yykr7MTWshnFzt7LddcCs6ZYEfFTFwsh3Kyyt7oDyRb8Kl5cq2DjlxAAl
tRzwgvZdb2knY/U7wVWtqhrgYDjLFf+jhI0fDqUH6zWC3AwPccInRQwwvxGb
Z7eAl15xzIoZEnbpp/sU9942sJC43Di7fVVYGakleV35AlwTBL04tUkq9HO7
fZPj2QVG0472m/jOCeuOM3KPnH0LuG2F4ta9U8KGtzUxmznvASUjNIkWMypc
SPD/Na/yI+BLnjjYjg0KVbeadKca9gLGNlbVppxuofN05dicuB+Uhytu3NLc
KjydWRGT1yUGcV836McZVIPSU0rDXQrDwGRH2GhY9Z/ANNuVJekbBeaRtbUb
B/uAZpGrnkOiBBxNFdx0Ux8BZSNxGbwvUyBJz6phvFsCBmn95rSEWRBo5dSF
5M8A7eWr6x4wFsDacZUl35IFMNI32HQwZwl8nbXVZ8UtAzbbxzuUIgPundT7
tvtJUOtC/EgiXwGapubrWLopwuLJQpe8vjXQ+DM77ZKZEmQEDf+WbE+GaVdj
k6KsybAT8A9lrKdAhU/NkWX6KrA60vzimvl1cC31rqWvlAKdViZRZT0ExmYN
8vJIajBdYME5F60O5+uPvjYbXA+ZafWZMEAD9lmalvpIEDg7UBIeW4bCDBrZ
Mxc3pfm7mgbcu8f6Ft/gfu+oqaBcjsKsezfcWZMI7GRrFN3A7aBDmXCbQmDk
RIfoaQUK+atD1nAGgecN9LLQKhR6dQiemS4gEIKgwsZaFK4KLkZG4DYJalIi
P0bhA24AWor7QBIpmoVbcQ96ir6IQFa1tZMY98MKnupmKQJHg/0XqHUoVMsN
8USXEfgtpSgzuAGFdbFA6oVb35CpVI47xEPvTg7udX69SfO4G8hvZ5AVBKq5
1EVlNKIw/KxjvuoqAhXdjf0fP0GhJttwnytuq87VblITCoW7pMOXcbdlPPFz
x601WmWvLEMgaB7y68X9tD1z0Am3o61Pj2kzCqMFEZlc3D3TJf4JuHW5LjYt
uHPnRCIh7rZAI5EMt3TfSoiqEIX/AmhYk1w=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.41225533090625*^9, 3.41225533696875*^9}, {
   3.412255418640625*^9, 3.412255431875*^9}, 3.4122557446875*^9, 
   3.41225613753125*^9, 3.412256254703125*^9, 3.412256294453125*^9, 
   3.412256331953125*^9, 3.412351625515625*^9, 3.412354126859375*^9, 
   3.412354179484375*^9, 3.41236215321875*^9, 3.412404284875*^9, 
   3.41242690278125*^9, {3.41242809871875*^9, 3.412428114984375*^9}, 
   3.4124301064375*^9, 3.41248952434375*^9, {3.41279777825*^9, 
   3.412797796703125*^9}, 3.412912926703125*^9, {3.41291430053125*^9, 
   3.412914310171875*^9}, 3.412947477390625*^9, 3.4136102430625*^9, 
   3.4136236765*^9, 3.413624501640625*^9, {3.41370050128125*^9, 
   3.413700511640625*^9}, 3.413701201046875*^9, 3.413703190734375*^9}],

Cell[BoxData["\<\"Penalty function with a jump - penfuncjump:\"\>"], "Print",
 CellChangeTimes->{3.4137005115*^9, 3.413701200828125*^9, 3.41370319075*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF1Xs0lHkYB/AhMy5NXspULrmTod02hKJ+L5XjumhcW9dKKLm0aHc5dhu3
tCzHoSMUHQ0SI5F1KWXIISRDi5pNZHJNrztjePdtz+5vnnOe8z2ff75/PP88
GmfDTweKk0ikWGK/5rmqzC84rvac9N8obCjpmgtFbrNmecesiaz7vqFzFhN5
mvqxeHhU5IiLhz1rWkWO13n7/EKKyHn5Wlk9siIXjlwPd5FWhd79muFEp+2D
7nBmnOzSUYG2oetEaWkqQx9le5f0HlSCFty4sMuQrgi9vHovx3f/XugAeVul
EZM90AXMZ8M0w92i/qL8/KLjNOiD31dcWXZSgOYzMhJJjrugqZShXL8fdkKL
yS1ORLnJQx8qt3JwdZWDLh39Eoh0ykJfV8XLxp5ToR1qhzGfdzLQleue7FM9
UtCJfpY3Wzoo0MdVl5n8TxLQ2WmO/GieOHQPI9KBvUSCXosRNi0f2Hr2vzNY
fi+D1ATQs0leY3SPFWjmiwJ+27EFaOm087Fy4bPQediT46afx6GP7neuVssa
hg6bqY9huIlcXKVhkbJXZKrZYvvcnSHo9zY3eU8fDEJfu8iT9H7xBrqjMtg3
d60PWhjZp9XdJPIhk6NTeLzIec3bo4LIIof2slNNdr6GVh2bCrnv0Q1dGSy+
R7O5Ddr4SFjFnLXIjdJvLZt6W6Hby6tDXUc50B9m/TnJEi3Q+8fi3/2V0yjq
S3CnRJQ2QKPa3x6SbqiHPnPh72RzXh30H9PmhkWaNdBT/Hn5ft9SaHG9u0Fk
Jgta5aLzU1NWMXQhz6fPbLAQmuv/JO72vgJoCl9JT/x8rug+nwfju7BMaPAx
1NU/7AZ0yQz9AX2DCa042bPtE3IVuns+4+z8aX9ow+HVRO7iGRDvpHesSgwD
v/JbFwOKo8E6FjcUTMaA17R28cRJJojO6vtRUxoDC6NBDqr1qWDeSBfhUTHQ
Hvrml/KcTHD5a8hhIGsypveUUzaY+hoKGDjwoeGnOE4++DeUMVA1UciPcmWB
XtA1VaaPgciZnSqR+x4Btn1EW7QNBm4uBNdpqNeAl8XDyb85YKBxvdmZq1kL
JjasbH93xoCE1KUkI706oF5Be1XkiYFc7da5ZcNGkEVtGuwKxsAIu8H/mHYL
uNpDntFIxQB5MsSIc6QToE758q86MUD/JnA28NEA6D/d7qtrPw++C338eM/4
KEiurFthWiwArwTWHTv5aXDp4QCDbrUIYpWNG+eGiV5KOjvWZAn4Gp94jeQu
gb09ckvbdJeB5JzUhkfpGmCac7be0FfAzLKpinOkEMRu7pB0VVkF9r2y902t
SWhJUMqAstYa0E/IVTSyE0dzLLvTFHXWge5796RkAwl0V/gDq1aaACSlRsRe
PkxBOSfrn9YpbQAxXnNohYoUSgrzM3GXFQJJ2XtGHgJpVEKSe8tgUwgiMscT
c0hU1MzmCseOtAVWG7z6DMZ3oEJexSRtYQuMGumXuWEIiinSBvTXcJAmR3HJ
JmwtlaBnR9js8+g6l3DBChYXQjiz5Ja98zyC2vR365QRPq4o/cVuAUEL0xKv
6qzjIG9r4jC6hKCO+KKSugAHjE5Wq/4agpaPcwNoQhxssa6FhhDGuWidMeFy
pg+tjLBbC1vGlbC4BS1IZx1Bxe7cqMki/JCdKKMuQFBPDyuy3CYOqNnnXGhC
BKW8rC6T2cJBfQQQMAh716tt0gmfc1QuziL8qCTdxZZwI6V/CdlEUJ+EEEEK
4eCfrXJlthC01kLDgYzjQMFd1dKWsIxBRpE24WeGgqkUwv6Km0snCO+erTYn
4wi6fWXoNpMwpyN9/AThgHHrhbuEw1gh6UzCf3JrrVsIKzFPmbQQ3tGimf+B
8AtfjRGc8Nl//zQO/gHKSNU4
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.41225533090625*^9, 3.41225533696875*^9}, {
   3.412255418640625*^9, 3.412255431875*^9}, 3.4122557446875*^9, 
   3.41225613753125*^9, 3.412256254703125*^9, 3.412256294453125*^9, 
   3.412256331953125*^9, 3.412351625515625*^9, 3.412354126859375*^9, 
   3.412354179484375*^9, 3.41236215321875*^9, 3.412404284875*^9, 
   3.41242690278125*^9, {3.41242809871875*^9, 3.412428114984375*^9}, 
   3.4124301064375*^9, 3.41248952434375*^9, {3.41279777825*^9, 
   3.412797796703125*^9}, 3.412912926703125*^9, {3.41291430053125*^9, 
   3.412914310171875*^9}, 3.412947477390625*^9, 3.4136102430625*^9, 
   3.4136236765*^9, 3.413624501640625*^9, {3.41370050128125*^9, 
   3.413700511640625*^9}, 3.413701201046875*^9, 3.413703190796875*^9}],

Cell[BoxData["\<\"Derivative of penfuncjump:\"\>"], "Print",
 CellChangeTimes->{3.4137005115*^9, 3.413701200828125*^9, 3.41370319084375*^9}
  ],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF0H0wE3AYB/C1GKvlrSSaOYSmF3kJUfQi14tKbZLSqLyUW1iH/tDpmpfS
dXFd3A5FN6MXL9freSnJS0dxXnrRtGiyhKVJy8K16qrv77n73nOff77P3WN9
OG5PJJVCoYT9zp99pDL7i1ZrVU/5NwumLey9Z4ib/CWhSRpi+77qVqWKeITx
QSyVE8fHrN53t5E4xa63PuoscV6+7aV2A+LC/nNxu+kseGEnZxfb1BJuCeT4
PbdjwlvYdgm2Nothr4rQkg4nC3jqfNR8F7Y5rJ4szuE5LIIPGW+16Hc3gwuE
j6WmLgtJf1F+fpGPKey0s+yEetcCWMHJSqPsmA8zaG9EYQdM4FlGE0MJQcaw
882NAVyuEVwq/xJp2GoAn2Nprw/UM+CAe1LVwbdz4PIf+yo2t+vDaWEbcp+0
0GAfllqo+KgDX76wQ5Eoo8LtHEFAxTcKrEmaqVUv//n4v7MkYc+iraZgZXrI
ADv4OyxsLlA0rfsK0y9EJBvFKeE81UMfj8+DsJdD4G2rS1I4drQqiRNELK60
Xnt2ETHDc+Lp2NU3cN+WXNmjWz3wmRiZXmjzK7il/ChPpOmCZwRdtm21xM7u
XsPaFOK8urkJ0brE/I6KTHeTTpg1MHzsRnAbXH6UamZT1wS7rYktG/MnrqH3
bqjtaISf3rzN58ob4PfK8IYMnSeww0DK29c5NaQvdS8tvrQaXr9kpTO9ugre
H/Uuw1v2AL444u1SZHMXHlaMG7/glcLUpdeidYUSmBkT+MhDIoYLZQe7PHsK
4e7wh6euWBbANIXFUmqEiPznc0/Kc1U27PuBzw2PPQ+XjLJvsaeFsPmn9tkf
DU/CbeNZh8f3hMMu0sm07on9vn/V6Xta0ThxSJwIh4wsEQ/5CeGv8ugAVlUm
XDlUqEjgSmDBqAlTYHkH1v10zLVhTSvMXhGpjLzzEl7Fv3/fbFBO7qVKrm4z
HoGTF7vVjElVMM9tU6eh6BusN6Y/HVyqgUfVHsxAwQy8vcPghoc/Zf1/O6aK
zF23UWH7vr3pGct04PTM+OTjq2nwLFkdv4ypD+sZFLsGT9Hh+OzBtBwKA56s
DulaNjgPlrs6Xg9SGcKcVkmjo4a4mWfdr9US/wJX/aO9
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.41225533090625*^9, 3.41225533696875*^9}, {
   3.412255418640625*^9, 3.412255431875*^9}, 3.4122557446875*^9, 
   3.41225613753125*^9, 3.412256254703125*^9, 3.412256294453125*^9, 
   3.412256331953125*^9, 3.412351625515625*^9, 3.412354126859375*^9, 
   3.412354179484375*^9, 3.41236215321875*^9, 3.412404284875*^9, 
   3.41242690278125*^9, {3.41242809871875*^9, 3.412428114984375*^9}, 
   3.4124301064375*^9, 3.41248952434375*^9, {3.41279777825*^9, 
   3.412797796703125*^9}, 3.412912926703125*^9, {3.41291430053125*^9, 
   3.412914310171875*^9}, 3.412947477390625*^9, 3.4136102430625*^9, 
   3.4136236765*^9, 3.413624501640625*^9, {3.41370050128125*^9, 
   3.413700511640625*^9}, 3.413701201046875*^9, 3.41370319084375*^9}]
}, Open  ]],

Cell[BoxData["  "], "Input",
 CellChangeTimes->{{3.412255801859375*^9, 3.4122558231875*^9}}],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests (penalty functions):", "Subsection"],

Cell[CellGroupData[{

Cell["Test of penalty generating functions : ", "Subsubsection",
 CellChangeTimes->{{3.412408125*^9, 3.412408142109375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", "  ", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "   ", "0"}], "   ", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ccc", "=", 
     RowBox[{"-", "0.001023"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"penfunc", "=", "penfuncexp"}], ";", "\[IndentingNewLine]", 
    RowBox[{"derpenfuncarg", "=", "derpenfuncexp"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"penfunc", "=", "penfuncexpsqr"}], ";", "\[IndentingNewLine]", 
    RowBox[{"derpenfuncarg", "=", "derpenfuncexpsqr"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Needs", "[", "\"\<NumericalCalculus`\>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "   ", 
     RowBox[{"derpenfuncarg", "[", 
      RowBox[{"ccc", ",", "param"}], "]"}], "    ", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "   ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"penfunc", "[", 
         RowBox[{"x", ",", "param"}], "]"}], ",", "x"}], "]"}], "  ", "/.", 
      " ", 
      RowBox[{"x", "\[Rule]", "ccc"}]}], "    ", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "   ", 
     RowBox[{"ND", "[", 
      RowBox[{
       RowBox[{"penfunc", "[", 
        RowBox[{"x", ",", "param"}], "]"}], ",", "x", ",", "ccc"}], "]"}], 
     "    ", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.4124075324375*^9, 3.4124076764375*^9}, {
   3.412407723453125*^9, 3.41240776990625*^9}, {3.412407845390625*^9, 
   3.412407880078125*^9}, {3.4124079209375*^9, 3.41240792390625*^9}, {
   3.412408026*^9, 3.4124081123125*^9}, {3.412408150875*^9, 
   3.41240818490625*^9}, {3.4124082175625*^9, 3.4124082739375*^9}, 
   3.412489365796875*^9}],

Cell[BoxData["2.9929165657581507`"], "Print",
 CellChangeTimes->{3.413701831703125*^9, 3.413703191015625*^9}],

Cell[BoxData["2.9929165657581507`"], "Print",
 CellChangeTimes->{3.413701831703125*^9, 3.413703191015625*^9}],

Cell[BoxData["2.992916566821103`"], "Print",
 CellChangeTimes->{3.413701831703125*^9, 3.413703191046875*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.412408160703125*^9, 3.41240816278125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests with anfuncsimpconstr :", "Subsubsection",
 CellChangeTimes->{{3.4123543990625*^9, 3.41235445959375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "   ", "[", "   ", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", " ", "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{"Input", " ", 
     RowBox[{"data", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"param", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"param", "=", 
     RowBox[{"{", 
      RowBox[{"1.1", ",", "1.1", ",", "1.1"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"param", "=", 
     RowBox[{"{", 
      RowBox[{"1.01", ",", "1.01", ",", "1.01"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"param", "=", 
     RowBox[{"{", 
      RowBox[{"1.01", ",", "1.01"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"calcobj", "=", 
     RowBox[{"calcconstr", "=", 
      RowBox[{"calcgradobj", "=", 
       RowBox[{"calcgradconstr", "=", "1"}]}]}]}], ";", "\[IndentingNewLine]",
     
    RowBox[{"anfuncorig", "=", 
     StyleBox["anfuncsimpconstr",
      FontWeight->"Bold"]}], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{"ancdorig", "=", 
     RowBox[{"{", "\"\<an cd orig\>\"", "}"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Penalty", " ", "generating", " ", 
      RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"penfunc", "=", "penfuncexp"}], ";", "\[IndentingNewLine]", 
    RowBox[{"derpenfuncarg", "=", "derpenfuncexp"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"penfunc", "=", "penfuncexpsqr"}], ";", "\[IndentingNewLine]", 
    RowBox[{"derpenfuncarg", "=", "derpenfuncexpsqr"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"penparam", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dd", ",", "hh"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "1.00001"}], "}"}]}]}], ";", "\[IndentingNewLine]",
     
    RowBox[{"defderpenfunc", "=", " ", "22563"}], " ", ";", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "flag", " ", "for", " ", "whether", " ", "penalty", " ", "function", " ",
       "is", " ", "defined", " ", "or", " ", "not"}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"keepconstraints", "=", "123"}], ";", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "flag", " ", "for", " ", "whether", " ", "to", " ", "keep", " ", 
      "constraints", " ", "in", " ", "the", " ", "oeriginal", " ", 
      "function"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]",
     "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"parameters", " ", 
      RowBox[{"(", 
       RowBox[{"penalty", " ", "deifnition", " ", "data"}], ")"}], " ", 
      "arranged", " ", "for", " ", 
      RowBox[{"output", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{"argtab", ":=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<anfuncorig\>\"", ",", "\"\<ancdorig\>\"", ",", 
           "\"\<penfunc\>\"", ",", "\"\<penparam\>\"", ",", 
           "\"\<defderpenfunc\>\"", ",", "\"\<derpenfuncarg\>\"", ",", 
           "\"\<keepconstraints\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "anfuncorig", ",", " ", "ancdorig", ",", "  ", "penfunc", ",", " ", 
           "penparam", ",", "  ", "defderpenfunc", ",", " ", "derpenfuncarg", 
           ",", " ", "keepconstraints"}], " ", "}"}]}], "}"}], "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Form", " ", "definition", " ", "data", " ", "for", " ", "penalty", " ", 
      "analysis", " ", 
      RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{"cdpen", " ", ":=", " ", 
      RowBox[{"{", "  ", 
       RowBox[{
       "anfuncorig", ",", " ", "ancdorig", ",", "  ", "penfunc", ",", " ", 
        "penparam", ",", "  ", "defderpenfunc", ",", " ", "derpenfuncarg", 
        ",", " ", "keepconstraints"}], "  ", "}"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"anres", "=", 
      RowBox[{"anfuncorig", "[", 
       RowBox[{
       "param", ",", "1", ",", "1", ",", "1", ",", "1", ",", "ancdorig"}], 
       "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"penres", "=", 
      RowBox[{"penaltyanfunc", "[", 
       RowBox[{
       "param", ",", "1", ",", "1", ",", "1", ",", "1", ",", "cdpen"}], " ", 
       "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["(",
        FontSlant->"Italic"], 
       StyleBox["*",
        FontSlant->"Italic"]}]], 
     StyleBox[
      StyleBox[
       RowBox[{" ", " "}]],
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], 
     StyleBox[
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Extract", " ", "objective"}], " ", "&"}], " ", "constraint",
         " ", "functions", " ", "values"}], ",", " ", 
       RowBox[{"calculate", " ", "penalty", " ", "terms"}]}],
      FontSlant->"Italic"], 
     StyleBox["   ",
      FontSlant->"Italic"], 
     StyleBox["*)",
      FontSlant->"Italic"]}], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"tabconstr", "=", 
      RowBox[{"anres", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"tabgradconstr", "=", 
      RowBox[{"anres", "[", 
       RowBox[{"[", "8", "]"}], "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"objfunc", "=", 
      RowBox[{"anres", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"gradobjfunc", "=", 
      RowBox[{"anres", "[", 
       RowBox[{"[", "6", "]"}], "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"penobjfunc", "=", 
      RowBox[{"penres", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    RowBox[{
     StyleBox["pengradobjfunc",
      FontSlant->"Italic"], 
     StyleBox["=",
      FontSlant->"Italic"], 
     RowBox[{"penres", 
      StyleBox["[",
       FontSlant->"Italic"], 
      StyleBox[
       RowBox[{"[", "6", "]"}],
       FontSlant->"Italic"], 
      StyleBox["]",
       FontSlant->"Italic"]}]}], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"penterms", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tabconstr", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"penfunc", "[", 
           RowBox[{
            RowBox[{"tabconstr", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "penparam"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tabgradconstr", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "  ", "*", "  ", 
           RowBox[{"derpenfuncarg", "[", 
            RowBox[{
             RowBox[{"tabconstr", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "penparam"}], "]"}]}]}], 
         "\[IndentingNewLine]", "}"}], ",", "  ", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "tabconstr", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"tabpenterms", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
          "\"\<constraint f.\>\"", ",", "\"\<penalty term\>\"", ",", 
           "\"\<penalty term derivative\>\""}], "}"}], "}"}], ",", 
        "penterms"}], "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["(",
        FontSlant->"Italic"], 
       StyleBox["*",
        FontSlant->"Italic"]}]], 
     StyleBox[
      StyleBox[
       RowBox[{"  ", " "}]],
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], 
     StyleBox[
      RowBox[{"Calculate", " ", "penalty", " ", "addition", " ", 
       RowBox[{"(", 
        RowBox[{"sum", " ", "of", " ", "penalty", " ", "terms"}], ")"}], " ", 
       "and", " ", "its", " ", 
       RowBox[{"gradient", ":"}]}],
      FontSlant->"Italic"], 
     StyleBox["    ",
      FontSlant->"Italic"], 
     StyleBox["*)",
      FontSlant->"Italic"]}], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"penalty", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"penterms", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "penterms", "]"}]}], "}"}]}], "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"gradpenalty", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"penterms", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "penterms", "]"}]}], "}"}]}], "]"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<\\n\\n\\nDefinition data for penalty analysis function: \\n\>\"", 
       ",", " ", 
       RowBox[{"TableForm", "[", "argtab", "]"}]}], "   ", "]"}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\\nOriginal analysis results: \\n  \>\"", ",", "anres"}], 
      "]"}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<\\nPenalty analysis function results: \\n  \>\"", ",", "penres"}], 
      "]"}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\\nPenalty terms: \\n\>\"", ",", 
       RowBox[{"TableForm", "[", "tabpenterms", "]"}]}], "]"}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\\nObjective function (original): \>\"", ",", "objfunc"}], 
      "]"}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Penalty function (calculated by hand): \>\"", ",", 
       RowBox[{"objfunc", "+", "penalty"}]}], "]"}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Penalty function (from pen. analysis): \>\"", ",", "penobjfunc"}], 
      "]"}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<\\nGradient of objective function (original): \>\"", ",", 
       "gradobjfunc"}], "]"}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Gradient of penalty function (calculated by hand): \>\"", ",", 
       RowBox[{"gradobjfunc", "+", "gradpenalty"}]}], "]"}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Gradient of penalty function (from pen. analysis): \>\"", ",", 
       "pengradobjfunc"}], "]"}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.412354464703125*^9, 3.412354464828125*^9}, {
   3.412354515203125*^9, 3.412354587546875*^9}, {3.412355069078125*^9, 
   3.41235521771875*^9}, {3.412355268765625*^9, 3.412355443890625*^9}, {
   3.4123555306875*^9, 3.412355557703125*^9}, {3.4123558713125*^9, 
   3.412356019796875*^9}, {3.4123563795625*^9, 3.412356383984375*^9}, {
   3.412356506875*^9, 3.412356533859375*^9}, {3.412357024203125*^9, 
   3.412357426421875*^9}, {3.412357555453125*^9, 3.412357585640625*^9}, {
   3.412358386453125*^9, 3.412358388203125*^9}, {3.41235845053125*^9, 
   3.412358465359375*^9}, {3.4123585220625*^9, 3.412358571015625*^9}, {
   3.412358908234375*^9, 3.4123589083125*^9}, {3.4123589614375*^9, 
   3.412359017828125*^9}, {3.412359077921875*^9, 3.4123592825625*^9}, {
   3.412359441640625*^9, 3.4123595010625*^9}, {3.41235954171875*^9, 
   3.412359596234375*^9}, {3.412359682046875*^9, 3.412359707828125*^9}, {
   3.41236122178125*^9, 3.412361224234375*^9}, 3.412361261875*^9, {
   3.41236158196875*^9, 3.412361631578125*^9}, {3.4123622324375*^9, 
   3.412362248734375*^9}, {3.41236228878125*^9, 3.412362463390625*^9}, {
   3.412362509484375*^9, 3.4123626845*^9}, {3.412367123609375*^9, 
   3.412367276390625*^9}, {3.4123673390625*^9, 3.4123673614375*^9}, {
   3.412367403859375*^9, 3.412367460453125*^9}, {3.412367589390625*^9, 
   3.41236763053125*^9}, {3.4123988254375*^9, 3.412398836984375*^9}, {
   3.412399042859375*^9, 3.412399102578125*^9}, {3.412400950609375*^9, 
   3.412400950953125*^9}, {3.4124022646875*^9, 3.412402310875*^9}, {
   3.412403545359375*^9, 3.412403564796875*^9}, {3.412403678265625*^9, 
   3.41240370009375*^9}, {3.41240375753125*^9, 3.4124037620625*^9}, {
   3.41240379690625*^9, 3.412403798546875*^9}, {3.412403893359375*^9, 
   3.41240393753125*^9}, {3.412404308703125*^9, 3.41240432596875*^9}, {
   3.412404539734375*^9, 3.41240455309375*^9}, {3.4124049459375*^9, 
   3.412404953171875*^9}, 3.412406061671875*^9, 3.412406214296875*^9, {
   3.4124079945*^9, 3.412407998046875*^9}, {3.412408373796875*^9, 
   3.412408375875*^9}, {3.412408405984375*^9, 3.412408407328125*^9}, {
   3.412408622921875*^9, 3.412408625984375*^9}, {3.4124269775625*^9, 
   3.412426996*^9}, {3.412489374546875*^9, 3.41248938278125*^9}, {
   3.4129209780625*^9, 3.41292100871875*^9}, {3.412922019765625*^9, 
   3.4129220488125*^9}, {3.413700539390625*^9, 3.41370057396875*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\n\\n\\nDefinition data for penalty analysis function: \
\\n\"\>", "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"\<\"anfuncorig\"\>", "anfuncsimpconstr"},
      {"\<\"ancdorig\"\>", GridBox[{
         {"\<\"an cd orig\"\>"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.1]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}]},
      {"\<\"penfunc\"\>", "penfuncexpsqr"},
      {"\<\"penparam\"\>", GridBox[{
         {"0.1`"},
         {"1.00001`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.1]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}]},
      {"\<\"defderpenfunc\"\>", "22563"},
      {"\<\"derpenfuncarg\"\>", "derpenfuncexpsqr"},
      {"\<\"keepconstraints\"\>", "123"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    TableForm[{{"anfuncorig", $CellContext`anfuncsimpconstr}, {
      "ancdorig", {"an cd orig"}}, {"penfunc", $CellContext`penfuncexpsqr}, {
      "penparam", {0.1, 1.00001}}, {"defderpenfunc", 22563}, {
      "derpenfuncarg", $CellContext`derpenfuncexpsqr}, {
      "keepconstraints", 123}}]]}],
  SequenceForm["\n\n\nDefinition data for penalty analysis function: \n", 
   TableForm[{{"anfuncorig", $CellContext`anfuncsimpconstr}, {
     "ancdorig", {"an cd orig"}}, {"penfunc", $CellContext`penfuncexpsqr}, {
     "penparam", {0.1, 1.00001}}, {"defderpenfunc", 22563}, {
     "derpenfuncarg", $CellContext`derpenfuncexpsqr}, {
     "keepconstraints", 123}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.413700555484375*^9, 3.41370059015625*^9, 
  3.413701205609375*^9, 3.413703191140625*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nOriginal analysis results: \\n  \"\>", "\[InvisibleSpace]", 
   
   RowBox[{"{", 
    RowBox[{"1.`", ",", "2.0402`", ",", "1.`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.015000000000000013`"}], ",", 
       RowBox[{"-", "0.020000000000000018`"}]}], "}"}], ",", "1.`", ",", 
     RowBox[{"{", 
      RowBox[{"2.02`", ",", "2.02`"}], "}"}], ",", "1.`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5`"}], ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "2.`"}]}], "}"}]}], "}"}], ",", "0.`"}], "}"}]}],
  SequenceForm[
  "\nOriginal analysis results: \n  ", {
   1., 2.0402, 1., {-0.015000000000000013`, -0.020000000000000018`}, 1., {
    2.02, 2.02}, 1., {{-1.5, 0.}, {0., -2.}}, 0.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.413700555484375*^9, 3.41370059015625*^9, 
  3.413701205609375*^9, 3.413703191171875*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nPenalty analysis function results: \\n  \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "3.1860606534289615`", ",", "1.`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.015000000000000013`"}], ",", 
       RowBox[{"-", "0.020000000000000018`"}]}], "}"}], ",", "1.`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "29.25628885310646`"}], ",", 
       RowBox[{"-", "34.65950452927095`"}]}], "}"}], ",", "1.`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5`"}], ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "2.`"}]}], "}"}]}], "}"}], ",", "0.`"}], "}"}]}],
  SequenceForm[
  "\nPenalty analysis function results: \n  ", {
   1., 3.1860606534289615`, 
    1., {-0.015000000000000013`, -0.020000000000000018`}, 
    1., {-29.25628885310646, -34.65950452927095}, 1., {{-1.5, 0.}, {0., -2.}},
     0.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.413700555484375*^9, 3.41370059015625*^9, 
  3.413701205609375*^9, 3.4137031911875*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nPenalty terms: \\n\"\>", "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"\<\"constraint f.\"\>", "\<\"penalty term\"\>", "\<\"penalty term \
derivative\"\>"},
      {
       RowBox[{"-", "0.015000000000000013`"}], "0.6218677315822337`", 
       GridBox[{
         {
          RowBox[{"-", "31.27628885310646`"}]},
         {"0.`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.1]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}]},
      {
       RowBox[{"-", "0.020000000000000018`"}], "0.5239929218467277`", 
       GridBox[{
         {"0.`"},
         {
          RowBox[{"-", "36.67950452927095`"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.1]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    TableForm[{{
      "constraint f.", "penalty term", 
       "penalty term derivative"}, {-0.015000000000000013`, 
       0.6218677315822337, {-31.27628885310646, 0.}}, {-0.020000000000000018`,
        0.5239929218467277, {0., -36.67950452927095}}}]]}],
  SequenceForm["\nPenalty terms: \n", 
   TableForm[{{
     "constraint f.", "penalty term", 
      "penalty term derivative"}, {-0.015000000000000013`, 
      0.6218677315822337, {-31.27628885310646, 0.}}, {-0.020000000000000018`, 
      0.5239929218467277, {0., -36.67950452927095}}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.413700555484375*^9, 3.41370059015625*^9, 
  3.413701205609375*^9, 3.413703191203125*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nObjective function (original): \"\>", "\[InvisibleSpace]", 
   "2.0402`"}],
  SequenceForm["\nObjective function (original): ", 2.0402],
  Editable->False]], "Print",
 CellChangeTimes->{3.413700555484375*^9, 3.41370059015625*^9, 
  3.413701205609375*^9, 3.41370319125*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Penalty function (calculated by hand): \"\>", 
   "\[InvisibleSpace]", "3.1860606534289615`"}],
  SequenceForm[
  "Penalty function (calculated by hand): ", 3.1860606534289615`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413700555484375*^9, 3.41370059015625*^9, 
  3.413701205609375*^9, 3.413703191265625*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Penalty function (from pen. analysis): \"\>", 
   "\[InvisibleSpace]", "3.1860606534289615`"}],
  SequenceForm[
  "Penalty function (from pen. analysis): ", 3.1860606534289615`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413700555484375*^9, 3.41370059015625*^9, 
  3.413701205609375*^9, 3.41370319134375*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nGradient of objective function (original): \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2.02`", ",", "2.02`"}], "}"}]}],
  SequenceForm["\nGradient of objective function (original): ", {2.02, 2.02}],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.413700555484375*^9, 3.41370059015625*^9, 
  3.413701205609375*^9, 3.41370319134375*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Gradient of penalty function (calculated by hand): \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "29.25628885310646`"}], ",", 
     RowBox[{"-", "34.65950452927095`"}]}], "}"}]}],
  SequenceForm[
  "Gradient of penalty function (calculated by hand): ", {-29.25628885310646, \
-34.65950452927095}],
  Editable->False]], "Print",
 CellChangeTimes->{3.413700555484375*^9, 3.41370059015625*^9, 
  3.413701205609375*^9, 3.41370319134375*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Gradient of penalty function (from pen. analysis): \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "29.25628885310646`"}], ",", 
     RowBox[{"-", "34.65950452927095`"}]}], "}"}]}],
  SequenceForm[
  "Gradient of penalty function (from pen. analysis): ", {-29.25628885310646, \
-34.65950452927095}],
  Editable->False]], "Print",
 CellChangeTimes->{3.413700555484375*^9, 3.41370059015625*^9, 
  3.413701205609375*^9, 3.413703191359375*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.41235446596875*^9, 3.412354466109375*^9}}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.41240611725*^9, 3.412406177328125*^9}, {
   3.412406222640625*^9, 3.412406261421875*^9}, {3.412406358234375*^9, 
   3.41240638875*^9}, {3.412407148203125*^9, 3.412407157125*^9}, {
   3.41240720421875*^9, 3.412407204296875*^9}, 3.412407243921875*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Test", " ", "for", " ", "changing", " ", "composition", " ", "of", " ", 
     "the", " ", "definition", " ", "data", " ", "for", " ", "the", " ", 
     "penalty", " ", "function"}], " ", "-", " ", 
    RowBox[{"change", " ", "this"}]}], "   ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cdpen", " ", ":=", " ", 
      StyleBox[
       RowBox[{"{", "  ", 
        RowBox[{
        "anfuncorig", ",", " ", "ancdorig", ",", "  ", "penfunc", ",", " ", 
         "penparam", ",", "  ", "defderpenfunc", ",", " ", "derpenfuncarg", 
         ",", " ", "keepconstraints"}], "  ", "}"}],
       FontSlant->"Italic"]}], 
     StyleBox[";",
      FontSlant->"Italic"], 
     StyleBox["\[IndentingNewLine]",
      FontSlant->"Italic"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"cdpen", " ", ":=", " ", 
       RowBox[{"{", "  ", 
        RowBox[{
        "anfuncorig", ",", " ", "ancdorig", ",", "  ", "penfunc", ",", " ", 
         "penparam"}], "  ", "}"}]}],
      FontSlant->"Italic"], 
     StyleBox[";",
      FontSlant->"Italic"], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"keepconstraints", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"penfunc", "=", "penfuncexpsqr"}], ";", "\[IndentingNewLine]", 
     RowBox[{"derpenfuncarg", "=", "derpenfuncexpsqr"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"defderpenfunc", "=", "   ", "1"}], "   ", ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"defderpenfunc", "\[Equal]", "0"}], ",", "\[IndentingNewLine]",
        
       RowBox[{
        RowBox[{"derpenfuncarg", "=", "nofunc"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"penaltyanfuncconstr", "[", 
      RowBox[{"param", ",", "1", ",", "1", ",", "1", ",", "1", ",", "cdpen"}],
       " ", "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.41240604859375*^9, 3.412406050125*^9}, {
   3.412406080375*^9, 3.4124061135625*^9}, {3.412407247203125*^9, 
   3.412407261234375*^9}, {3.4124089388125*^9, 3.412408943453125*^9}, {
   3.41240907659375*^9, 3.412409119875*^9}, {3.412409249546875*^9, 
   3.41240926834375*^9}, {3.412409381625*^9, 3.41240945878125*^9}, {
   3.4124101034375*^9, 3.412410134859375*^9}, {3.412410165546875*^9, 
   3.412410184703125*^9}, {3.412427226703125*^9, 3.41242731384375*^9}, {
   3.412427528765625*^9, 3.412427532890625*^9}, {3.41242758603125*^9, 
   3.41242758959375*^9}, 3.412489396984375*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "3.1860606534289615`", ",", "1.`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.015000000000000013`"}], ",", 
     RowBox[{"-", "0.020000000000000018`"}]}], "}"}], ",", "1.`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "29.25628885310646`"}], ",", 
     RowBox[{"-", "34.65950452927095`"}]}], "}"}], ",", "1.`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5`"}], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", 
       RowBox[{"-", "2.`"}]}], "}"}]}], "}"}], ",", "0.`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.4124060326875*^9, {3.4124060658125*^9, 3.412406146359375*^9}, 
   3.412406269109375*^9, {3.4124063481875*^9, 3.41240636284375*^9}, 
   3.41240639778125*^9, 3.412407127234375*^9, 3.412407160390625*^9, 
   3.412407216734375*^9, 3.412408646203125*^9, 3.412408965515625*^9, {
   3.412409109453125*^9, 3.4124091210625*^9}, {3.412409253359375*^9, 
   3.4124092870625*^9}, {3.4124093750625*^9, 3.4124094106875*^9}, {
   3.41240944340625*^9, 3.41240945959375*^9}, 3.4124099820625*^9, {
   3.412410105*^9, 3.412410135546875*^9}, 3.412410185328125*^9, 
   3.412426903984375*^9, {3.41242720865625*^9, 3.41242722809375*^9}, 
   3.41242739221875*^9, 3.412427534265625*^9, {3.412430108*^9, 
   3.412430127171875*^9}, 3.41291292753125*^9, {3.41291430078125*^9, 
   3.412914310421875*^9}, 3.41361024546875*^9, 3.41362367771875*^9, 
   3.4136245018125*^9, 3.413700587390625*^9, 3.413701205984375*^9, 
   3.4137031914375*^9}]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["Numerical gradients,  gradient checks & analysis transforms", "Subtitle"],

Cell[CellGroupData[{

Cell["Selsection of parameters", "Subsection"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["parindtonames",
  FontWeight->"Bold"],
 " [",
 StyleBox["select, paramnamesall",
  FontSlant->"Italic"],
 "]\n   - Creates a list of parameter names selected from ",
 StyleBox["paramnamesall",
  FontSlant->"Italic"],
 " (a list of all parameter names) that corresponds to parameter indices in \
selection list ",
 StyleBox["selsct",
  FontSlant->"Italic"],
 ". ",
 StyleBox["select",
  FontSlant->"Italic"],
 " can be arbitrarily nested list. \n",
 StyleBox["getgradsel",
  FontWeight->"Bold"],
 " [",
 StyleBox["grad, select",
  FontSlant->"Italic"],
 "]\n    - Returns a reduced gradient according to reduced parameters ",
 StyleBox["select",
  FontSlant->"Italic"],
 ", where full gradient (with respect to all parameters) is ",
 StyleBox["grad",
  FontSlant->"Italic"],
 ".\n",
 StyleBox["setparamsel",
  FontWeight->"Bold"],
 " [",
 StyleBox["p0, select, paramall",
  FontSlant->"Italic"],
 "] - returns a full parameter list if ",
 StyleBox["p0",
  FontSlant->"Italic"],
 " is a reduced set of parameters, ",
 StyleBox["select",
  FontSlant->"Italic"],
 " is a list of indices of parameters in the full set corresponding to \
parameters from reduced set, and ",
 StyleBox["paramall",
  FontSlant->"Italic"],
 " is a list of default values for the full set of parameters.\n\nForm of \
selection indices:\n",
 StyleBox["{p1, {p21, p22, p23}, p3, p4}",
  FontSlant->"Italic"],
 " means the following: 1st parameter from reduced set defines parameter with \
index ",
 StyleBox["p1",
  FontSlant->"Italic"],
 " in the full set, 2nd parameter from the reduced set defines parameters ",
 StyleBox["p21, p22, p23",
  FontSlant->"Italic"],
 " from the full set, 3rd parameter form the reduced set defines parameter ",
 StyleBox["p3",
  FontSlant->"Italic"],
 " from the full set, and 4th parameter from the reduced set defines the \
parameter with index ",
 StyleBox["p4",
  FontSlant->"Italic"],
 " in the full set. Other parameters in the full set have referential values \
defined in paramall.\n"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"parindtonames", "[", 
     RowBox[{"select_", ",", "paramnamesall_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ret", ",", "cur", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Converts", " ", "a", " ", "parameter", " ", "selection", " ", "list", 
        " ", "containing", " ", "indices", " ", "to", " ", "a", " ", "list", 
        " ", "containing", " ", 
        RowBox[{"names", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "select", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"paramnamesall", "[", 
           RowBox[{"[", "select", "]"}], "]"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"paramnamesall", "[", 
           RowBox[{"[", 
            RowBox[{"select", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "select", "]"}]}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"parindtonames", "[", 
          RowBox[{
           RowBox[{"select", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "paramnamesall"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "select", "]"}]}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getgradsel", "[", " ", 
     RowBox[{"grad_", ",", "select_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gradsel", ",", "val", ",", "depend", ",", "i", ",", "j"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Change", " ", "gradient", " ", "with", " ", "respect", " ", "to", " ",
         "all", " ", "parameters", " ", "to", " ", "gradient", " ", "with", 
        " ", "respect", " ", "to", " ", "selected", " ", 
        RowBox[{"parameters", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"gradsel", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "   ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<grad: \>\"", " ", ",", "grad"}], "]"}], "   ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "select", "]"}]}], ",", 
         RowBox[{"i", "=", 
          RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"depend", "=", 
           RowBox[{"select", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Depth", "[", "depend", "]"}], "<", "2"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"depend", "=", 
              RowBox[{"{", "depend", "}"}]}], ";"}]}], "    ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "generic", " ", "parameters", " ", "that", " ", "depend", " ", 
             "on", " ", "a", " ", "specific", " ", "parameter"}], " ", "*)"}],
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"gradsel", ",", "\[IndentingNewLine]", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"grad", "[", 
               RowBox[{"[", " ", 
                RowBox[{"depend", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], " ", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "depend", "]"}]}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", "  ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<i: \>\"", ",", "i", ",", "\"\<, depend: \>\"", ",", "depend", 
           ",", "\"\<, gradsel: \>\"", ",", "gradsel"}], "]"}], "  ", "*)"}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "gradsel"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setparamsel", "[", 
    RowBox[{"p0_", ",", "select_", ",", "paramall_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ret", ",", "cur", ",", "i", ",", "j", ",", "p", ",", "depend"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Sets", " ", "generic", " ", "parameters", " ", "according", " ", "to", 
       " ", "reduced", " ", "parameters", " ", "and", " ", "selection", " ", 
       RowBox[{"list", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "=", "paramall"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "select", "]"}]}], ",", 
        RowBox[{"i", "=", 
         RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"depend", "=", 
          RowBox[{"select", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Depth", "[", "depend", "]"}], "<", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"depend", "=", 
             RowBox[{"{", "depend", "}"}]}], ";"}]}], "    ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "indices", " ", "of", " ", "generic", " ", "parameters", " ", 
            "that", " ", "depend", " ", "on", " ", "a", " ", "specific", " ", 
            "parameter"}], " ", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "depend", "]"}]}], ",", 
           RowBox[{"j", "=", 
            RowBox[{"j", "+", "1"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", 
               RowBox[{"depend", "[", 
                RowBox[{"[", "j", "]"}], "]"}], " ", "]"}], "]"}], "=", 
             RowBox[{"p0", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", "p"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Numerical gradient analysis function\n",
 StyleBox["anfuncnumgrad [..., {anfunc,  ancd, step, <results>} ]\n",
  FontSize->12],
 StyleBox["... are standard parameters of analysis functions, and definition \
data consists of the analysis function (",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["anfunc",
  FontSize->12,
  FontSlant->"Italic"],
 StyleBox[", symbol), definition data passed to this function (",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["ancd",
  FontSize->12,
  FontSlant->"Italic"],
 StyleBox["), and step size for numerical definition (",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["step",
  FontSize->12,
  FontSlant->"Italic"],
 StyleBox[", can be vector or scalar - in this case teh same step is used for \
all parameters).\n",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["... = param, calcobj, calcconstr, calcgradobj, calcgradconstr ",
  FontSize->12,
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["\nDefinition data can also contain results, in which case actual \
analysis does not need to be performed, but these results are used for \
unperturbed parameters. This can be used if results at unperturbed parameters \
have been calculated elsewhere.",
  FontSize->12,
  FontWeight->"Plain"]
}], "Subsection",
 CellChangeTimes->{{3.410615386875*^9, 3.410615423015625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"anfuncnumgrad", "[", 
    RowBox[{
    "p_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", ",", 
     "calcgradconstr_", ",", "cd_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"retcalcobj", "=", "calcobj"}], ",", 
       RowBox[{"retcalcconstr", "=", "calcconstr"}], ",", 
       RowBox[{"retcalcgradobj", "=", "calcgradobj"}], ",", 
       RowBox[{"retcalcgradconstr", "=", "calcgradconstr"}], ",", 
       RowBox[{"ret", "=", "0"}], ",", "\[IndentingNewLine]", "calcobj1", ",",
        "calcconstr1", ",", "calcgradobj1", ",", "calcgradconstr1", ",", 
       "ret1", ",", "\[IndentingNewLine]", "p2", ",", "\[IndentingNewLine]", 
       "calcobj2", ",", "calcconstr2", ",", "calcgradobj2", ",", 
       "calcgradconstr2", ",", "ret2", ",", "\[IndentingNewLine]", 
       RowBox[{"obj1", "=", "0"}], ",", 
       RowBox[{"constr1", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"gradobj1", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"gradconstr1", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"obj2", "=", "0"}], ",", 
       RowBox[{"constr2", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"gradobj2", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"gradconstr2", "=", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "result", ",", " ", 
       "\[IndentingNewLine]", "anfunc", ",", " ", "ancd", " ", ",", 
       "\[IndentingNewLine]", "i", ",", "j"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"$A", " ", "Igor", " ", "feb06"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"anfunc", "=", 
       RowBox[{"cd", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ancd", "=", 
       RowBox[{"cd", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"step", "=", 
       RowBox[{"cd", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "[", "step", "]"}], "<", "2"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"step", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"step", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "p", "]"}]}], "}"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "cd", "]"}], ">", "3"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "Results", " ", "at", " ", "unperturbed", " ", "parameters", " ", 
           "are", " ", "already", " ", "available"}], ",", " ", 
          RowBox[{"we", " ", "just", " ", "copy", " ", "these", " ", 
           RowBox[{"results", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"result", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "calcobj1", ",", "obj1", ",", "calcconstr1", ",", "constr1", ",", 
            "calcgradobj1", ",", "gradobj1", ",", "calcgradconstr1", ",", 
            "gradconstr1", ",", "ret1"}], "}"}], "=", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "Results", " ", "at", " ", "unperturbed", " ", "parameters", " ", 
           "are", " ", "not", " ", "available"}], ",", " ", 
          RowBox[{"perform", " ", 
           RowBox[{"calculation", ":"}]}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"result", "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "calcobj1", ",", "obj1", ",", "calcconstr1", ",", "constr1", ",", 
             "calcgradobj1", ",", "gradobj1", ",", "calcgradconstr1", ",", 
             "gradconstr1", ",", "ret1"}], "}"}], "=", " ", 
           RowBox[{"anfunc", "[", 
            RowBox[{
            "p", ",", "1", ",", "1", ",", "1", ",", "1", ",", "ancd"}], 
            "]"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"gradobj1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "p", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "constr1", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"gradconstr1", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "p", "]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "constr1", "]"}]}], "}"}]}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Note", " ", "in", " ", "returned", " ", "value", " ", "if", " ", 
        "something", " ", "could", " ", "not", " ", "be", " ", 
        RowBox[{"calcuated", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcobj1", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"retcalcobj", "=", 
          RowBox[{"retcalcgradobj", "=", "0"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"calcobj", "\[NotEqual]", "0"}], " ", "||", " ", 
            RowBox[{"calcgradobj", "\[NotEqual]", "0"}]}], ",", 
           RowBox[{"ret", "=", 
            RowBox[{"-", "1"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcconstr1", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{"retcalcconstr", "=", 
          RowBox[{"retcalcgradconstr", "=", "0"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"calcconstr", "\[NotEqual]", "0"}], " ", "||", " ", 
            RowBox[{"calcgradconstr", "\[NotEqual]", "0"}]}], ",", 
           RowBox[{"ret", "=", 
            RowBox[{"-", "1"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]",
         
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Perturbed component \>\"", ",", "0", ",", 
           "\"\<, parameters: \>\"", ",", 
           RowBox[{"N", "[", "p", "]"}], ",", 
           "\"\<, Analysis result: \\n  \>\"", ",", 
           RowBox[{"N", "[", "result", "]"}], ",", 
           "\"\<\\nObjective gradient: \>\"", ",", 
           RowBox[{"N", "[", "gradobj1", "]"}], ",", 
           "\"\< Constraint gradients: \>\"", ",", 
           RowBox[{"N", "[", "gradconstr1", "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "p", "]"}]}], ",", 
        RowBox[{"i", "=", 
         RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"analysis", " ", "with", " ", "parameter", " ", "i", " ", 
          RowBox[{"perturbed", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p2", "=", "p"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"p2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"p2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", 
           RowBox[{"step", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"result", "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "calcobj2", ",", "obj2", ",", "calcconstr2", ",", "constr2", ",", 
             "calcgradobj2", ",", "gradobj2", ",", "calcgradconstr2", ",", 
             "gradconstr2", ",", "ret2"}], "}"}], "=", " ", 
           RowBox[{"anfunc", "[", 
            RowBox[{
            "p2", ",", "1", ",", "1", ",", "0", ",", "0", ",", "ancd"}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Note", " ", "in", " ", "returned", " ", "value", " ", "if", " ", 
           "something", " ", "could", " ", "not", " ", "be", " ", 
           RowBox[{"calcuated", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"calcobj2", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{
            RowBox[{"retcalcobj", "=", 
             RowBox[{"retcalcgradobj", "=", "0"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"calcobj", "\[NotEqual]", "0"}], " ", "||", " ", 
               RowBox[{"calcgradobj", "\[NotEqual]", "0"}]}], ",", 
              RowBox[{"ret", "=", 
               RowBox[{"-", "1"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
           ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"By", " ", "the", " ", "difference"}], ",", " ", 
             RowBox[{
             "calculate", " ", "component", " ", "of", " ", "objective", " ", 
              
              RowBox[{"gradient", ":"}]}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"gradobj1", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"obj2", "-", "obj1"}], ")"}], "/", 
              RowBox[{"step", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"calcconstr2", "\[Equal]", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"retcalcconstr", "=", 
             RowBox[{"retcalcgradconstr", "=", "0"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"calcconstr", "\[NotEqual]", "0"}], " ", "||", " ", 
               RowBox[{"calcgradconstr", "\[NotEqual]", "0"}]}], ",", 
              RowBox[{"ret", "=", 
               RowBox[{"-", "1"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
           ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"By", " ", "the", " ", "difference"}], ",", " ", 
             RowBox[{
             "calculate", " ", "components", " ", "of", " ", "constraint", 
              " ", 
              RowBox[{"gradients", ":"}]}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", " ", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", 
               RowBox[{"Length", "[", "constr1", "]"}]}], ",", 
              RowBox[{"j", "=", 
               RowBox[{"j", "+", "1"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"gradconstr1", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "i"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"constr2", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", 
                   RowBox[{"constr1", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "/", 
                 RowBox[{"step", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Perturbed component \>\"", ",", "i", ",", 
              "\"\<, parameters: \>\"", ",", 
              RowBox[{"N", "[", "p2", "]"}], ",", 
              "\"\<, Analysis result: \\n  \>\"", ",", 
              RowBox[{"N", "[", "result", "]"}], ",", 
              "\"\<\\nObjective gradient: \>\"", ",", 
              RowBox[{"N", "[", "gradobj1", "]"}], ",", 
              "\"\< Constraint gradients: \>\"", ",", 
              RowBox[{"N", "[", "gradconstr1", "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "retcalcobj", ",", "obj1", ",", "\[IndentingNewLine]", 
         "retcalcconstr", ",", "constr1", ",", "\[IndentingNewLine]", 
         "retcalcgradobj", ",", "gradobj1", ",", "\[IndentingNewLine]", 
         "retcalcgradconstr", ",", "gradconstr1", ",", "\[IndentingNewLine]", 
         "ret"}], "}"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Test of analytical gradients returned by an analysis function:\n",
 StyleBox["testangrad ",
  FontSize->12],
 StyleBox["[anfunc, ancd, param, step]\n",
  FontSize->12,
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["- compares analytical gradient of objective and constraint \
functions calculated by anfunc with numerical gradients.\n  ",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["anfunc",
  FontSize->12,
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - analysis functios that is checked\n  ",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["ancd",
  FontSize->12,
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - definition data for ",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["anfunc",
  FontSize->12,
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["\n  ",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["param",
  FontSize->12,
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - parameters at which check is performed\n  ",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["step",
  FontSize->12,
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - step size for numerical differentiation; It can be a number \
(the same step used for all components) or a vector (different step sizes for \
different components)",
  FontSize->12,
  FontWeight->"Plain"]
}], "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"testangrad", "[", 
    RowBox[{"anfunc_", ",", "ancd_", ",", "param_", ",", "step_"}], "]"}], ":=",
    
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "calcobj1", ",", "calcconstr1", ",", "calcgradobj1", ",", 
       "calcgradconstr1", ",", "ret1", ",", "\[IndentingNewLine]", "calcobj2",
        ",", "calcconstr2", ",", "calcgradobj2", ",", "calcgradconstr2", ",", 
       "ret2"}], " ", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"$A", " ", "Igor", " ", "feb06"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "calcobj1", ",", "obj1", ",", "calcconstr1", ",", "constr1", ",", 
         "calcgradobj1", ",", "gradobj1", ",", "calcgradconstr1", ",", 
         "gradconstr1", ",", "ret1"}], "}"}], "=", " ", 
       RowBox[{"anfunc", "[", 
        RowBox[{
        "param", ",", "1", ",", "1", ",", "1", ",", "1", ",", "ancd"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "calcobj2", ",", "obj2", ",", "calcconstr2", ",", "constr2", ",", 
         "calcgradobj2", ",", "gradobj2", ",", "calcgradconstr2", ",", 
         "gradconstr2", ",", "ret2"}], "}"}], "=", 
       RowBox[{"anfuncnumgrad", "[", 
        RowBox[{"param", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{"anfunc", ",", "ancd", ",", "step"}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcobj1", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{"Print", "[", "\"\<Objective function gradient:\>\"", "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Analytical:\\n  \>\"", ",", 
           RowBox[{"N", "[", "gradobj1", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Numerical:\\n  \>\"", ",", 
           RowBox[{"N", "[", "gradobj2", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Difference:\\n  \>\"", ",", 
           RowBox[{"N", "[", 
            RowBox[{"gradobj1", "-", "gradobj2"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Relative difference:\\n  \>\"", ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"gradobj1", "-", "gradobj2"}], ")"}], "/", "gradobj1"}],
             "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"calcconstr1", "\[NotEqual]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<\\n\\nConstraint functions gradients:\>\"", "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Analytical:\\n  \>\"", ",", 
           RowBox[{"N", "[", "gradconstr1", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Numerical:\\n  \>\"", ",", 
           RowBox[{"N", "[", "gradconstr2", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Difference:\\n  \>\"", ",", 
           RowBox[{"N", "[", 
            RowBox[{"gradconstr1", "-", "gradconstr2"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Relative difference:\\n  \>\"", ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"gradconstr1", "-", "gradconstr2"}], ")"}], "/", 
             "gradconstr1"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\n", "]"}]}], ";"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Test of gradients for testanfunc1:", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testangrad", "[", 
     RowBox[{"anfuncsimpconstr", ",", "\"\<3\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
      RowBox[{"10", "^", 
       RowBox[{"-", "5"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"param", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"testangrad", "[", 
     RowBox[{"testanfunc1", ",", "\"\<cd\>\"", ",", "param", ",", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "]"}], "  ", ";"}], "\[IndentingNewLine]", ",",
    ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   "param", "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testanfunc1", "[", 
    RowBox[{
    "param", ",", "1", ",", "1", ",", "1", ",", "1", ",", "\"\<cd\>\""}], 
    "]"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"anfuncnumgrad", "[", 
    RowBox[{"param", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"testanfunc1", ",", "\"\<cd\>\"", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "6"}]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testanfunc1", "[", 
    RowBox[{
    "param", ",", "1", ",", "1", ",", "1", ",", "1", ",", "\"\<cd\>\""}], 
    "]"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["Manipulating tables of analysis resuts", "Subtitle"],

Cell[CellGroupData[{

Cell[TextData[{
 "Analysis and algorithm history\n",
 Cell[BoxData[{
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"Note", ":", " ", 
      RowBox[{"for", " ", "history", " ", "records"}]}], ",", " ", 
     RowBox[{
     "choose", " ", "another", " ", "file", " ", "than", " ", "for", " ", 
      "other", " ", "purposes"}], ",", " ", 
     RowBox[{
     "since", " ", "this", " ", "file", " ", "is", " ", "often", " ", 
      "deleted"}]}],
    FontSize->12], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
     "algorithm", " ", "history", " ", "is", " ", "usually", " ", "reset", 
      " ", "by", " ", "each", " ", "algorithm"}], ",", " ", 
     RowBox[{
     "as", " ", "opposed", " ", "to", " ", "analysis", " ", "history"}], ",", 
     " ", 
     RowBox[{
     "where", " ", "analysis", " ", "points", " ", "are", " ", "continuously",
       " ", "appended", " ", "to", " ", "the", " ", "current", " ", 
      RowBox[{"history", ".", "  "}]}]}],
    FontSize->12], TraditionalForm]}]]
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell["Initialization of global history variables:", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"recanhistory", "=", "1"}], ";"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "whether", " ", "to", " ", "record", " ", "analysis", " ", "history"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"recalghistory", "=", "1"}], ";"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "whether", " ", "to", " ", "record", " ", "algorithm", " ", "history"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noteanhistory", "=", "0"}], ";"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "whether", " ", "to", " ", "print", " ", "notifications", " ", "when", " ",
     "recording", " ", 
    RowBox[{"an", ".", " ", "history"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"notealghistory", "=", "0"}], ";"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "whether", " ", "to", " ", "print", " ", "notifications", " ", "when", " ",
     "recording", " ", 
    RowBox[{"alg", ".", " ", "history"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rewriteanhistory", "=", "1"}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"when", " ", "writing", " ", "to", " ", "file"}], ",", " ", 
    RowBox[{"rewrite", " ", "previous", " ", "history"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rewritealghistory", "=", "1"}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"when", " ", "writing", " ", "to", " ", "file"}], ",", " ", 
    RowBox[{"rewrite", " ", "previous", " ", "history"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anhistory", "=", 
    RowBox[{"{", "}"}]}], ";"}], "      ", 
  RowBox[{"(*", " ", 
   RowBox[{"analysis", " ", "histry", " ", 
    RowBox[{"(", 
     RowBox[{"table", " ", "of", " ", "analysis", " ", "points"}], ")"}]}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alghistory", "=", 
    RowBox[{"{", "}"}]}], ";"}], "      ", 
  RowBox[{"(*", " ", 
   RowBox[{"algorithm", " ", "histry", " ", 
    RowBox[{"(", 
     RowBox[{
     "table", " ", "of", " ", "analysis", " ", "points", " ", "or", " ", 
      "their", " ", "tables"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"saveanhistory", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savealghistory", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fileanhistory", "=", "\"\<anhistory.out\>\""}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "file", " ", "where", " ", "analysis", " ", "history", " ", "is", " ", 
    "recorded"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"filealghistory", "=", "\"\<alghistory.out\>\""}], ";"}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "file", " ", "where", " ", "algorithm", " ", "history", " ", "is", " ", 
    "recorded"}], " ", "*)"}]}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions for manipulating analysis and algorithm history:", \
"Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"resetalghistory", "[", "]"}], ":=", 
     RowBox[{"resetalghistory", "[", 
      RowBox[{"recalghistory", ",", "filealghistory"}], "]"}]}], ";"}], ")"}],
   " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"resetalghistory", "[", 
      RowBox[{"record_", ",", "filename_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"recalghistory", "=", "record"}], ";", 
        RowBox[{"filealghistory", "=", "filename"}], ";", 
        RowBox[{"alghistory", "=", 
         RowBox[{"{", "}"}]}], ";", 
        RowBox[{"savealghistory", "=", 
         RowBox[{"{", "}"}]}], ";"}]}], "]"}]}], ";"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"resetanhistory", "[", "]"}], ":=", 
     RowBox[{"resetanhistory", "[", 
      RowBox[{"recanhistory", ",", "fileanhistory"}], "]"}]}], ";"}], ")"}], 
  " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"resetanhistory", "[", 
      RowBox[{"record_", ",", "filename_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"recanhistory", "=", "record"}], ";", 
        RowBox[{"fileanhistory", "=", "filename"}], ";", 
        RowBox[{"anhistory", "=", 
         RowBox[{"{", "}"}]}], ";", 
        RowBox[{"saveanhistory", "=", 
         RowBox[{"{", "}"}]}], ";"}]}], "]"}]}], ";"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"resethistory", "[", 
      RowBox[{"record_", ",", "filename_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"resetalghistory", "[", 
         RowBox[{"record", ",", "filename"}], "]"}], ";", 
        RowBox[{"resetanhistory", "[", 
         RowBox[{"record", ",", "filename"}], "]"}], ";"}]}], "]"}]}], ";"}], 
   ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"resethistory", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"resetalghistory", "[", "]"}], ";", 
        RowBox[{"resetanhistory", "[", "]"}], ";"}]}], "]"}]}], ";"}], ")"}], 
  " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"storealghistory", "[", 
      RowBox[{"functionname_", ",", "table_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"recalghistory", "||", 
           RowBox[{"recalghistory", "\[NotEqual]", "0"}]}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"notealghistory", "||", 
              RowBox[{"notealghistory", "\[NotEqual]", "0"}]}], ",", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "functionname", ",", 
                "\"\<: Algorithm progress stored to variable \\\"alghistory\\\
\".\>\""}], "]"}], ";"}]}], "]"}], ";", 
           RowBox[{"alghistory", "=", "table"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "filealghistory", "]"}], "\[Equal]", 
              "String"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringLength", "[", "filealghistory", "]"}], ">", 
                 "0"}], ",", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"rewritealghistory", "||", 
                    RowBox[{"rewritealghistory", "\[NotEqual]", "0"}]}], ",", 
                   
                   RowBox[{
                    RowBox[{"Put", "[", 
                    RowBox[{"\"\<Algorithm hisrory file\>\"", ",", 
                    RowBox[{"DateList", "[", "]"}], ",", "filealghistory"}], 
                    "]"}], ";"}]}], "]"}], ";", 
                 RowBox[{"PutAppend", "[", 
                  RowBox[{
                   RowBox[{"\"\<Algorithm history, from \>\"", "<>", 
                    RowBox[{"ToString", "[", "functionname", "]"}], "<>", 
                    "\"\<; date:\>\""}], ",", 
                   RowBox[{"DateList", "[", "]"}], ",", "filealghistory"}], 
                  "]"}], ";", 
                 RowBox[{"Save", "[", 
                  RowBox[{"filealghistory", ",", "alghistory"}], "]"}], 
                 ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], 
      "]"}]}], ";"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"appendalghistory", "[", 
      RowBox[{"functionname_", ",", "elemet_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"recalghistory", "||", 
           RowBox[{"recalghistory", "\[NotEqual]", "0"}]}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"notealghistory", "||", 
              RowBox[{"notealghistory", "\[NotEqual]", "0"}]}], ",", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "functionname", ",", 
                "\"\<: Algorithm history appended, variable \
\\\"alghistory\\\".\>\""}], "]"}], ";"}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Depth", "[", "alghistory", "]"}], "<", "2"}], ",", 
             RowBox[{
              RowBox[{"alghistory", "=", 
               RowBox[{"{", "}"}]}], ";"}]}], "]"}], ";", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"alghistory", ",", "elemet"}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "filealghistory", "]"}], "\[Equal]", 
              "String"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringLength", "[", "filealghistory", "]"}], ">", 
                 "0"}], ",", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"rewritealghistory", "||", 
                    RowBox[{"rewritealghistory", "\[NotEqual]", "0"}]}], ",", 
                   
                   RowBox[{
                    RowBox[{"Put", "[", 
                    RowBox[{"\"\<Algorithm hisrory file\>\"", ",", 
                    RowBox[{"DateList", "[", "]"}], ",", "filealghistory"}], 
                    "]"}], ";"}]}], "]"}], ";", 
                 RowBox[{"PutAppend", "[", 
                  RowBox[{
                   RowBox[{"\"\<Algorithm history, from \>\"", "<>", 
                    RowBox[{"ToString", "[", "functionname", "]"}], "<>", 
                    "\"\<; date:\>\""}], ",", 
                   RowBox[{"DateList", "[", "]"}], ",", "filealghistory"}], 
                  "]"}], ";", 
                 RowBox[{"Save", "[", 
                  RowBox[{"filealghistory", ",", "alghistory"}], "]"}], 
                 ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], 
      "]"}]}], ";"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"storeanhistory", "[", 
      RowBox[{"functionname_", ",", "table_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"recanhistory", "||", 
           RowBox[{"recanhistory", "\[NotEqual]", "0"}]}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"noteanhistory", "||", 
              RowBox[{"noteanhistory", "\[NotEqual]", "0"}]}], ",", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "functionname", ",", 
                "\"\<: Table of analysis points stored to variable \
\\\"anhistory\\\".\>\""}], "]"}], ";"}]}], "]"}], ";", 
           RowBox[{"anhistory", "=", "table"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "fileanhistory", "]"}], "\[Equal]", 
              "String"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringLength", "[", "fileanhistory", "]"}], ">", 
                 "0"}], ",", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"rewriteanhistory", "||", 
                    RowBox[{"rewriteanhistory", "\[NotEqual]", "0"}]}], ",", 
                   RowBox[{
                    RowBox[{"Put", "[", 
                    RowBox[{"\"\<Analysis hisrory file\>\"", ",", 
                    RowBox[{"DateList", "[", "]"}], ",", "fileanhistory"}], 
                    "]"}], ";"}]}], "]"}], ";", 
                 RowBox[{"PutAppend", "[", 
                  RowBox[{
                   RowBox[{"\"\<Analysis history, from \>\"", "<>", 
                    RowBox[{"ToString", "[", "functionname", "]"}], "<>", 
                    "\"\<; date:\>\""}], ",", 
                   RowBox[{"DateList", "[", "]"}], ",", "fileanhistory"}], 
                  "]"}], ";", 
                 RowBox[{"Save", "[", 
                  RowBox[{"fileanhistory", ",", "anhistory"}], "]"}], ";"}]}],
                "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], "]"}]}], 
    ";"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"appendanhistory", "[", 
      RowBox[{"functionname_", ",", "elemet_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"recanhistory", "||", 
           RowBox[{"recanhistory", "\[NotEqual]", "0"}]}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"noteanhistory", "||", 
              RowBox[{"noteanhistory", "\[NotEqual]", "0"}]}], ",", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "functionname", ",", 
                "\"\<: Analysis history appended, variable \\\"anhistory\\\".\
\>\""}], "]"}], ";"}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Depth", "[", "anhistory", "]"}], "<", "2"}], ",", 
             RowBox[{
              RowBox[{"anhistory", "=", 
               RowBox[{"{", "}"}]}], ";"}]}], "]"}], ";", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"anhistory", ",", "elemet"}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "fileanhistory", "]"}], "\[Equal]", 
              "String"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringLength", "[", "fileanhistory", "]"}], ">", 
                 "0"}], ",", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"rewriteanhistory", "||", 
                    RowBox[{"rewriteanhistory", "\[NotEqual]", "0"}]}], ",", 
                   RowBox[{
                    RowBox[{"Put", "[", 
                    RowBox[{"\"\<Analysis hisrory file\>\"", ",", 
                    RowBox[{"DateList", "[", "]"}], ",", "fileanhistory"}], 
                    "]"}], ";"}]}], "]"}], ";", 
                 RowBox[{"PutAppend", "[", 
                  RowBox[{
                   RowBox[{"\"\<Analysis history, from \>\"", "<>", 
                    RowBox[{"ToString", "[", "functionname", "]"}], "<>", 
                    "\"\<; date:\>\""}], ",", 
                   RowBox[{"DateList", "[", "]"}], ",", "fileanhistory"}], 
                  "]"}], ";", 
                 RowBox[{"Save", "[", 
                  RowBox[{"fileanhistory", ",", "anhistory"}], "]"}], ";"}]}],
                "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], "]"}]}], 
    ";"}], ")"}]}]], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[
 SuperscriptBox["Null", "10"]], "Output",
 CellChangeTimes->{3.410762122453125*^9, 3.410762277671875*^9, 
  3.410762312890625*^9, 3.410762442046875*^9, 3.410762477875*^9, 
  3.41243002903125*^9, 3.5718380204286013`*^9, 3.571845710972328*^9, 
  3.5718607124753942`*^9, 3.5719095426278095`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["\<\
Tests of functions for manipulating analysis and algorithm history:\
\>", "Subsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileanhistory", "  ", "=", "  ", 
      RowBox[{"filealghistory", "=", "  ", "\"\<test.out\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"recanhistory", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"recalghistory", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"noteanhistory", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"notealghistory", "=", "1"}], ";"}], "\[IndentingNewLine]", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Empty", " ", "contents", " ", "of", " ", "history", " ", 
     RowBox[{"files", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Put", "[", 
     RowBox[{"\"\<Beginning of history file.\>\"", ",", "filealghistory"}], 
     "]"}], ";"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Storing complete algorihm history:", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"storealghistory", "[", 
     RowBox[{"\"\<testfunction\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<algel1\>\"", ",", "\"\<algel2\>\""}], "}"}]}], "]"}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"Import", "[", 
     RowBox[{"filealghistory", ",", "\"\<Text\>\""}], "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Appending data to algorihm history:", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"appendalghistory", "[", 
     RowBox[{"\"\<testfunction\>\"", ",", "\"\<New element\>\""}], "]"}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"Import", "[", 
     RowBox[{"filealghistory", ",", "\"\<Text\>\""}], "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Storing complete analysis history:", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"storeanhistory", "[", 
     RowBox[{"\"\<testanalysisfunction\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<analysis1\>\"", ",", "\"\<analysis2\>\""}], "}"}]}], 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Import", "[", 
     RowBox[{"fileanhistory", ",", "\"\<Text\>\""}], "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Appending data to analysis history:", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"appendanhistory", "[", 
     RowBox[{"\"\<testanalysisfunction\>\"", ",", "\"\<New analysis\>\""}], 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Import", "[", 
     RowBox[{"filealghistory", ",", "\"\<Text\>\""}], "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["\<\
Calculating factors and intervals for tables with geometrical growth of \
interval lengths:\
\>", "Subsubtitle"],

Cell["Factors for tables with specified edge points:", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tabexpfactors", "[", 
     RowBox[{"numpt_", ",", "fact_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"tabexpfactint", "[", 
      RowBox[{"numpt", ",", "fact"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tabexpfactint", "[", 
    RowBox[{"numptarg_", ",", "fact_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ret", ",", "numpt", ",", "sumint", ",", "intervals", ",", "factors"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"$A", " ", "Igor", " ", "mar06"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numpt", "=", 
       RowBox[{"Round", "[", "numptarg", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"intervals", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"numpt", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"factors", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "numpt"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inter", "=", "1"}], ";", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"current", " ", "interval", " ", 
        RowBox[{"(", 
         RowBox[{"non", "-", "normalized"}], ")"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"sumint", "=", "0"}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"sum", " ", "of", " ", "intervals"}], " ", "-", " ", 
        RowBox[{
        "normalizing", " ", "factor", " ", "at", " ", "the", " ", "end"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", "numpt"}], ",", 
        RowBox[{"i", "=", 
         RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"intervals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", "inter"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"sumint", "=", 
          RowBox[{"sumint", "+", "inter"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"factors", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", "sumint"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inter", "=", 
          RowBox[{"inter", "*", "fact"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"intervals", "=", 
       RowBox[{"intervals", "/", "sumint"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"factors", "=", 
       RowBox[{"factors", "/", "sumint"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"N", "[", " ", 
       RowBox[{"{", 
        RowBox[{"factors", ",", "intervals"}], "}"}], " ", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell["Factors for tables with specified central and edge point:", \
"Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tabexpfactorscent", "[", 
     RowBox[{"numpt_", ",", "fact_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"$A", " ", "Igor", " ", "mar06"}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"numpt", ",", "2"}], "]"}], "\[Equal]", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", 
           RowBox[{"tabexpfactorscent", "[", 
            RowBox[{
             RowBox[{"numpt", "+", "1"}], ",", "fact"}], "]"}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Reverse", "[", "\[IndentingNewLine]", 
          RowBox[{"Drop", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"tabexpfactors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"numpt", "+", "1"}], ")"}], "/", "2"}], ",", 
               "fact"}], "]"}]}], ",", "\[IndentingNewLine]", "1"}], "]"}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"tabexpfactors", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"numpt", "+", "1"}], ")"}], "/", "2"}], ",", "fact"}], 
          "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tabexpfactintcent", "[", 
    RowBox[{"numpt_", ",", "fact_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"factors", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"$A", " ", "Igor", " ", "mar06"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"factors", "=", 
       RowBox[{"tabexpfactorscent", "[", 
        RowBox[{"numpt", ",", "fact"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"factors", ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"factors", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"factors", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "[", "factors", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["\<\
Function for calculating  analysis points and tables of analysis points:\
\>", "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testpoint", "=", 
   RowBox[{"calcanpt", "[", 
    RowBox[{"anfuncsimpconstr", ",", 
     RowBox[{"{", 
      RowBox[{"1.11", ",", "2.22"}], "}"}], ",", "11", ",", "22", ",", "33", 
     ",", "44", ",", "\"\<1\>\""}], "]"}]}], "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 RowBox[{"calcanpt", "[", 
  RowBox[{"anfuncsimpconstr", ",", 
   RowBox[{"{", 
    RowBox[{"1.11`", ",", "2.22`"}], "}"}], ",", "11", ",", "22", ",", "33", 
   ",", "44", ",", "\<\"1\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.410762122703125*^9, 3.4107622778125*^9, 
  3.410762313078125*^9, 3.4107624421875*^9, 3.410762478015625*^9, 
  3.412430029171875*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Analysis point",
  FontWeight->"Bold"],
 " is a list that consists at least of 3 parts:\n    ",
 StyleBox["{ param, res, args, ... }",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "\nwhere ",
 StyleBox["param",
  FontSlant->"Italic"],
 " is a vector of parameters, ",
 StyleBox["res",
  FontSlant->"Italic"],
 " is a vector of results, ",
 StyleBox["args",
  FontSlant->"Italic"],
 " are arguments {calcobj, calcconstr, calcgradobj and calcgradconstr, cd} \
passed to the analysis function. Further arguments are lists of indices and \
lists of factors, and there can be even further arguments, too.\n",
 StyleBox["  ",
  FontSlant->"Italic"],
 StyleBox["param = { p1, p2, ... }\n  res = { calcobj, obj, calcconstr, { c1, \
c2, ... }, calcgradobj, { DoDp1, DobjDp2, ... }, calcgradconstr, { { Dc1Dp1, \
Dc1Dp2, Dc1Dp3, ... }, {  Dc2Dp1, Dc2Dp2, Dc2Dp3, ... }, ret  }\n  args = { \
reqcalcobj, reqcalcconstr, reqcalcgradobj, reqcalcgradconstr, cd }\n  ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["calcobj, calcconstr, calcgradobj, calcgradconstr",
  FontSlant->"Italic"],
 " - calculation flags that tell whether the objective function, constraints, \
gradients of the objective function and gradients of constraints have been \
calculated (0 for no and non-zero for yes)\n  ",
 StyleBox["reqcalcobj, reqcalcconstr, reqcalcgradobj, reqcalcgradconstr",
  FontSlant->"Italic"],
 " - request flags that request calculation of given quantities, as were \
passed to the analysis\n  ",
 StyleBox["cd",
  FontSlant->"Italic"],
 " - definition data passed to the analysis function\n  ",
 StyleBox["p1, p2, ...",
  FontSlant->"Italic"],
 " - values of optimization parameters at which analysis has been performed\n \
 ",
 StyleBox["obj",
  FontSlant->"Italic"],
 " - value of the objective function\n  ",
 StyleBox["c1, c2, c3",
  FontSlant->"Italic"],
 " - values of the constraint functions\n  ",
 StyleBox["DoDp1, DoDp2, DoDp3",
  FontSlant->"Italic"],
 " - derivatives of the objective function with respect to individual \
parameters (components of objective function gradient)\n  ",
 StyleBox["Dc1Dp1, Dc1Dp2, ..., Dc2Dp1, ...",
  FontSlant->"Italic"],
 " - derivatives of individual constraint functions with respect to \
optimization parameters (components of constraint gradients)\n  ",
 StyleBox["ret",
  FontSlant->"Italic"],
 " - error code of analysis (0 for no error)\n  \n",
 StyleBox["Example:\n",
  FontWeight->"Bold"],
 "{ {1.11, 2.22}, { 1, 6.1605, 1, {-0.165, -2.44} , 1, {2.22, 4.44}, 1, { \
{-1.5, 0.}, {0., -2.} }, 0 }, { 1, 1, 1, 1, \"3\" }}",
 "\n    "
}], "Text"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "calcanpt ",
 StyleBox["[anfunc, p, calcobj, calcconstr, calcgradobj, calcgradconstr, cd]",
  
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "\n",
 StyleBox["runs analysis defined by ",
  FontWeight->"Plain"],
 StyleBox["anfunc",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" at parameters ",
  FontWeight->"Plain"],
 StyleBox["p",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and with specification arguments",
  FontWeight->"Plain"],
 StyleBox[" ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["calcobj, calcconstr, calcgradobj, calcgradconstr, cd",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" for the analysis",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"calcanpt", "[", 
   RowBox[{
   "analysisfunction_", ",", "p_", ",", "calcobj_", ",", "calcconstr_", ",", 
    "calcgradobj_", ",", "calcgradconstr_", ",", "cd_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"$A", " ", "Igor", " ", "mar06"}], ";"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{"p", ",", "\[IndentingNewLine]", 
    RowBox[{"analysisfunction", "[", 
     RowBox[{
     "p", ",", "calcobj", ",", "calcconstr", ",", "calcgradobj", ",", 
      "calcgradconstr", ",", "cd"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "calcobj", ",", "calcconstr", ",", "calcgradobj", ",", "calcgradconstr", 
      ",", "cd"}], "}"}]}], "\[IndentingNewLine]", "}"}]}]], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Functions that extract information from analysis points: ",
 StyleBox["anptparam, anptres, anptarg, anptind, anptfact,    anptcalcobj, \
anptobj, ..., anptret,    anptargcalcobj, ..., anptargspec",
  FontSlant->"Italic"]
}], "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"$A", " ", "Igor", " ", "mar06"}], ";"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Parameters", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"anptparam", "[", "pt_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "pt", "]"}], "\[GreaterEqual]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"pt", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Error in anptparam: Invalid structure of analysis \
point.\\n\>\"", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Specific", " ", 
     RowBox[{"parameter", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptparami", "[", 
      RowBox[{"pt_", ",", "i_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "param", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"param", "=", 
         RowBox[{"anptparam", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "param", "]"}], "\[GreaterEqual]", 
           RowBox[{"Abs", "[", "i", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"param", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptparami: index \>\"", ",", "i", ",", 
             "\"\< out of range \>\"", ",", 
             RowBox[{"Length", "[", "param", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Results", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptres", "[", "pt_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "pt", "]"}], "\[GreaterEqual]", "2"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"pt", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Error in anptres: Invalid structure of analysis point, less \
than 2 elements.\\n\>\"", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Results", " ", "-", " ", 
     RowBox[{"calculated", " ", "flag", " ", "for", " ", "objective", " ", 
      RowBox[{"function", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptcalcobj", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"anptres", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "res", "]"}], "\[GreaterEqual]", "1"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"res", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptcalcobj: Invalid structure of analysis resuts: \
\>\"", ",", "res"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Results", " ", "-", " ", 
     RowBox[{"objective", " ", 
      RowBox[{"function", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptobj", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"anptres", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "res", "]"}], "\[GreaterEqual]", "2"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"res", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptobj: Invalid structure of analysis resuts: \
\>\"", ",", "res"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Results", " ", "-", " ", 
     RowBox[{
     "calculation", " ", "flag", " ", "for", " ", "gradient", " ", "of", " ", 
      "objective", " ", 
      RowBox[{"function", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptcalcgradobj", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"anptres", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "res", "]"}], "\[GreaterEqual]", "5"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"res", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptcalcgradobj: Invalid structure of analysis \
resuts: \>\"", ",", "res"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Results", " ", "-", " ", 
     RowBox[{"gradient", " ", "of", " ", "objective", " ", 
      RowBox[{"function", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptgradobj", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"anptres", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "res", "]"}], "\[GreaterEqual]", "6"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"res", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptgradobj: Invalid structure of analysis resuts: \
\>\"", ",", "res"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Results", " ", "-", " ", 
     RowBox[{"calculation", " ", "flag", " ", "for", " ", "constraint", " ", 
      RowBox[{"functions", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptcalcconstr", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"anptres", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "res", "]"}], "\[GreaterEqual]", "3"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"res", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptcalcconstr: Invalid structure of analysis \
resuts: \>\"", ",", "res"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Results", " ", "-", " ", 
     RowBox[{"constraint", " ", 
      RowBox[{"functions", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptconstr", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"anptres", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "res", "]"}], "\[GreaterEqual]", "4"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"res", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptconstr: Invalid structure of analysis resuts: \
\>\"", ",", "res"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Results", " ", "-", " ", 
     RowBox[{
     "calculation", " ", "flag", " ", "for", " ", "gradients", " ", "of", " ",
       "constraint", " ", 
      RowBox[{"functions", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptcalcgradconstr", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"anptres", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "res", "]"}], "\[GreaterEqual]", "7"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"res", "[", 
            RowBox[{"[", "7", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptcalcgradconstr: Invalid structure of analysis \
resuts: \>\"", ",", "res"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Results", " ", "-", " ", 
     RowBox[{"gradients", " ", "of", " ", "constraint", " ", 
      RowBox[{"functions", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptgradconstr", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"anptres", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "res", "]"}], "\[GreaterEqual]", "8"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"res", "[", 
            RowBox[{"[", "8", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptgradconstr: Invalid structure of analysis \
resuts: \>\"", ",", "res"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Results", " ", "-", " ", 
     RowBox[{"return", " ", 
      RowBox[{"value", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptret", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"anptres", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "res", "]"}], "\[GreaterEqual]", "9"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"res", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptret: Invalid structure of analysis resuts: \
\>\"", ",", "res"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Arguments", " ", "to", " ", "analysis", " ", 
     RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptarg", "[", "pt_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "pt", "]"}], "\[GreaterEqual]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"pt", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Error in anptarg: Invalid structure of analysis point, less \
than 3 elements.\\n\>\"", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Arguments", " ", "to", " ", "analysis", " ", "function"}], " ", 
     "-", " ", 
     RowBox[{
     "calculation", " ", "request", " ", "for", " ", "objective", " ", 
      RowBox[{"function", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptargcalcobj", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "args", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"args", "=", 
         RowBox[{"anptargs", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "args", "]"}], "\[GreaterEqual]", "1"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"args", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptargcalcobj: Invalid structure of analysis \
specification arguments (should be {calcobj, calcconstr, calcgradobj, \
calcgradconstr, cd}): \>\"", ",", "args"}], "]"}], ";", "\[IndentingNewLine]",
            
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Arguments", " ", "to", " ", "analysis", " ", "function"}], " ", 
     "-", " ", 
     RowBox[{
     "calculation", " ", "request", " ", "for", " ", "constraint", " ", 
      RowBox[{"functions", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptargcalcconstr", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "args", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"args", "=", 
         RowBox[{"anptargs", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "args", "]"}], "\[GreaterEqual]", "2"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"args", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptargcalcconstr: Invalid structure of analysis \
specification arguments (should be {calcobj, calcconstr, calcgradobj, \
calcgradconstr, cd}): \>\"", ",", "args"}], "]"}], ";", "\[IndentingNewLine]",
            
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Arguments", " ", "to", " ", "analysis", " ", "function"}], " ", 
     "-", " ", 
     RowBox[{
     "calculation", " ", "request", " ", "for", " ", "gradient", " ", "of", 
      " ", "objective", " ", 
      RowBox[{"functions", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptargcalcgradobj", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "args", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"args", "=", 
         RowBox[{"anptargs", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "args", "]"}], "\[GreaterEqual]", "3"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"args", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptargcalcgradobj: Invalid structure of analysis \
specification arguments (should be {calcobj, calcconstr, calcgradobj, \
calcgradconstr, cd}): \>\"", ",", "args"}], "]"}], ";", "\[IndentingNewLine]",
            
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Arguments", " ", "to", " ", "analysis", " ", "function"}], " ", 
     "-", " ", 
     RowBox[{
     "calculation", " ", "request", " ", "for", " ", "gradient", " ", "of", 
      " ", "objective", " ", 
      RowBox[{"functions", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptargcalcgradconstr", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "args", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"args", "=", 
         RowBox[{"anptargs", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "args", "]"}], "\[GreaterEqual]", "4"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"args", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptargcalcgradconstr: Invalid structure of \
analysis specification arguments (should be {calcobj, calcconstr, \
calcgradobj, calcgradconstr, cd}): \>\"", ",", "args"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Arguments", " ", "to", " ", "analysis", " ", "function"}], " ", 
     "-", " ", 
     RowBox[{"specification", " ", 
      RowBox[{"argument", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptargspec", "[", "pt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "args", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"args", "=", 
         RowBox[{"anptargs", "[", "pt", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "args", "]"}], "\[GreaterEqual]", "5"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"args", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]",
           
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Error in anptargspec: Invalid structure of analysis \
specification arguments (should be {calcobj, calcconstr, calcgradobj, \
calcgradconstr, cd}): \>\"", ",", "args"}], "]"}], ";", "\[IndentingNewLine]",
            
           RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Table", " ", 
     RowBox[{"indices", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptind", "[", "pt_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "pt", "]"}], "\[GreaterEqual]", "4"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"pt", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Error in anptind: Table indices are not available for this \
analysis point.\\n\>\"", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Table", " ", 
     RowBox[{"factors", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"anptfact", "[", "pt_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "pt", "]"}], "\[GreaterEqual]", "5"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"pt", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Error in anptfact: Table factors are not available for this \
analysis point.\\n\>\"", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "tabanptrand ",
 StyleBox["[num,anfunc, p1, p2, calcobj, calcconstr, calcgradobj, \
calcgradconstr, cd]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "\n  ",
 StyleBox["num",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - number of analyses  performed\n  ",
  FontWeight->"Plain"],
 StyleBox["anfunc",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - analysis function\n  ",
  FontWeight->"Plain"],
 StyleBox["p1",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - lower limitd for parameters\n  ",
  FontWeight->"Plain"],
 StyleBox["p2",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - upper limits for parameters\n  ",
  FontWeight->"Plain"],
 StyleBox["calcoj, calcconstr, calcgradobj, calcgradconstr",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - calculation flags for analysis\n  ",
  FontWeight->"Plain"],
 StyleBox["cd",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - definition data for analysis",
  FontWeight->"Plain"],
 "\n  ",
 StyleBox["Runs a set of analyses defined by ",
  FontWeight->"Plain"],
 StyleBox["anfunc",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" in random points on the iterval specified by interval limits ",
  FontWeight->"Plain"],
 StyleBox["p1",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontWeight->"Plain"],
 StyleBox["p2",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontWeight->"Plain"],
 StyleBox["with specification arguments",
  FontWeight->"Plain"],
 StyleBox[" calcobj, calcconstr, calcgradobj, calcgradconstr, cd",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" for individual analyses.\n  Function can have an ",
  FontWeight->"Plain"],
 StyleBox["additional argument",
  FontSlant->"Italic"],
 StyleBox[", which instructs (if different than 0) ",
  FontWeight->"Plain"],
 StyleBox["to print intermediate results",
  FontSlant->"Italic"],
 StyleBox[" after calculation of each complete row of the table.\n  ",
  FontWeight->"Plain"],
 "Returns",
 StyleBox[" a list of analysis points with indices and factors appended to \
the standard analysis data. The form of results is \n",
  FontWeight->"Plain"],
 StyleBox["{ \n  {   {param_1}, {analysisresults_1}, {specargs_1}, {index_1}, \
{factor_1}  },\n  {   {param_2}, {analysisresults_2}, {specargs_2}, \
{index_2}, {factor_2}  },\n  ...,\n}",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["\nwhere ",
  FontWeight->"Plain"],
 StyleBox["param_i",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is vector of parameters at which the i-th analysis of the table \
is performed, ",
  FontWeight->"Plain"],
 StyleBox["analysisresults_i",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is a list of results of this analysis (in the standard form), ",
  FontWeight->"Plain"],
 StyleBox["specargs_i",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is the list of specification arguments at which the analysis was \
called,  ",
  FontWeight->"Plain"],
 StyleBox["index_i",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is the index of a particular analysis (running from 1 to Length[",
  
  FontWeight->"Plain"],
 StyleBox["factors",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]), and ",
  FontWeight->"Plain"],
 StyleBox["factor_i",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" contains the list of random numbers used for calculation of \
parameters. \n",
  FontWeight->"Plain"],
 "tabanptrand",
 StyleBox[" - similar fut central value for parameters and interval lengths \
are specified as ",
  FontWeight->"Plain"],
 "p1",
 StyleBox[" and ",
  FontWeight->"Plain"],
 "p0",
 StyleBox[". ",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tabanptrand", "[", 
    RowBox[{
    "num_", ",", "anfunc_", ",", "p1_", ",", "p2_", ",", "calcobj_", ",", 
     "calcconstr_", ",", "calcgradobj_", ",", "calcgradconstr_", ",", "cd_"}],
     "]"}], ":=", 
   RowBox[{"tabanptrand", "[", 
    RowBox[{
    "num", ",", "anfunc", ",", "p1", ",", "p2", ",", "calcobj", ",", 
     "calcconstr", ",", "calcgradobj", ",", "calcgradconstr", ",", "cd", ",", 
     "0"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tabanptrand", "[", 
    RowBox[{
    "num_", ",", "anfunc_", ",", "p1_", ",", "p2_", ",", "calcobj_", ",", 
     "calcconstr_", ",", "calcgradobj_", ",", "calcgradconstr_", ",", "cd_", 
     ",", "printpartialresults_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "k", ",", "tabk", ",", "ret", ",", "title", ",", 
       "randfactors", ",", "randpar", ",", "t1", ",", "t2", ",", "t3", ",", 
       "t4"}], "}"}], ",", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<tabanptrand: lower lim.: \>\"", ",", "p1", ",", 
        "\"\<, upper lim.: \>\"", ",", "p2"}], "]"}], ";", 
      RowBox[{"ret", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "num"}], ",", 
        RowBox[{"i", "=", 
         RowBox[{"i", "+", "1"}]}], ",", 
        RowBox[{
         RowBox[{"t1", "=", 
          RowBox[{"TimeUsed", "[", "]"}]}], ";", 
         RowBox[{"randfactors", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "p1", "]"}]}], "}"}]}], "]"}]}], ";", 
         RowBox[{"randpar", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "p1", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
             "+", 
             RowBox[{
              RowBox[{
              "randfactors", "\[LeftDoubleBracket]", "j", 
               "\[RightDoubleBracket]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "p2", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "p1", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}]}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "p1", "]"}]}], "}"}]}], "]"}]}], ";", 
         RowBox[{"t2", "=", 
          RowBox[{"TimeUsed", "[", "]"}]}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"ret", ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"calcanpt", "[", 
              RowBox[{
              "anfunc", ",", "randpar", ",", "calcobj", ",", "calcconstr", 
               ",", "calcgradobj", ",", "calcgradconstr", ",", "cd"}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", "i", "}"}], "}"}], ",", 
             RowBox[{"{", "randfactors", "}"}]}], "]"}]}], "]"}], ";", 
         RowBox[{"t3", "=", 
          RowBox[{"TimeUsed", "[", "]"}]}], ";", 
         RowBox[{"title", "=", 
          RowBox[{"\"\<tabanptrand: partial results (up to el. \>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\< of \>\"", "<>", 
           RowBox[{"ToString", "[", "num", "]"}], "<>", "\"\<): \>\""}]}], 
         ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"printpartialresults", "\[NotEqual]", "0"}], ",", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"title", ",", "\"\<\\n\>\"", ",", "ret"}], "]"}], 
            ";"}]}], "]"}], ";", 
         RowBox[{"storealghistory", "[", 
          RowBox[{"title", ",", "ret"}], "]"}], ";"}]}], "]"}], ";", 
      RowBox[{"Return", "[", "ret", "]"}], ";"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tabanptrandcent", "[", 
    RowBox[{
    "num_", ",", "anfunc_", ",", "p0_", ",", "dp_", ",", "calcobj_", ",", 
     "calcconstr_", ",", "calcgradobj_", ",", "calcgradconstr_", ",", "cd_", 
     ",", "printpartialresults_"}], "]"}], ":=", 
   RowBox[{"tabanptrand", "[", 
    RowBox[{"num", ",", "anfunc", ",", 
     RowBox[{"p0", "-", 
      RowBox[{"0.5`", " ", "dp"}]}], ",", 
     RowBox[{"p0", "+", 
      RowBox[{"0.5`", " ", "dp"}]}], ",", "calcobj", ",", "calcconstr", ",", 
     "calcgradobj", ",", "calcgradconstr", ",", "cd", ",", 
     "printpartialresults"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tabanptrandcent", "[", 
    RowBox[{
    "num_", ",", "anfunc_", ",", "p1_", ",", "p2_", ",", "calcobj_", ",", 
     "calcconstr_", ",", "calcgradobj_", ",", "calcgradconstr_", ",", "cd_"}],
     "]"}], ":=", 
   RowBox[{"tabanptrandcent", "[", 
    RowBox[{
    "num", ",", "anfunc", ",", "p1", ",", "p2", ",", "calcobj", ",", 
     "calcconstr", ",", "calcgradobj", ",", "calcgradconstr", ",", "cd", ",", 
     "0"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "tabanpt1d ",
 StyleBox["[anfunc, p0, p1, factors, calcobj, calcconstr, calcgradobj, \
calcgradconstr, cd]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "\n  ",
 StyleBox["Runs a table of analyses defined by ",
  FontWeight->"Plain"],
 StyleBox["anfunc",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" on a line between  ",
  FontWeight->"Plain"],
 StyleBox["p0",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontWeight->"Plain"],
 StyleBox["p1",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", and with ",
  FontWeight->"Plain"],
 StyleBox["factors",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" defining relative distances from ",
  FontWeight->"Plain"],
 StyleBox["p0",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" (expressed in ||",
  FontWeight->"Plain"],
 StyleBox["p1-p0||",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["), and specification arguments",
  FontWeight->"Plain"],
 StyleBox[" calcobj, calcconstr, calcgradobj, calcgradconstr, cd",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" for individual analyses.\n  Function can have an ",
  FontWeight->"Plain"],
 StyleBox["additional argument",
  FontSlant->"Italic"],
 StyleBox[", which instructs (if different than 0) ",
  FontWeight->"Plain"],
 StyleBox["to print intermediate results",
  FontSlant->"Italic"],
 StyleBox[" after calculation of each complete row of the table.\n  ",
  FontWeight->"Plain"],
 "Returns",
 StyleBox[" an one dimensional list of analysis points with indices and \
factors appended to the standard analysis data. The form of results is \n",
  FontWeight->"Plain"],
 StyleBox["{ \n  {   {param_1}, {analysisresults_1}, {specargs_1}, {index_1}, \
{factor_1}  },\n  {   {param_2}, {analysisresults_2}, {specargs_2}, \
{index_2}, {factor_2}  },\n  ...,\n}",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["\nwhere ",
  FontWeight->"Plain"],
 StyleBox["param_i",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is vector of parameters at which th",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tabanpt1d", "[", 
     RowBox[{
     "anfunc_", ",", "p0_", ",", "p1_", ",", "factors_", ",", "calcobj_", ",",
       "calcconstr_", ",", "calcgradobj_", ",", "calcgradconstr_", ",", 
      "cd_"}], "]"}], ":=", 
    RowBox[{"tabanpt1d", "[", 
     RowBox[{
     "anfunc", ",", "p0", ",", "p1", ",", "factors", ",", "calcobj", ",", 
      "calcconstr", ",", "calcgradobj", ",", "calcgradconstr", ",", "cd", ",",
       "0"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tabanpt1d", "[", 
    RowBox[{
    "anfunc_", ",", "p0_", ",", "p1_", ",", "factors_", ",", "calcobj_", ",", 
     "calcconstr_", ",", "calcgradobj_", ",", "calcgradconstr_", ",", "cd_", 
     ",", "    ", "printpartialresults_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "tabk", ",", "ret", ",", "title"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"$A", " ", "Igor", " ", "mar06"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tabk", "=", 
       RowBox[{"N", "[", "factors", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ret", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<=", 
         RowBox[{"Length", "[", "tabk", "]"}]}], ",", 
        RowBox[{"i", "=", 
         RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"ret", ",", "\[IndentingNewLine]", 
           RowBox[{"Join", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"calcanpt", "[", 
              RowBox[{"anfunc", ",", 
               RowBox[{"p0", "+", 
                RowBox[{
                 RowBox[{"tabk", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"p1", "-", "p0"}], ")"}]}]}], ",", "calcobj", ",", 
               "calcconstr", ",", "calcgradobj", ",", "calcgradconstr", ",", 
               "cd"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"{", "i", "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"tabk", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "}"}], "}"}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"title", "=", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\<tabanpt1d: partial results (up to el. \>\"", ",", 
            RowBox[{"ToString", "[", "i", "]"}], ",", "\"\< of \>\"", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"Length", "[", "tabk", "]"}], "]"}], ",", 
            "\"\<): \>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"printpartialresults", "\[NotEqual]", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"title", ",", "\"\<\\n\>\"", ",", "ret"}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
          
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Record", " ", "progress", " ", "of", " ", "the", " ", "table", 
            " ", "up", " ", "to", " ", "now"}], ",", " ", 
           RowBox[{
           "according", " ", "to", " ", "global", " ", "control", " ", 
            RowBox[{"variables", ":"}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"storealghistory", "[", 
          RowBox[{"title", ",", "ret"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "ret", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "tabanpt2d ",
 StyleBox["[anfunc, p0, p1, p2, factors1, factors2, calcobj, calcconstr, \
calcgradobj, calcgradconstr, cd]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "\n  ",
 StyleBox["Runs a two dimensional table of analyses defined by ",
  FontWeight->"Plain"],
 StyleBox["anfunc",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" on a plane defined by lines beteen  (",
  FontWeight->"Plain"],
 StyleBox["p0",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontWeight->"Plain"],
 StyleBox["p1",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["), and (",
  FontWeight->"Plain"],
 StyleBox["p0",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontWeight->"Plain"],
 StyleBox["p2",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["), with ",
  FontWeight->"Plain"],
 StyleBox["factors",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" defining relative distances from ",
  FontWeight->"Plain"],
 StyleBox["p0",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" (expressed in ||",
  FontWeight->"Plain"],
 StyleBox["p1-p0||",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and ||",
  FontWeight->"Plain"],
 StyleBox["p1-p0||",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", respectively), and specification arguments",
  FontWeight->"Plain"],
 StyleBox[" calcobj, calcconstr, calcgradobj, calcgradconstr, cd",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" for individual analyses.\nOtherwise the function works similar \
than ",
  FontWeight->"Plain"],
 "tabanpt1d",
 StyleBox[". \n  Function can have an ",
  FontWeight->"Plain"],
 StyleBox["additional argument",
  FontSlant->"Italic"],
 StyleBox[", which instructs (if different than 0) ",
  FontWeight->"Plain"],
 StyleBox["to print intermediate results",
  FontSlant->"Italic"],
 StyleBox[" after calculation of each complete row of the table.\n  The ",
  FontWeight->"Plain"],
 "returned",
 StyleBox[" analysis points are arranged in a 2 dimensional list, with the \
second index running faster. A two dimensional list of corresponding indices \
and a two dimensional list of corresponding factors are appended to each set \
of standard analysis point data.\n\nFunction ",
  FontWeight->"Plain"],
 "returns",
 StyleBox[" a two dimensional table  of analysis points with lists of element \
indices and factors appended to standard analysis point data.\n\nThe format \
of returned data is \n",
  FontWeight->"Plain"],
 StyleBox["{\n  {anpt_1_1, anpt_1_2, ...},\n  {anpt_2_1, anpt_2_2, ...},\n  \
...\n}",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["\nwhere the format of ",
  FontWeight->"Plain"],
 StyleBox["anpt_i_j",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is\n",
  FontWeight->"Plain"],
 StyleBox["  {   {param_i_j}, {analysisresults_i_j}, {specargs_i}, \
{index_i_j}, {factor_i_j}  }\n",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["and ",
  FontWeight->"Plain"],
 StyleBox["{index_i_j}",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is a list of two indices and ",
  FontWeight->"Plain"],
 StyleBox["{factor_i_j}",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" a list of two factors (along to the first and second direction, \
i.e. along (p1-p0) and (p2-p0)).",
  FontWeight->"Plain"],
 StyleBox["\n",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tabanpt2d", "[", 
     RowBox[{
     "anfunc_", ",", "p0_", ",", "p1_", ",", "p2_", ",", "factors1_", ",", 
      "factors2_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", 
      ",", "calcgradconstr_", ",", "cd_"}], "]"}], ":=", 
    RowBox[{"tabanpt2d", "[", 
     RowBox[{
     "anfunc", ",", "p0", ",", "p1", ",", "p2", ",", "factors1", ",", 
      "factors2", ",", "calcobj", ",", "calcconstr", ",", "calcgradobj", ",", 
      "calcgradconstr", ",", "cd", ",", "0"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tabanpt2d", "[", 
    RowBox[{
    "anfunc_", ",", "p0_", ",", "p1_", ",", "p2_", ",", "factors1_", ",", 
     "factors2_", ",", "calcobj_", ",", "calcconstr_", ",", "calcgradobj_", 
     ",", "calcgradconstr_", ",", "cd_", ",", "    ", 
     "printpartialresults_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "tabk1", ",", "tabk2", ",", "ret"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"$A", " ", "Igor", " ", "mar06"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tabk1", "=", 
       RowBox[{"N", "[", "factors1", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tabk2", "=", 
       RowBox[{"N", "[", "factors2", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ret", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "tabk1", "]"}]}], ",", 
        RowBox[{"i", "=", 
         RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"ret", ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"calcanpt", "[", 
                RowBox[{"anfunc", ",", 
                 RowBox[{"p0", "+", 
                  RowBox[{
                   RowBox[{"tabk1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"p1", "-", "p0"}], ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"tabk2", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"p2", "-", "p0"}], ")"}]}]}], ",", "calcobj", ",",
                  "calcconstr", ",", "calcgradobj", ",", "calcgradconstr", 
                 ",", "cd"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tabk1", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"tabk2", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], "}"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", "tabk2", "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"title", "=", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\<tabanpt2d: partial results (up to row \>\"", ",", 
            RowBox[{"ToString", "[", "i", "]"}], ",", "\"\< of \>\"", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"Length", "[", "tabk1", "]"}], "]"}], ",", 
            "\"\<): \>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"printpartialresults", "\[NotEqual]", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"title", ",", "\"\<\\n\>\"", ",", "ret"}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
          
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Record", " ", "progress", " ", "of", " ", "the", " ", "table", 
            " ", "up", " ", "to", " ", "now"}], ",", " ", 
           RowBox[{
           "according", " ", "to", " ", "global", " ", "control", " ", 
            RowBox[{"variables", ":"}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"storealghistory", "[", 
          RowBox[{"title", ",", "ret"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", "  ", 
      RowBox[{"(*", " ", "For", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "ret", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "flattentabanpt",
 StyleBox[" [ tab ]\n",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["  ",
  FontWeight->"Plain"],
 "Returns",
 StyleBox[" a flattened table of analysis points ",
  FontWeight->"Plain"],
 StyleBox["tab",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" in such a way that the returned table is a simple list of all \
analysis points contained in ",
  FontWeight->"Plain"],
 StyleBox["tab",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[".\n  If ",
  FontWeight->"Plain"],
 StyleBox["tab",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is a single analysis point (not a list of them) then ",
  FontWeight->"Plain"],
 StyleBox["{tab}",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is returned. If ",
  FontWeight->"Plain"],
 StyleBox["tab",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is a list of lists of analysis points then ",
  FontWeight->"Plain"],
 StyleBox["Flatten[tab]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is returned, and so on recursively until the returned value is a \
simple 1D list of analysis points. Criteria for application of flattening is \
checking depth of ",
  FontWeight->"Plain"],
 StyleBox["res[[1,1]]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", which must be at the final stage vector of parameters of the \
first analysis point (with depth 1).",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"flattentabanpt", "[", "tab_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"$A", " ", "Igor", " ", "apr06"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "[", 
          RowBox[{"tab", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], "<", "2"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "tab", " ", "is", " ", "not", " ", "even", " ", "a", " ", "single", 
           " ", "analysis", " ", "point"}], ",", " ", 
          RowBox[{"we", " ", "return", " ", "an", " ", "empty", " ", 
           RowBox[{"table", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<\\nError in flattentabanpt: Argument does not represent an \
analysis point or a table of analysis points:\\n  \>\"", ",", "tab", ",", 
           "\"\<\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "[", 
          RowBox[{"tab", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "\[Equal]", " ", 
         "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "tab", " ", "is", " ", "a", " ", "single", " ", "analysis", " ", 
           "point"}], ",", " ", 
          RowBox[{
          "we", " ", "enclose", " ", "it", " ", "in", " ", "a", " ", "list", 
           " ", "to", " ", "make", " ", "a", " ", 
           RowBox[{"table", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", "tab", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", "tab"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "[", 
          RowBox[{"res", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "]"}], " ", ">", 
         "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"res", ",", "1"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "convtabanpt1dpar ",
 StyleBox["[tab, whichpar]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "\n",
 StyleBox["Converts a 1d table of analysis points ",
  FontWeight->"Plain"],
 StyleBox["tab",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" in such a way that table factors (the 4th elements of analysis \
points in tables) are replaced by the value of a specific parameter whose \
index is specified by ",
  FontWeight->"Plain"],
 StyleBox["whichpar",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[". The replaced table factors are put on the 6th position in tha \
analysis point structures contained in ",
  FontWeight->"Plain"],
 StyleBox["tab",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[".  \nThis function is in useful for plotting of tables of analysis \
results when one wants to show a particular parameter on the x axis instead \
of a distance factor with respect to two edge points.",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"$A", " ", "Igor", " ", "apr06"}], ";"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"converttabanpt1dpar", ":=", "convtabanpt1dpar"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"convvertbacktab1dpar", ":=", "convbacktab1dpar"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"convtabanpt1dpar", "[", 
      RowBox[{"tab_", ",", "whichpar_"}], "]"}], ":=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "4"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"{", 
          RowBox[{"tab", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1", ",", "whichpar"}], "]"}], "]"}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "5"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "tab", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"convbacktab1dpar", "[", "tab_", "]"}], ":=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "4"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "6"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "tab", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "convtabanpt2dpar ",
 StyleBox["[tab, whichpar1",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", whichpar2",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "\n",
 StyleBox["Converts a 2d table of analysis points ",
  FontWeight->"Plain"],
 StyleBox["tab",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" in such a way that table factors (the 4th elements of analysis \
points in tables) are replaced by a pair of valus of two specific parameters \
whose indices are specified by ",
  FontWeight->"Plain"],
 StyleBox["whichpar1",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontWeight->"Plain"],
 StyleBox["whichpar2",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[". The replaced table factors are put on the 6th position in the \
analysis point structures contained in ",
  FontWeight->"Plain"],
 StyleBox["tab",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[".  \nThis function is useful for plotting of tables of analysis \
results when one wants to show particular parameters on the x and y axes \
instead of a distance factor with respect to two edge points.",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"$A", " ", "Igor", " ", "apr06"}], ";"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"converttabanpt2dpar", ":=", "convtabanpt2dpar"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"convvertbacktab2dpar", ":=", "convbacktab2dpar"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"convtabanpt2dpar", "[", 
      RowBox[{"tab_", ",", "whichpar1_", ",", "whichpar2_"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "3"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "4"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"tab", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "1", ",", "whichpar1"}], "]"}], 
              "]"}], ",", 
             RowBox[{"tab", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "1", ",", "whichpar2"}], "]"}], 
              "]"}]}], " ", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "5"}], "]"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "   ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"tab", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], "  ", "}"}]}], 
        "     ", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "tab", "]"}]}], "}"}]}], "   ", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"convbacktab2dpar", "[", "tab_", "]"}], ":=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "3"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "4"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "6"}], "]"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "   ", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"Tab", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "  ", "}"}]}], "  ", 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "tab", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Functions for ",
 StyleBox["plotting",
  FontWeight->"Bold"],
 " tables of analysis results (including convergence history):"
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell["Plotting 1D analysis tables:", "Subsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "plottabanpt1d  ",
 StyleBox["[taban, plotpoints, plotlines, pointsize, linethickness, \
showplots]\n",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["plots 1D tables of analysis points.\n",
  FontWeight->"Plain"],
 StyleBox["taban",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - table of analysis points, ponts must be at the first level\n",
  FontWeight->"Plain"],
 StyleBox["plotponts",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" : if 0 or False then points are not plotted.\n",
  FontWeight->"Plain"],
 StyleBox["plotlines",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" : if 0 or False then lines are not plotted.\n",
  FontWeight->"Plain"],
 StyleBox["pointsize",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" : size of points on graphs\n",
  FontWeight->"Plain"],
 StyleBox["linehickness",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[": thickness of lines on graph\n",
  FontWeight->"Plain"],
 StyleBox["showplots",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[": if 0 or False then plots are not shown (but the returned table \
of plots can be shown later). Function called without this argument will show \
the plots.\n\n  Function can also be called with last 2 or last 4 arguments \
omitted. In this case, default values are plotpoints=1, plotlines=1, \
pointsize=0.02, linethickness=0.\n\n  Function ",
  FontWeight->"Plain"],
 "returns",
 StyleBox[" a table of 4 plots: objective function plotted against table \
factors, constraint functions plotted agaainst table factors, objetive \
function plotted with respect to table indices, and constraint functions \
plotted with respect to table indices. These individual plots can be shown by \
Show[...,DisplayFunction->$DisplayFunction] when showing results is not \
requested at function call (i.e. th eartument ",
  FontWeight->"Plain"],
 StyleBox["showplots",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is 0 or False",
  FontWeight->"Plain"],
 StyleBox[").",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"plottabanpt1d", "[", 
      RowBox[{"taban_", ",", "plotpoints_", ",", "plotlines_"}], "]"}], ":=", 
     
     RowBox[{"plottabanpt1d", "[", 
      RowBox[{
      "taban", ",", "plotpoints", ",", "plotlines", ",", "0.02`", ",", "0"}], 
      "]"}]}], ";"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"plottabanpt1d", "[", "taban_", "]"}], ":=", 
     RowBox[{"plottabanpt1d", "[", 
      RowBox[{"taban", ",", "1", ",", "1"}], "]"}]}], ";"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"plottabanpt1d", "[", 
      RowBox[{
      "taban_", ",", "plotpoints_", ",", "plotlines_", ",", "pointsize_", ",",
        "linethickness_"}], "]"}], ":=", 
     RowBox[{"plottabanpt1d", "[", 
      RowBox[{
      "taban", ",", "plotpoints", ",", "plotlines", ",", "pointsize", ",", 
       "linethickness", ",", "1"}], "]"}]}], ";"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"plottabanpt1d", "[", 
      RowBox[{
      "taban_", ",", "plotpoints_", ",", "plotlines_", ",", "pointsize_", ",",
        "linethickness_", ",", "showplots_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "i", ",", "j", ",", "dim", ",", "nconstr", ",", "npoints", ",", 
         "parmin", ",", "parmax", ",", "tabparam", ",", "tabobj", ",", 
         "tabconstr", ",", "tabind", ",", "tabfact", ",", "tabplotobjfact", 
         ",", "tabplotconstrfact", ",", "tabplotobjind", ",", 
         "tabplotconstrind", ",", "joined1", ",", "joined2"}], "}"}], ",", 
       RowBox[{
        RowBox[{"joined1", "=", "False"}], ";", 
        RowBox[{"joined2", "=", "True"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"plotpoints", "\[Equal]", "0"}], "||", 
           RowBox[{"!", "plotpoints"}]}], ",", 
          RowBox[{
           RowBox[{"joined1", "=", "True"}], ";"}]}], "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"plotlines", "\[Equal]", "0"}], "||", 
           RowBox[{"!", "plotlines"}]}], ",", 
          RowBox[{
           RowBox[{"joined2", "=", "False"}], ";"}]}], "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 1\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"tabparam", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"anptparam", "[", 
            RowBox[{
            "taban", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 2\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"tabobj", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"anptobj", "[", 
            RowBox[{
            "taban", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 3\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"tabconstr", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"anptconstr", "[", 
            RowBox[{
            "taban", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 4\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"tabind", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"anptind", "[", 
             RowBox[{
             "taban", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 5\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"tabfact", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"anptfact", "[", 
             RowBox[{
             "taban", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 6\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"dim", "=", 
         RowBox[{"Length", "[", 
          RowBox[{
          "tabparam", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "]"}]}], ";", 
        RowBox[{"nconstr", "=", 
         RowBox[{"Length", "[", 
          RowBox[{
          "tabconstr", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "]"}]}], ";", 
        RowBox[{"npoints", "=", 
         RowBox[{"Length", "[", "taban", "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<dim = \>\"", ",", "dim", ",", "\"\<, nconstr = \>\"", ",", 
            "nconstr", ",", "\"\<, npoints = \>\"", ",", "npoints"}], "]"}]}],
          "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 7\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"tabplotobjind", "=", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"tabobj", ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Hue", "[", 
                  FractionBox["1", 
                   RowBox[{"nconstr", "+", "1"}]], "]"}], ",", 
                 RowBox[{"PointSize", "[", "pointsize", "]"}], ",", 
                 RowBox[{"Thickness", "[", "linethickness", "]"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", "joined1"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], 
            ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"tabobj", ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Hue", "[", 
                  FractionBox["1", 
                   RowBox[{"nconstr", "+", "1"}]], "]"}], ",", 
                 RowBox[{"PointSize", "[", "pointsize", "]"}], ",", 
                 RowBox[{"Thickness", "[", "linethickness", "]"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", "joined2"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
           "}"}], "}"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 8\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"tabplotconstrind", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"tabconstr", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "1", ",", "npoints"}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Hue", "[", 
                   FractionBox[
                    RowBox[{"i", "+", "1"}], 
                    RowBox[{"nconstr", "+", "1"}]], "]"}], ",", 
                  RowBox[{"PointSize", "[", "pointsize", "]"}], ",", 
                  RowBox[{"Thickness", "[", "linethickness", "]"}]}], "}"}]}],
                ",", 
               RowBox[{"Joined", "\[Rule]", "joined1"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], 
             ",", 
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"tabconstr", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "1", ",", "npoints"}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Hue", "[", 
                   FractionBox[
                    RowBox[{"i", "+", "1"}], 
                    RowBox[{"nconstr", "+", "1"}]], "]"}], ",", 
                  RowBox[{"PointSize", "[", "pointsize", "]"}], ",", 
                  RowBox[{"Thickness", "[", "linethickness", "]"}]}], "}"}]}],
                ",", 
               RowBox[{"Joined", "\[Rule]", "joined2"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nconstr"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 9\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"tabplotobjfact", "=", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"tabfact", ",", "tabobj"}], "}"}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Hue", "[", 
                  FractionBox["1", 
                   RowBox[{"nconstr", "+", "1"}]], "]"}], ",", 
                 RowBox[{"PointSize", "[", "pointsize", "]"}], ",", 
                 RowBox[{"Thickness", "[", "linethickness", "]"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", "joined1"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], 
            ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"tabfact", ",", "tabobj"}], "}"}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Hue", "[", 
                  FractionBox["1", 
                   RowBox[{"nconstr", "+", "1"}]], "]"}], ",", 
                 RowBox[{"PointSize", "[", "pointsize", "]"}], ",", 
                 RowBox[{"Thickness", "[", "linethickness", "]"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", "joined2"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
           "}"}], "}"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 10\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"tabplotconstrfact", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"tabfact", ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"tabconstr", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "npoints"}], "}"}]}], "]"}]}],
                  "}"}], "]"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Hue", "[", 
                   FractionBox[
                    RowBox[{"i", "+", "1"}], 
                    RowBox[{"nconstr", "+", "1"}]], "]"}], ",", 
                  RowBox[{"PointSize", "[", "pointsize", "]"}], ",", 
                  RowBox[{"Thickness", "[", "linethickness", "]"}]}], "}"}]}],
                ",", 
               RowBox[{"Joined", "\[Rule]", "joined1"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], 
             ",", 
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"tabfact", ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"tabconstr", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "npoints"}], "}"}]}], "]"}]}],
                  "}"}], "]"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Hue", "[", 
                   FractionBox[
                    RowBox[{"i", "+", "1"}], 
                    RowBox[{"nconstr", "+", "1"}]], "]"}], ",", 
                  RowBox[{"PointSize", "[", "pointsize", "]"}], ",", 
                  RowBox[{"Thickness", "[", "linethickness", "]"}]}], "}"}]}],
                ",", 
               RowBox[{"Joined", "\[Rule]", "joined2"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nconstr"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 11\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"showplots", "||", 
           RowBox[{"showplots", "\[NotEqual]", "0"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<\\n\\ntabplotobjfact (result[[1,1]]):\\nValues of the \
objective function plotted against line factors:\>\"", "]"}], " ", 
            RowBox[{"Show", "[", 
             RowBox[{"tabplotobjfact", ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
             "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
             RowBox[{"Print", "[", "\"\<plottabanpt1d: check 12\>\"", "]"}]}],
             "]"}], ";", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<\\n\\ntabplotconstrfact (result[[1,2]])\\nValues of \
constraint functions plotted against line factors; color order for \
constraints is like green->cyan->blue->red:\>\"", "]"}], " ", 
            RowBox[{"Show", "[", 
             RowBox[{"tabplotconstrfact", ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
             "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
             RowBox[{"Print", "[", "\"\<plottabanpt1d: check 13\>\"", "]"}]}],
             "]"}], ";", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<\\n\\ntabplotobjind (result[[2,1]])\\nValues of the \
objective function plotted against analysis sequential numbers:\>\"", "]"}], 
            " ", 
            RowBox[{"Show", "[", 
             RowBox[{"tabplotobjind", ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
             "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
             RowBox[{"Print", "[", "\"\<plottabanpt1d: check 14\>\"", "]"}]}],
             "]"}], ";", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<\\n\\ntabplotconstrind (result[[2,2]])\\nValues of \
constraint functions plotted against analysis sequential numbers; color order \
for constraints is like green->cyan->blue->red:\>\"", "]"}], " ", 
            RowBox[{"Show", "[", 
             RowBox[{"tabplotconstrind", ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
             "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
             RowBox[{"Print", "[", "\"\<plottabanpt1d: check 15\>\"", "]"}]}],
             "]"}], ";"}]}], "]"}], ";", 
        RowBox[{
        "Print", "[", 
         "\"\<Returned: {\[IndentingNewLine]{tabplotobjfact, \
tabplotconstrfact},\[IndentingNewLine]{tabplotobjind, tabplotconstrind},\
\[IndentingNewLine]{tabfact,tabobj,tabconstr}\[IndentingNewLine]}\>\"", "]"}],
         ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 16\>\"", "]"}]}], 
         "]"}], ";", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"tabplotobjfact", ",", "tabplotconstrfact"}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"tabplotobjind", ",", "tabplotconstrind"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"tabfact", ",", "tabobj", ",", "tabconstr"}], "}"}]}], 
          "}"}], "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
          RowBox[{"Print", "[", "\"\<plottabanpt1d: check 17\>\"", "]"}]}], 
         "]"}], ";"}]}], "]"}]}], ";"}], ")"}]}]], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[
 SuperscriptBox["Null", "4"]], "Output",
 CellChangeTimes->{3.410762123015625*^9, 3.410762278078125*^9, 
  3.41076231328125*^9, 3.410762442359375*^9, 3.410762478265625*^9, 
  3.412430034453125*^9, 3.571838020708602*^9, 3.571845711243344*^9, 
  3.571860712584594*^9, 3.5719095429762125`*^9}],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[CellGroupData[{

Cell["Plotting 2D analysis tables:", "Subsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "tabanpt2dgraph",
 StyleBox[" [ ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["taban",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", linethickness, linecolor, pointsize, pointcolor, plotsolid, \
solidcolor, showplots ] \n",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["\n\ngrid of points in 2 or 3 dimensions.\n  ",
  FontWeight->"Plain"],
 StyleBox["taban",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - 2D table of analysis points\n",
  FontWeight->"Plain"],
 StyleBox["  linethickness",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - line thickness, if greater than 0 then a grid of lines is \
plotted, otherwise it is not.\n  ",
  FontWeight->"Plain"],
 StyleBox["linecolor",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - specification of line color (standard or accepted by ",
  FontWeight->"Plain"],
 StyleBox["handlecolor",
  FontSlant->"Italic"],
 StyleBox["); if 0 then each row of points is connected by lines of different \
colors\n  ",
  FontWeight->"Plain"],
 StyleBox["pointsize",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - size of points, if greater than 0 then points are plotted, \
otherwise they are not.\n  ",
  FontWeight->"Plain"],
 StyleBox["pointcolor",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - specification of point color, similar effect as ",
  FontWeight->"Plain"],
 StyleBox["linecolor",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[".\n  ",
  FontWeight->"Plain"],
 StyleBox["plotsolid",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - if different than 0 then polygons (quadrilaterals) bound by \
points are plotted.\n  ",
  FontWeight->"Plain"],
 StyleBox["solidcolor",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - color for solid polygons. \n  ",
  FontWeight->"Plain"],
 StyleBox["showplots",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[": if 0 or False then plots are not shown (but the returned table \
of plots can be shown later). Function called without this argument will show \
the plots.\n",
  FontWeight->"Plain"],
 StyleBox["  ",
  FontWeight->"Plain"],
 "tabanpt2dgraph",
 StyleBox[" ",
  FontWeight->"Plain"],
 StyleBox["[ ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["taban",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", size ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["  - plots points and lines, rows of points in different colors.\n  \
",
  FontWeight->"Plain"],
 "tabanpt2dgraph",
 StyleBox[" ",
  FontWeight->"Plain"],
 StyleBox["[ ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["taban",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", linethickness, linecolor ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - plots onlly line grid\n  ",
  FontWeight->"Plain"],
 "tabanpt2dgraph",
 StyleBox[" ",
  FontWeight->"Plain"],
 StyleBox["[ ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["taban",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", linethickness, linecolor, pointsize, pointcolor ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - without solid polygons",
  FontWeight->"Plain"],
 "\n\n\nplottabanpt2d  ",
 StyleBox["[taban, plotpoints, plotlines, pointsize, linethickness, \
showplots]\n",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["plots 2d tables of analysis points.\n",
  FontWeight->"Plain"],
 StyleBox["taban",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - 2D table of analysis points\n",
  FontWeight->"Plain"],
 StyleBox["plotponts",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" : if 0 or False then points are not plotted.\n",
  FontWeight->"Plain"],
 StyleBox["plotlines",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" : if 0 or False then lines are not plotted.\n",
  FontWeight->"Plain"],
 StyleBox["pointsize",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" : size of points on graphs\n",
  FontWeight->"Plain"],
 StyleBox["linehickness",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[": thickness of lines on graph\n",
  FontWeight->"Plain"],
 StyleBox["showplots",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[": if 0 or False then plots are not shown (but the returned table \
of plots can be shown later). Function called without this argument will show \
the plots.\n\nFunction can also be called with last 2 or last 4 arguments \
omitted. In this case, default values are plotpoints=1, plotlines=1, \
pointsize=0.02, linethickness=0.\n\n  Function ",
  FontWeight->"Plain"],
 "returns",
 StyleBox[" a table of 4 plots: objective function plotted against table \
factors, constraint functions plotted agaainst table factors, objetive \
function plotted with respect to table indices, and constraint functions \
plotted with respect to table indices. These individual plots can be shown by \
Show[...,DisplayFunction->$DisplayFunction] when showing results is not \
requested at function call (i.e. th eartument ",
  FontWeight->"Plain"],
 StyleBox["showplots",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is 0 or False).",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plottabanpt2d", "[", 
    RowBox[{"taban_", ",", "plotpoints_", ",", "plotlines_"}], "]"}], ":=", 
   RowBox[{"plottabanpt2d", "[", 
    RowBox[{
    "taban", ",", "plotpoints", ",", "plotlines", ",", "0.02`", ",", "0"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plottabanpt2d", "[", "taban_", "]"}], ":=", 
   RowBox[{"plottabanpt1d", "[", 
    RowBox[{"taban", ",", "1", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plottabanpt2d", "[", 
    RowBox[{
    "taban_", ",", "plotpoints_", ",", "plotlines_", ",", "pointsize_", ",", 
     "linethickness_"}], "]"}], ":=", 
   RowBox[{"plottabanpt2d", "[", 
    RowBox[{
    "taban", ",", "plotpoints", ",", "plotlines", ",", "pointsize", ",", 
     "linethickness", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plottabanpt2d", "[", 
    RowBox[{
    "taban_", ",", "plotpoints_", ",", "plotlines_", ",", "pointsize_", ",", 
     "linethickness_", ",", "showplots_"}], "]"}], ":=", 
   RowBox[{"plottabanpt2d", "[", 
    RowBox[{
    "taban", ",", "plotpoints", ",", "plotlines", ",", "pointsize", ",", 
     "linethickness", ",", "1", ",", "showplots"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plottabanpt2d", "[", 
    RowBox[{
    "taban_", ",", "plotpoints_", ",", "plotlines_", ",", "pointsize_", ",", 
     "linethickness_", ",", "plotsolids_", ",", "showplots_"}], "]"}], ":=", 
   RowBox[{"tabanpt2dgraph", "[", 
    RowBox[{"taban", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"plotlines", "\[Equal]", "0"}], ",", "0", ",", 
       "linethickness"}], "]"}], ",", "0", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"plotpoints", "\[Equal]", "0"}], ",", "0", ",", "pointsize"}], 
      "]"}], ",", "0", ",", "1", ",", "0", ",", "showplots"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tabanpt2dgraph", "[", 
    RowBox[{"taban_", ",", "size_"}], "]"}], ":=", 
   RowBox[{"tabanpt2dgraph", "[", 
    RowBox[{"taban", ",", "size", ",", "0", ",", 
     RowBox[{"size", " ", "20"}], ",", "0", ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tabanpt2dgraph", "[", "taban_", "]"}], ":=", 
   RowBox[{"tabanpt2dgraph", "[", "0.0008`", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tabanpt2dgraph", "[", 
    RowBox[{"taban_", ",", "linethickness_", ",", "linecolor_"}], "]"}], ":=",
    
   RowBox[{"tabanpt2dgraph", "[", 
    RowBox[{
    "taban", ",", "linethickness", ",", "linecolor", ",", "0", ",", "0", ",", 
     "0", ",", "0"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tabanpt2dgraph", "[", 
    RowBox[{
    "taban_", ",", "linethickness_", ",", "linecolor_", ",", "pointsize_", 
     ",", "pointcolor_"}], "]"}], ":=", 
   RowBox[{"tabanpt2dgraph", "[", 
    RowBox[{
    "taban", ",", "linethickness", ",", "linecolor", ",", "pointsize", ",", 
     "pointcolor", ",", "0", ",", "0"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tabanpt2dgraph", "[", 
    RowBox[{
    "taban_", ",", "linethickness_", ",", "linecolor_", ",", "pointsize_", 
     ",", "pointcolor_", ",", "plotsolid_", ",", "solidcolor_"}], "]"}], ":=",
    
   RowBox[{"tabanpt2dgraph", "[", 
    RowBox[{
    "taban", ",", "linethickness", ",", "linecolor", ",", "pointsize", ",", 
     "pointcolor", ",", "plotsolid", ",", "solidcolor", ",", "1"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tabanpt2dgraph", "[", 
    RowBox[{
    "taban_", ",", "linethickness_", ",", "linecolor_", ",", "pointsize_", 
     ",", "pointcolor_", ",", "plotsolid_", ",", "solidcolor_", ",", 
     "showplots_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "k", ",", "dim", ",", "nconstr", ",", "npoints", 
       ",", "npoints1", ",", "npoints2", ",", "parmin", ",", "parmax", ",", 
       "tabparam", ",", "tabobj", ",", "tabconstr", ",", "tabind", ",", 
       "tabfact", ",", "tabplotobjfact", ",", "tabplotconstrfact", ",", 
       "tabplotobjind", ",", "tabplotconstrind", ",", "joined1", ",", 
       "joined2"}], "}"}], ",", 
     RowBox[{
      RowBox[{"joined1", "=", "False"}], ";", 
      RowBox[{"joined2", "=", "True"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"plotpoints", "\[Equal]", "0"}], "||", 
         RowBox[{"!", "plotpoints"}]}], ",", 
        RowBox[{
         RowBox[{"joined1", "=", "True"}], ";"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"plotlines", "\[Equal]", "0"}], "||", 
         RowBox[{"!", "plotlines"}]}], ",", 
        RowBox[{
         RowBox[{"joined2", "=", "False"}], ";"}]}], "]"}], ";", 
      RowBox[{"tabparam", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"anptparam", "[", 
            RowBox[{"taban", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{
              "taban", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"tabobj", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"anptobj", "[", 
            RowBox[{"taban", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{
              "taban", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"tabconstr", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"anptconstr", "[", 
            RowBox[{"taban", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{
              "taban", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"tabind", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"anptind", "[", 
            RowBox[{"taban", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{
              "taban", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"tabfact", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"anptfact", "[", 
            RowBox[{"taban", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{
              "taban", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"dim", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"tabparam", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
      RowBox[{"nconstr", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"tabconstr", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
      RowBox[{"npoints1", "=", 
       RowBox[{"Length", "[", "tabtest", "]"}]}], ";", 
      RowBox[{"npoints2", "=", 
       RowBox[{"Length", "[", 
        RowBox[{
        "tabtest", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}]}], ";", 
      RowBox[{"npoints", "=", 
       RowBox[{"npoints1", " ", "npoints2"}]}], ";", 
      RowBox[{"tabplotobjfact", "=", 
       RowBox[{"gridgraph", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"tabfact", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j", ",", "1"}], "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"tabfact", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j", ",", "2"}], "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"tabobj", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{
                "taban", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}], ",", 
         "linethickness", ",", "linecolor", ",", "pointsize", ",", 
         "pointcolor", ",", "plotsolid", ",", "solidcolor"}], "]"}]}], ";", 
      RowBox[{"tabplotobjind", "=", 
       RowBox[{"gridgraph", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"tabind", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j", ",", "1"}], "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"tabind", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j", ",", "2"}], "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"tabobj", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{
                "taban", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}], ",", 
         "linethickness", ",", "linecolor", ",", "pointsize", ",", 
         "pointcolor", ",", "plotsolid", ",", "solidcolor"}], "]"}]}], ";", 
      RowBox[{"tabplotconstrfact", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"gridgraph", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tabfact", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"tabfact", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j", ",", "2"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"tabconstr", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j", ",", "k"}], 
                  "\[RightDoubleBracket]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{
                  "taban", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}], ",", 
           "linethickness", ",", "linecolor", ",", "pointsize", ",", 
           "pointcolor", ",", "plotsolid", ",", "solidcolor"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "nconstr"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"tabplotconstrind", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"gridgraph", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tabind", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"tabind", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j", ",", "2"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"tabconstr", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j", ",", "k"}], 
                  "\[RightDoubleBracket]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{
                  "taban", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "taban", "]"}]}], "}"}]}], "]"}], ",", 
           "linethickness", ",", "linecolor", ",", "pointsize", ",", 
           "pointcolor", ",", "plotsolid", ",", "solidcolor"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "nconstr"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"showplots", "||", 
         RowBox[{"showplots", "\[NotEqual]", "0"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<\\n\\ntabplotobjfact ([[1,1]]):\\nValues of the objective \
function plotted against line factors:\>\"", "]"}], " ", 
          RowBox[{"Show", "[", 
           RowBox[{"tabplotobjfact", ",", 
            RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"BoxRatios", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
            RowBox[{"Axes", "\[Rule]", "True"}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<lf1\>\"", ",", "\"\<lf2\>\"", ",", "\"\<f   \>\""}], 
              "}"}]}]}], "]"}]}], ";", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<\\n\\ntabplotconstrfact ([[1,2]]\\nValues of constraint \
functions plotted against line factors; color order for constraints is like \
green->cyan->blue->red:\>\"", "]"}], " ", 
          RowBox[{"Show", "[", 
           RowBox[{"tabplotconstrfact", ",", 
            RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"BoxRatios", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
            RowBox[{"Axes", "\[Rule]", "True"}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<lf1\>\"", ",", "\"\<lf2\>\"", ",", "\"\<c_i   \>\""}], 
              "}"}]}]}], "]"}]}], ";", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<\\n\\ntabplotobjind ([[2,1]])\\nValues of the objective \
function plotted against analysis sequential numbers:\>\"", "]"}], " ", 
          RowBox[{"Show", "[", 
           RowBox[{"tabplotobjind", ",", 
            RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"BoxRatios", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
            RowBox[{"Axes", "\[Rule]", "True"}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<i1\>\"", ",", "\"\<i2\>\"", ",", "\"\<f   \>\""}], 
              "}"}]}]}], "]"}]}], ";", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<\\n\\ntabplotconstrind ([[2,2]])\\nValues of constraint \
functions plotted against analysis sequential numbers; color order for \
constraints is like green->cyan->blue->red:\>\"", "]"}], " ", 
          RowBox[{"Show", "[", 
           RowBox[{"tabplotconstrind", ",", 
            RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"BoxRatios", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
            RowBox[{"Axes", "\[Rule]", "True"}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<i1\>\"", ",", "\"\<i2\>\"", ",", "\"\<c_i   \>\""}], 
              "}"}]}]}], "]"}]}]}]}], "]"}], ";", 
      RowBox[{
      "Print", "[", 
       "\"\<Returned: {\[IndentingNewLine]{tabplotobjfact, \
tabplotconstrfact},\[IndentingNewLine]{tabplotobjind, tabplotconstrind}\
\[IndentingNewLine]}\>\"", "]"}], ";", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"tabplotobjfact", ",", "tabplotconstrfact"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"tabplotobjind", ",", "tabplotconstrind"}], "}"}]}], "}"}], 
       "]"}], ";"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["Test of functions for manipulating tables of analyses:", "Subsection"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["\<\
Test: Function for calculating factors and intervals of a table with \
geometrically grown interval lengths:\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numintervals", "=", "50"}], ";", "\[IndentingNewLine]", 
    RowBox[{"intervalfactor", "=", "1.4"}], ";", "\[IndentingNewLine]", 
    RowBox[{"tableofintervalsandfactors", "=", 
     RowBox[{"tabexpfactint", "[", 
      RowBox[{"numintervals", ",", "intervalfactor"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<{last factor,first interval, last interval} = \>\"", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tabexpfactint", "[", 
          RowBox[{"numintervals", ",", "intervalfactor"}], "]"}], " ", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tabexpfactint", "[", 
          RowBox[{"numintervals", ",", "intervalfactor"}], "]"}], " ", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tabexpfactint", "[", 
          RowBox[{"numintervals", ",", "intervalfactor"}], "]"}], " ", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numintervals", "=", "5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"intervalfactor", "=", "1.2"}], ";", "\[IndentingNewLine]", 
    RowBox[{"tableofintervalsandfactors", "=", 
     RowBox[{"tabexpfactint", "[", 
      RowBox[{"numintervals", ",", "intervalfactor"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<{factors, intervals, sum of intervals:} = \>\"", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"tableofintervalsandfactors", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"tableofintervalsandfactors", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"tableofintervalsandfactors", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"tableofintervalsandfactors", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tabexpfactors", "[", 
    RowBox[{"2.6", ",", "1.2"}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tabexpfactorscent", "[", 
    RowBox[{"4.01", ",", "1.2"}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tabexpfactintcent", "[", 
    RowBox[{"4.01", ",", "1.2"}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell["\<\
Test of calculation of analysis points and tables of analysis points:\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"anfuncsimpconstr", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.11", ",", "2.22"}], "}"}], ",", "11", ",", "22", ",", "33", 
     ",", "44", ",", "\"\<1\>\""}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testpoint", "=", 
    RowBox[{"calcanpt", "[", 
     RowBox[{"anfuncsimpconstr", ",", 
      RowBox[{"{", 
       RowBox[{"1.11", ",", "2.22"}], "}"}], ",", "11", ",", "22", ",", "33", 
      ",", "44", ",", "\"\<1\>\""}], "]"}]}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Point", " ", "expanded", " ", "with", " ", "table", " ", "indices", " ", 
     "and", " ", "factors"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"testpointexpanded", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"testpoint", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6"}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.6"}], "}"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"anptparam", "[", "testpointexpanded", "]"}], ",", 
      RowBox[{"anptres", "[", "testpointexpanded", "]"}], ",", 
      RowBox[{"anptarg", "[", "testpointexpanded", "]"}], ",", 
      RowBox[{"anptind", "[", "testpointexpanded", "]"}], ",", 
      RowBox[{"anptfact", "[", "testpointexpanded", "]"}]}], "}"}], "  ", 
    "\[Equal]", " ", "testpointexpanded"}], "\[IndentingNewLine]", ",", ","}],
   "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"anptparam", "[", "testpointexpanded", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"anptparami", "[", 
      RowBox[{"testpointexpanded", ",", "2"}], "]"}]}], "\[IndentingNewLine]",
     "}"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"anptcalcobj", "[", "testpointexpanded", "]"}], ",", 
     RowBox[{"anptobj", "[", "testpointexpanded", "]"}], ",", 
     RowBox[{"anptcalcconstr", "[", "testpointexpanded", "]"}], ",", 
     RowBox[{"anptconstr", "[", "testpointexpanded", "]"}], ",", 
     RowBox[{"anptcalcgradobj", "[", "testpointexpanded", "]"}], ",", 
     RowBox[{"anptgradobj", "[", "testpointexpanded", "]"}], ",", 
     RowBox[{"anptcalcgradconstr", "[", "testpointexpanded", "]"}], ",", 
     RowBox[{"anptgradconstr", "[", "testpointexpanded", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"anptret", "[", "testpointexpanded", "]"}]}], "}"}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"anptres", "[", "testpointexpanded", "]"}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"anptargcalcobj", "[", "testpointexpanded", "]"}], ",", 
     RowBox[{"anptargcalcconstr", "[", "testpointexpanded", "]"}], ",", 
     RowBox[{"anptcalcgradobj", "[", "testpointexpanded", "]"}], ",", 
     RowBox[{"anptcalcgradconstr", "[", "testpointexpanded", "]"}], ",", 
     RowBox[{"anptargspec", "[", "testpointexpanded", "]"}]}], "}"}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"anptarg", "[", "testpointexpanded", "]"}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"anptparam", "[", "testpoint", "]"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"anptparami", "[", 
    RowBox[{"testpoint", ",", "3"}], "]"}], "\[IndentingNewLine]", ",", ","}],
   "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"anptres", "[", "testpoint", "]"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"anptobj", "[", "testpoint", "]"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tabanpt1d", "[", 
    RowBox[{"anfuncsimpconstr", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.5", ",", "1"}], "}"}], ",", "1", ",", "1", ",", 
     "1", ",", "0", ",", "\"\<1\>\""}], "]"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"convtabanpt1dpar", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tabanpt1d", "[", 
      RowBox[{"anfuncsimpconstr", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5", ",", "1"}], "}"}], ",", "1", ",", "1", ",", 
       "1", ",", "0", ",", "\"\<1\>\""}], "]"}], ",", "\[IndentingNewLine]", 
     "3"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tabanpt1d", "[", 
    RowBox[{"anfuncsimpconstr", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.5", ",", "1"}], "}"}], ",", "1", ",", "0", ",", 
     "1", ",", "0", ",", "\"\<1\>\"", ",", " ", "1"}], "]"}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tabanpt1d", "[", 
    RowBox[{"anfuncsimpconstr", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.5", ",", "1"}], "}"}], ",", "1", ",", "0", ",", 
     "1", ",", "0", ",", "\"\<1\>\""}], "]"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tabanpt2d", "[", 
    RowBox[{"anfuncsimpconstr", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.5", ",", "1"}], "}"}], ",", "1", ",", "0", ",", 
     "1", ",", "0", ",", "\"\<1\>\"", "  ", ",", "0"}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "additional", " ", "argument", " ", "to", " ", "print", " ", "partial", 
      " ", "results"}], " ", "*)"}], " ", "]"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell["Test of tabanptrand:", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"random", " ", "table", " ", 
     RowBox[{"arguments", ":"}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testnuman", "=", "4"}], ";", "\[IndentingNewLine]", 
    RowBox[{"testp1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"testp2", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0.5"}], "}"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"t1", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "range", " ", "specification", " ", "arguments", " ", "for", " ", 
      "centered", " ", 
      RowBox[{"table", ":"}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
    RowBox[{"testp0", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"testdp", "=", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", "2"}], "}"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"0", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"testtabanpt", "=", 
        RowBox[{"tabanptrand", "[", 
         RowBox[{
         "testnuman", ",", "anfuncsimp", ",", "testp1", ",", "testp2", ",", 
          "\[IndentingNewLine]", "1", ",", "0", ",", "1", ",", "0", ",", " ", 
          
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"calc", ".", " ", "objective"}], " ", "and", " ", "its", 
            " ", "gradients"}], " ", "*)"}], " ", "\"\<1\>\"", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"fine", " ", "analysis"}], " ", "*)"}], ",", " ", "0"}], 
         " ", 
         RowBox[{"(*", " ", 
          RowBox[{"print", " ", "intermesiate", " ", "results"}], " ", "*)"}],
          "]"}]}], " ", ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"0", "\[NotEqual]", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<tabanptrandcent: \>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"testtabanpt", "=", 
        RowBox[{"tabanptrandcent", "[", 
         RowBox[{
         "testnuman", ",", "anfuncsimp", ",", "testp0", ",", "testdp", ",", 
          "\[IndentingNewLine]", "1", ",", "0", ",", "1", ",", "0", ",", " ", 
          
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"calc", ".", " ", "objective"}], " ", "and", " ", "its", 
            " ", "gradients"}], " ", "*)"}], " ", "\"\<1\>\"", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"fine", " ", "analysis"}], " ", "*)"}], ",", " ", "0"}], 
         " ", 
         RowBox[{"(*", " ", 
          RowBox[{"print", " ", "intermesiate", " ", "results"}], " ", "*)"}],
          "]"}]}], " ", ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"t2", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Random table finished in \>\"", ",", 
      RowBox[{"t2", "-", "t1"}], ",", "\"\< s (CPU).\>\""}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"testp0", ",", "testdp"}], "}"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Graphs & data:", "Text"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Length", "[", "testtabanpt", "]"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testtabanpt", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testtabsamp", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"testtabanpt", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "testtabanpt", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testtabval", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"testtabanpt", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "testtabanpt", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testtabanpt", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testtabpoints", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"testtabanpt", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"testtabanpt", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "testtabanpt", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"testplotsamp", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"pointsgraph", "[", 
       RowBox[{"testtabsamp", ",", "0.02", ",", "0.00001", ",", "1"}], "]"}], 
      ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"Plot", " ", "points", " ", "with", " ", "function", " ", 
       RowBox[{"values", ":", " ", "\[IndentingNewLine]", "plotpoints"}]}], 
      "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"pointsgraph", "[", 
         RowBox[{"testtabpoints", ",", "0.02", ",", "0.000", ",", "1"}], 
         "]"}], ",", 
        RowBox[{"BoxRatios", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell["Test of plotting tables of analyses:", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData["plottabanpt1d"], "Input"],

Cell[BoxData["plottabanpt1d"], "Output",
 CellChangeTimes->{3.410762123515625*^9, 3.410762278421875*^9, 
  3.410762313625*^9, 3.410762442734375*^9, 3.410762478609375*^9, 
  3.412430035078125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting 1D tables", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numpoints", "=", "10"}], ";", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Number", " ", "of", " ", "points", " ", "in", " ", "the", " ", 
      "table"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"intfactor", "=", "1.4"}], ";", "    ", 
    RowBox[{"(*", " ", 
     RowBox[{"Factor", " ", "of", " ", "interval", " ", "growth"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"sizefactor", "=", "1"}], ";", "    ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Shrinkage", "/", "expansion"}], " ", "of", " ", "tabulated", 
      " ", "interval"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Interval", " ", "edge", " ", 
      RowBox[{"points", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"p0", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"p1", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"tabtest", "=", 
     RowBox[{"tabanpt1d", "[", 
      RowBox[{
      "anfuncsimpconstr", ",", "p0", ",", "p1", ",", "\[IndentingNewLine]", 
       RowBox[{"sizefactor", "*", 
        RowBox[{"tabexpfactors", "[", 
         RowBox[{"numpoints", ",", "intfactor"}], "]"}]}], ",", 
       "\[IndentingNewLine]", "1", ",", "1", ",", "1", ",", "1", ",", " ", 
       "\"\<1\>\"", "  ", 
       RowBox[{"(*", " ", "cd", " ", "*)"}], ",", " ", "0"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"print", " ", "intermesiate", " ", "results"}], " ", "*)"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tabtest", ";"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Show", " ", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"plottabanpt1d", "[", 
       RowBox[{
       "tabtest", ",", "1", ",", "1", ",", "0.02", ",", "0.007", ",", "0"}], 
       " ", 
       RowBox[{"(*", " ", 
        RowBox[{"show", " ", "returned", " ", "plots"}], " ", "*)"}], " ", 
       "]"}], "  ", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotres", "=", 
     RowBox[{"plottabanpt1d", "[", 
      RowBox[{
      "tabtest", ",", "1", ",", "1", ",", "0.02", ",", "0.007", ",", "1"}], 
      RowBox[{"(*", " ", 
       RowBox[{"show", " ", "returned", " ", "plots"}], " ", "*)"}], " ", 
      "]"}]}], "  ", ";"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotres", "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "3.", " ", "constraint", " ", "plotted", " ", "against", " ", "line", " ",
      
     RowBox[{"factors", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"plotres", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", 
     RowBox[{",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thickness", "[", "0.1", "]"}], "}"}]}]}], 
     "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["Plotting 2D tables:", "Subsubsection"],

Cell["\<\
Instruction:
  uncomment (0\[Rule]1) before running the tests. Commet back when finished!\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"numpoints", "=", "5"}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Number", " ", "of", " ", "points", " ", "in", " ", "the", " ", 
       "table"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"intfactor", "=", "2.2"}], ";", "    ", 
     RowBox[{"(*", " ", 
      RowBox[{"Factor", " ", "of", " ", "interval", " ", "growth"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"sizefactor", "=", "1"}], ";", "    ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Shrinkage", "/", "expansion"}], " ", "of", " ", "tabulated", 
       " ", "interval"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Interval", " ", "edge", " ", 
       RowBox[{"points", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"p0", "=", 
      RowBox[{"{", 
       RowBox[{"5", ",", "5", ",", "5"}], "}"}]}], ";", "\[IndentingNewLine]",
      
     RowBox[{"p1", "=", 
      RowBox[{"{", 
       RowBox[{"10", ",", "5", ",", "5"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{"{", 
       RowBox[{"5", ",", "10", ",", "5"}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"tabtest", "=", 
      RowBox[{"tabanpt2d", "[", 
       RowBox[{
       "anfuncsimpconstr", ",", "p0", ",", "p1", ",", "p2", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"sizefactor", "*", 
         RowBox[{"tabexpfactors", "[", 
          RowBox[{
           RowBox[{"numpoints", "-", "1"}], ",", "intfactor"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"sizefactor", "*", 
         RowBox[{"tabexpfactors", "[", 
          RowBox[{"numpoints", ",", "intfactor"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "1", ",", "1", ",", "1", ",", "1", ",", " ", 
        "\"\<1\>\"", "  ", 
        RowBox[{"(*", " ", "cd", " ", "*)"}], ",", " ", "0"}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{"print", " ", "intermesiate", " ", "results"}], " ", "*)"}], 
       "]"}]}], "   ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"testgraphs", "=", 
      RowBox[{"plottabanpt2d", "[", 
       RowBox[{"tabtest", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{"taban", " ", "-", " ", 
          RowBox[{"analysis", " ", "table"}]}], " ", "*)"}], " ", ",", "1", 
        " ", 
        RowBox[{"(*", " ", "plotpoints", " ", "*)"}], ",", " ", "1", " ", 
        RowBox[{"(*", " ", "plotlines", " ", "*)"}], " ", ",", "0.02", " ", 
        RowBox[{"(*", " ", "pointsize", " ", "*)"}], ",", " ", "0.01", " ", 
        RowBox[{"(*", " ", "linethickness", " ", "*)"}], " ", ",", "1"}], " ",
        
       RowBox[{"(*", " ", "showplots", " ", "*)"}], " ", "]"}]}]}], 
    "\[IndentingNewLine]", ",", ","}], "]"}], ";"}]], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["Extract ndividual graphs:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"testgraphs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", "  ", "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<lf1\>\"", ",", "\"\<lf2\>\"", ",", "\"\<f   \>\""}], 
        "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
    ","}], "]"}], "\[IndentingNewLine]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"testgraphs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BoxRatios", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", "  ", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<lf1\>\"", ",", "\"\<lf2\>\"", ",", "\"\<f   \>\""}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"testgraphs", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", " ", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", "  ", "\[IndentingNewLine]", 
       
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<lf1\>\"", ",", "\"\<lf2\>\"", ",", "\"\<f   \>\""}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"testgraphs", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", " ", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", "  ", "\[IndentingNewLine]", 
       
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<lf1\>\"", ",", "\"\<lf2\>\"", ",", "\"\<f   \>\""}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"testgraphs", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", " ", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", "  ", "\[IndentingNewLine]", 
       
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<lf1\>\"", ",", "\"\<lf2\>\"", ",", "\"\<f   \>\""}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "}"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"testgraphs", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", " ", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", "  ", "\[IndentingNewLine]", 
       
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<lf1\>\"", ",", "\"\<lf2\>\"", ",", "\"\<f   \>\""}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"testgraphs", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", " ", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", "  ", "\[IndentingNewLine]", 
       
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<lf1\>\"", ",", "\"\<lf2\>\"", ",", "\"\<f   \>\""}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"testgraphs", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", " ", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", "  ", "\[IndentingNewLine]", 
       
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<lf1\>\"", ",", "\"\<lf2\>\"", ",", "\"\<f   \>\""}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "}"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5718385238205433`*^9, 3.5718385241455617`*^9}}],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Additional utilities ",
 StyleBox["(unfinished or seldomly used)",
  FontSize->16]
}], "Title"],

Cell[CellGroupData[{

Cell["Data exchange through files", "Subtitle"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["\<\
Format conversion for Input/output of data structures via strings\
\>", "Subsubtitle"],

Cell[CellGroupData[{

Cell["\<\
Function outputform for outputting expressions to files or for sending them \
to C programs for parsing:\
\>", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"outputform", "[", "expr_", "]"}], ":=", 
    RowBox[{"ToString", "[", 
     RowBox[{"outputform1", "[", "expr", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"outputform1", "[", "expr_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "i", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"$A", " ", "Igor", " ", "mar06"}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "expr", "]"}], "\[Equal]", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"CForm", "[", "expr", "]"}], "]"}]}], "\[IndentingNewLine]",
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"outputform1", "[", " ", 
          RowBox[{"expr", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Function strmathform changes the numbers in e notation (e.g. 1.2e-10) to \
the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " form (e.g. 1.2*10^-10) in a text string:"
}], "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"strmathform", "[", "strarg_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "positions", ",", "str", ",", "i", ",", "pos", ",", "ch1", ",", 
        "ch2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"$A", " ", "Igor", " ", "apr06"}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"str", "=", "strarg"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "find", " ", "potential", " ", "exponents", " ", "in", " ", "e"}], 
         "-", " ", 
         RowBox[{"notation", " ", "for", " ", "real", " ", 
          RowBox[{"numbers", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"positions", "=", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"str", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<e\>\"", ",", "\"\<E\>\""}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"positions", "=", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Reverse", "[", "positions", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<strmathform: str= <\>\"", ",", "str", ",", 
           "\"\<>, exp. positions: \>\"", ",", "positions"}], "]"}], ";"}], 
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Eliminate", " ", "those", " ", "positions", " ", "that", " ", "do", 
          " ", "not", " ", "belong", " ", "to", " ", "e"}], "-", 
         RowBox[{"notations", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"Length", "[", "positions", "]"}]}], ",", 
         RowBox[{"i", "\[GreaterEqual]", "1"}], ",", 
         RowBox[{"i", "=", 
          RowBox[{"i", "-", "1"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pos", "=", 
           RowBox[{"positions", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"pos", ">", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{"ch1", "=", 
             RowBox[{"StringTake", "[", 
              RowBox[{"str", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"pos", "-", "1"}], ",", 
                 RowBox[{"pos", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ch1", "=", "\"\<!\>\""}], ";"}]}], "  ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "eliminate", " ", "the", " ", "current",
              " ", "position"}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"pos", "<", 
             RowBox[{"StringLength", "[", "str", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ch2", "=", 
             RowBox[{"StringTake", "[", 
              RowBox[{"str", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"pos", "+", "1"}], ",", 
                 RowBox[{"pos", "+", "1"}]}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ch2", "=", "\"\<!\>\""}], ";"}]}], "   ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "will", " ", "eliminate", " ", "the", " ", "current",
              " ", "position"}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Deciding on elimination of position \>\"", ",", "i", ",", 
              "\"\< (\>\"", ",", 
              RowBox[{"positions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<), ch1= \>\"", ",", 
              "ch1", ",", "\"\<, ch2= \>\"", ",", "ch2"}], "]"}], ";"}], 
           "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"ch1", "!=", "\"\<.\>\""}], " ", "&&", "  ", 
               RowBox[{"\[Not]", 
                RowBox[{"DigitQ", "[", "ch1", "]"}]}]}], " ", "||", " ", 
              RowBox[{
               RowBox[{"ch2", "\[NotEqual]", "\"\<+\>\""}], " ", "&&", " ", 
               RowBox[{"ch2", "!=", "\"\<-\>\""}], " ", "&&", " ", 
               RowBox[{"\[Not]", 
                RowBox[{"DigitQ", "[", "ch2", "]"}]}]}]}], ")"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"positions", "=", 
              RowBox[{"Delete", "[", 
               RowBox[{"positions", ",", "i"}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Exp. positions after elimination of false positions: \>\"", 
           ",", "positions"}], "]"}], ";"}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "positions", "]"}], ">", "0"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"str", "=", 
            RowBox[{"StringReplacePart", "[", 
             RowBox[{"str", ",", "\"\<*10^\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"positions", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   RowBox[{"positions", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"Length", "[", "positions", "]"}]}], "}"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"str", "=", 
          RowBox[{"StringReplacePart", "[", 
           RowBox[{"str", ",", "\"\<*10^\>\"", ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"positions", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"positions", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "positions", "]"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}],
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "str", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",\

 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests", "Subsection"],

Cell[CellGroupData[{

Cell["strmathform", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"str", "=", "\"\<{1.2e-10, 15, 1e-20, \\\"teac\\\",1/3e25}\>\""}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"mathstr", "=", 
    RowBox[{"strmathform", "[", "str", "]"}]}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"expr", "=", 
    RowBox[{"ToExpression", "[", "mathstr", "]"}]}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullForm", "[", " ", 
    RowBox[{"expr", "[", 
     RowBox[{"[", "4", "]"}], "]"}], " ", "]"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["outputform", "Subsubsection"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"expr", "=", 
    RowBox[{"{", 
     RowBox[{"25", ",", 
      RowBox[{"1", "/", "3"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1.2", "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "10"}]}]}], ",", " ", "15", ",", 
        RowBox[{"1", "/", "10"}]}], "}"}], ",", " ", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "20"}]}]}], ",", " ", "\"\<teac\>\""}], "}"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"outputform", "[", "expr", "]"}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"outputform", "[", 
    RowBox[{"N", "[", "expr", "]"}], "]"}], "\[IndentingNewLine]", ",", ","}],
   "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Whole export/import cycle", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"form", "=", "\"\<Lines\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"form", "=", "\"\<Table\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"form", "=", "\"\<List\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"form", "=", "\"\<CSV\>\""}], ";"}], "\[IndentingNewLine]", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"form", "=", "\"\<Text\>\""}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"expr", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.1", ",", "1.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.1", ",", "2.2", ",", "2.3"}], "}"}], ",", "3"}], " ", 
         "}"}], " ", ",", 
        RowBox[{"10", "^", 
         RowBox[{"-", "16"}]}], ",", 
        RowBox[{"5.5", "*", 
         RowBox[{"10", "^", "22"}]}], ",", "\"\<xy\>\"", ",", "bcd"}], 
       "}"}]}]}], "\[IndentingNewLine]", ",", ","}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"outstr", "=", " ", 
    RowBox[{"outputform", "[", "expr", "]"}]}], "\[IndentingNewLine]", ",", 
   ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"instr", "=", 
    RowBox[{"ImportString", "[", 
     RowBox[{"outstr", ",", "\"\<Text\>\""}], "]"}]}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Head", "[", "impstr", "]"}], ",", 
     RowBox[{"Length", "[", "impstr", "]"}]}], "}"}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"expr1", "=", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"strmathform", "[", "impstr", "]"}], "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"expr", "\[Equal]", "expr1"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CharacterRange", "[", 
    RowBox[{"\"\<C\>\"", ",", "\"\<f\>\""}], "]"}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Output to files for reading in C", "Subsubtitle"],

Cell[CellGroupData[{

Cell["Output & input of tables:   - development stage", "Subsection"],

Cell[TextData[{
 "exporttable ",
 StyleBox["[ filename, tab ] ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "\nimporttable ",
 StyleBox["[ filename ]",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "\n",
 StyleBox["exporttable writes 1D or 2D table ",
  FontWeight->"Plain"],
 StyleBox["tab",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" to file named ",
  FontWeight->"Plain"],
 StyleBox["filename",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" (existing files are overwritten), numbers are separated by commas \
(lines of matrices by new lines), numbers are written in E notation.\n\
importtable imports a table in this format from the file names ",
  FontWeight->"Plain"],
 StyleBox["filename.",
  FontWeight->"Plain",
  FontSlant->"Italic"]
}], "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"exporttable", "[", 
    RowBox[{"filename_", ",", "tab_"}], "]"}], ":=", 
   RowBox[{"Export", "[", 
    RowBox[{"filename", ",", 
     RowBox[{"N", "[", "tab", "]"}], ",", "\"\<CSV\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"importtable", "[", "filename_", "]"}], ":=", 
   RowBox[{"Import", "[", 
    RowBox[{"filename", ",", "\"\<CSV\>\""}], "]"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell["Test of exporting/importing a table:", "Subsubsection"],

Cell[CellGroupData[{

Cell["2d table, 3x2", "Text"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.1", ",", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", "2.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "3"}], ",", 
        RowBox[{"4.55", "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "26"}]}]}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exporttabletofile", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "tab"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "\"\<Text\>\""}], "]"}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Show", " ", "contents", " ", "of", " ", "the", " ", "file"}], 
    " ", "*)"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab1", "=", 
    RowBox[{"importtable", "[", "\"\<test.out\>\"", "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab1", "\[Equal]", "tab"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2d table, different lengths of lines", "Text"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.1", ",", "1.2", ",", "1.3", ",", "1.4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", "2.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "3"}], ",", 
        RowBox[{"4.55", "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "26"}]}]}]}], "}"}], ",", 
      RowBox[{"{", "5.5", "}"}]}], "}"}]}], "\[IndentingNewLine]", ",", ","}],
   "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exporttabletofile", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "tab"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "\"\<Text\>\""}], "]"}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Show", " ", "contents", " ", "of", " ", "the", " ", "file"}], 
    " ", "*)"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab1", "=", 
    RowBox[{"importtable", "[", "\"\<test.out\>\"", "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab1", "\[Equal]", "tab"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1d table, different lengths of lines", "Text"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", 
      RowBox[{"1", "/", "3"}], ",", 
      RowBox[{"4.55", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "26"}]}]}], ",", "5.5"}], "}"}]}], "\[IndentingNewLine]",
    ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exporttabletofile", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "tab"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "\"\<Text\>\""}], "]"}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Show", " ", "contents", " ", "of", " ", "the", " ", "file"}], 
    " ", "*)"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab1", "=", 
    RowBox[{"importtable", "[", "\"\<test.out\>\"", "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab1", "\[Equal]", "tab"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flatten", "[", "tab1", "]"}], "\[Equal]", "tab"}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deeper Tables", "Text"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.1", ",", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", "2.2", ",", 
        RowBox[{"{", 
         RowBox[{"2.31", ",", "2.32"}], "}"}], ",", "2.4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.1", ",", "3.2"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exporttabletofile", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "tab"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "\"\<Text\>\""}], "]"}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Show", " ", "contents", " ", "of", " ", "the", " ", "file"}], 
    " ", "*)"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab1", "=", 
    RowBox[{"importtable", "[", "\"\<test.out\>\"", "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab1", "\[Equal]", "tab"}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tab1", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "3"}], "]"}], "]"}], "\[IndentingNewLine]", ",", ","}],
   "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullForm", "[", 
    RowBox[{"tab1", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "3"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Experimentation for outputting tables",
 StyleBox[" (for development stage)",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[CellGroupData[{

Cell["Write a table & check file contents -   Save", "Text"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"table", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.1", ",", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", "2.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.1", ",", "3.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "3"}], ",", 
        RowBox[{"2.44", "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "20"}]}]}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Save", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "table"}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "\"\<Text\>\""}], "]"}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Show", " ", "contents", " ", "of", " ", "the", " ", "file"}], 
    " ", "*)"}], "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Write a table & check file contents -   Put", "Text"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"table", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.1", ",", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", "2.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.1", ",", "3.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "3"}], ",", 
        RowBox[{"2.44", "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "20"}]}]}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"table1", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Put", "[", 
      RowBox[{"table1", ",", "table", ",", "\"\<test.out\>\""}], "]"}], ";"}],
     "\[IndentingNewLine]", ",", ","}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<test.out\>\"", ",", "\"\<Text\>\""}], "]"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Show", " ", "contents", " ", "of", " ", "the", " ", "file"}], 
    " ", "*)"}], "\[IndentingNewLine]", ",", ","}], "]"}]}], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Write a table & check file contents -   Export", "Text"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"table", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.1", ",", "1.2", ",", "111", ",", "222", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", "2.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.1", ",", "3.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "3"}], ",", 
        RowBox[{"2.44", "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "20"}]}]}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
   ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"table1", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"tablenum", "=", 
    RowBox[{"N", "[", "table", "]"}]}], "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"form", "=", "\"\<Text\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"form", "=", "\"\<List\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"form", "=", "\"\<Lines\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"form", "=", "\"\<Table\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"form", "=", "\"\<CSV\>\""}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "table", ",", "form"}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "\"\<Text\>\""}], "]"}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Show", " ", "contents", " ", "of", " ", "the", " ", "file"}], 
    " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "tablenum", ",", "form"}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "\"\<Text\>\""}], "]"}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Show", " ", "contents", " ", "of", " ", "the", " ", "file"}], 
    " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", ","}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"tabin", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<test.out\>\"", ",", "\"\<CSV\>\""}], "]"}]}], 
   "\[IndentingNewLine]", ",", ","}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"testmode", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullForm", "[", "tabin", "]"}], "\[IndentingNewLine]", ",", ","}],
   "]"}]], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Storing data for retrieval in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " "
}], "Subsection"],

Cell["\<\
This demonstrate how data from Mathematica can be stored in files such that \
it is easily read in another mathematica sessions.\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "SetDirectory", "[", 
     "\"\<C:/users/igor/doc/pr/enlub/work/SRT_identification_2006-01-20/\
StripReduction/\>\"", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Directory", "[", "]"}]}]], "Input"],

Cell[BoxData["\<\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\5.2\"\>"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"expr1", "=", 
   RowBox[{"{", 
    RowBox[{"1.0", ",", 
     RowBox[{"{", 
      RowBox[{"2.1", ",", "2.3", ",", 
       RowBox[{"{", "2.41", "}"}]}], "}"}], ",", "3.1", ",", 
     RowBox[{"1", "/", "3"}], ",", "\"\<Text\>\"", ",", 
     RowBox[{"6.02", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "23"}]}]}], ",", 
     RowBox[{"1", "/", "1000"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"expr2", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "expr1"}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"{", 
    RowBox[{"2.1`", ",", "2.3`", ",", 
     RowBox[{"{", "2.41`", "}"}]}], "}"}], ",", "3.1`", ",", 
   FractionBox["1", "3"], ",", "\<\"Text\"\>", ",", "6.02`*^-23", ",", 
   FractionBox["1", "1000"]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Writing expressions (& values) in standard form to a file:\nWarning: \n",
 StyleBox["number notation is in ",
  FontWeight->"Plain"],
 StyleBox["Mathematica",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" form. To convert to C form, import expression to ",
  FontWeight->"Plain"],
 StyleBox["Mathematica ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["(assign to a variable), convert to suitable string form, and write \
back to a file. \nNote: Use of N[] for converting to approximate decimal \
numbers is not necessary since numbers will anyway be in ",
  FontWeight->"Plain"],
 StyleBox["Mathematica",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" format",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Write", " ", "standard", " ", "representation", " ", "of", " ", "expr1", 
     " ", "to", " ", 
     RowBox[{"test", ".", "out"}]}], ",", " ", 
    RowBox[{"overwrite", " ", "file"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"expr1", ">>", "\"\<test.out\>\""}], ";"}], "  ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Append", " ", "standard", " ", "representation", " ", "of", " ", "expr1",
      " ", "to", " ", "file", " ", 
     RowBox[{"test", ".", 
      RowBox[{"out", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"N", "[", "expr2", "]"}], ">>>", "\"\<test.out\>\""}], " ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"!!", "\"\<test.out\>\""}]}]}]], "Input"],

Cell["\<\
{1., {2.1, 2.3, {2.41}}, 3.1, 1/3, \"Text\", 6.02*^-23, 1/1000}
{1., 2., 3.}\
\>", "Print"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use stdout for cell output:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Write", " ", "standard", " ", "representation", " ", "of", " ", "expr1", 
     " ", "to", " ", 
     RowBox[{"test", ".", "out"}]}], ",", " ", 
    RowBox[{"overwrite", " ", "file"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"expr1", ">>", "\"\<stdout\>\""}], ";"}], "  ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Append", " ", "standard", " ", "representation", " ", "of", " ", "expr1",
      " ", "to", " ", "file", " ", 
     RowBox[{"test", ".", 
      RowBox[{"out", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"expr2", ">>", "\"\<stdout\>\""}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"{", 
    RowBox[{"2.1`", ",", "2.3`", ",", 
     RowBox[{"{", "2.41`", "}"}]}], "}"}], ",", "3.1`", ",", 
   FractionBox["1", "3"], ",", "\<\"Text\"\>", ",", "6.02`*^-23", ",", 
   FractionBox["1", "1000"]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Print"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Saving definitions of variable or function definitions in standard form in \
a file:\n",
 "Warning:\n",
 StyleBox["Number notation is in ",
  FontWeight->"Plain"],
 StyleBox["Mathematica",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" form. To convert to C form, import expression to ",
  FontWeight->"Plain"],
 StyleBox["Mathematica ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["(assign to a variable), convert to suitable string form, and write \
back to a file. ",
  FontWeight->"Plain"],
 "\nNotes \nSave appends to a file.\nFor restoring definitions",
 StyleBox[", simply read in the file by using  << \"filename\"",
  FontWeight->"Plain"]
}], "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\"\<Definitions:\>\"", ">>", "test.out"}], ";", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"clears", " ", "contents", " ", "of", " ", "the", " ", "file"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<test.out\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"expr1", ",", "expr2"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"!!", "\"\<test.out\>\""}]], "Input"],

Cell["\<\
\"Definitions:\"
expr1 = {1., {2.1, 2.3, {2.41}}, 3.1, 1/3, \"Text\", 6.02*^-23, 1/1000}
 
expr2 = {1, 2, 3}\
\>", "Print"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Restoring variable and function definitions saved to a file:", \
"Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"expr1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expr2", "=", 
   RowBox[{"{", "}"}]}], 
  ";"}], "\[IndentingNewLine]", "expr1", "\[IndentingNewLine]", "expr2", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", " ", "\"\<test.out\>\""}], " ", 
  ";"}], "\[IndentingNewLine]", "expr1", "\[IndentingNewLine]", "expr2"}], \
"Input"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"{", 
    RowBox[{"2.1`", ",", "2.3`", ",", 
     RowBox[{"{", "2.41`", "}"}]}], "}"}], ",", "3.1`", ",", 
   FractionBox["1", "3"], ",", "\<\"Text\"\>", ",", "6.02`*^-23", ",", 
   FractionBox["1", "1000"]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"]
}, Closed]]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["Export from Mathematica:", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exprvalue", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.1", ",", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", "2.2", ",", "2.3"}], "}"}], ",", "3.0"}], " ", 
     "}"}], " ", ",", 
    RowBox[{"10", "^", 
     RowBox[{"-", "16"}]}], ",", 
    RowBox[{"5.5", "*", 
     RowBox[{"10", "^", "22"}]}], ",", "\"\<xy\>\""}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.1`", ",", "1.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.1`", ",", "2.2`", ",", "2.3`"}], "}"}], ",", "3.`"}], "}"}], 
   ",", 
   FractionBox["1", "10000000000000000"], ",", "5.5`*^22", 
   ",", "\<\"xy\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "exprvalue", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.1`", ",", "1.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.1`", ",", "2.2`", ",", "2.3`"}], "}"}], ",", "3.`"}], "}"}], 
   ",", "1.`*^-16", ",", "5.5`*^22", ",", "\<\"xy\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CForm", "[", "exprvalue", "]"}], "  ", "/.", "  ", 
  RowBox[{
   RowBox[{"List", 
    RowBox[{"(", "x_", ")"}]}], "->", 
   RowBox[{"{", "x", "}"}]}]}]], "Input"],

Cell["\<\
List(List(List(1.1,1.2),List(2.1,2.2,2.3),3.),1.e-16,5.5e22,\"xy\")\
\>", "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Import to Mathematica:", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exprstr", "=", 
  "\"\<{{ {1.1,1.2},{2.1,2.2,2.3},3.0 } ,1e-16,\\\"xy\\\"}\>\""}]], "Input"],

Cell[BoxData["\<\"{{ {1.1,1.2},{2.1,2.2,2.3},3.0 } ,1e-16,\\\"xy\\\"}\"\>"], \
"Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exprstr", "=", "\"\<{1e-22}\>\""}]], "Input"],

Cell[BoxData["\<\"{1e-22}\"\>"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ToExpression ne dela v redu:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"exprstr", ",", "InputForm"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "22"}], "+", "e"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", "\"\<List\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"expr", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"exprstr", ",", "form", ",", 
    RowBox[{"ConversionOptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ListSeparators\>\"", "\[Rule]", 
       RowBox[{"{", "\"\<,\>\"", "}"}]}], "}"}]}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", "\<\"{1e-22}\"\>", "}"}]], "Output"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"[", "0", "]"}], "]"}]], "Input"],

Cell[BoxData["List"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"expr", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "0"}], "]"}], "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"{1e-22}\"\>", ",", "String"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], ",", 
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "0"}], "]"}], "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"{1e-22}\"\>", ",", "String"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", "\"\<Table\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"expr", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"exprstr", ",", "form", ",", 
    RowBox[{"ConversionOptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ListSeparators\>\"", "\[Rule]", 
       RowBox[{"{", "\"\<,\>\"", "}"}]}], "}"}]}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "\<\"{1e-22}\"\>", "}"}], "}"}]], "Output"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"[", "0", "]"}], "]"}]], "Input"],

Cell[BoxData["List"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"expr", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "0"}], "]"}], "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"{1e-22}\"\>", "}"}], ",", "List"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], ",", 
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "0"}], "]"}], "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"{1e-22}\"\>", "}"}], ",", "List"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", "\"\<Lines\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"expr", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"exprstr", ",", "form", ",", 
    RowBox[{"ConversionOptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ListSeparators\>\"", "\[Rule]", 
       RowBox[{"{", "\"\<,\>\"", "}"}]}], "}"}]}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", "\<\"{1e-22}\"\>", "}"}]], "Output"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"expr", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "0"}], "]"}], "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"{1e-22}\"\>", ",", "String"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], ",", 
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "0"}], "]"}], "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"{1e-22}\"\>", ",", "String"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exprstr", "=", "\"\<1.22e-25\>\""}]], "Input"],

Cell[BoxData["\<\"1.22e-25\"\>"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", "\"\<CSV\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"expr", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"exprstr", ",", "form"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1.22`*^-25", "}"}], "}"}]], "Output"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"expr", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "0"}], "]"}], "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1.22`*^-25", "}"}], ",", "List"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], ",", 
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "0"}], "]"}], "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1.22`*^-25", "}"}], ",", "List"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "0"}], "]"}], "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.22`*^-25", ",", "Real"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"expr", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", "0"}], "]"}], "]"}]}], 
  "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.22`*^-25", ",", "Real"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "expr", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"List", "[", "1.22`*^-25", "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Export/Import strings:", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exprvalue", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.1", ",", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", "2.2", ",", "2.3"}], "}"}], ",", "3.0"}], " ", 
     "}"}], " ", ",", 
    RowBox[{"10", "^", 
     RowBox[{"-", "16"}]}], ",", "\"\<xy\>\""}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.1`", ",", "1.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.1`", ",", "2.2`", ",", "2.3`"}], "}"}], ",", "3.`"}], "}"}], 
   ",", 
   FractionBox["1", "10000000000000000"], ",", "\<\"xy\"\>"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", "\"\<Lines\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"exprstr", "=", 
    RowBox[{"ExportString", "[", 
     RowBox[{"exprvalue", ",", "form", ",", 
      RowBox[{"ConversionOptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ListSeparators\>\"", "\[Rule]", 
         RowBox[{"{", "\"\<,\>\"", "}"}]}], "}"}]}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"CForm", "[", "exprstr", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"impstr", "=", 
    RowBox[{"ImportString", "[", 
     RowBox[{"exprstr", ",", "form"}], "]"}]}], ",", "\"\<  Check: \>\"", ",",
    
   RowBox[{
    RowBox[{"ToExpression", "[", "impstr", "]"}], "\[Equal]", "exprvalue"}]}],
   "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\\n1/10000000000000000\\nxy\"\
\>", ",", 
   InterpretationBox[
    StyleBox[
     "\"\<{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\\n1/10000000000000000\\nxy\>\"",
     ShowStringCharacters->True,
     NumberMarks->True],
    CForm["{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\n1/10000000000000000\nxy"],
    AutoDelete->True,
    Editable->True], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\"\>", 
     ",", "\<\"1/10000000000000000\"\>", ",", "\<\"xy\"\>"}], "}"}], 
   ",", "\<\"  Check: \"\>", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.1`", ",", "1.2`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.1`", ",", "2.2`", ",", "2.3`"}], "}"}], ",", "3.`"}], 
       "}"}], ",", 
      FractionBox["1", "10000000000000000"], ",", "xy"}], "}"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.1`", ",", "1.2`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.1`", ",", "2.2`", ",", "2.3`"}], "}"}], ",", "3.`"}], 
       "}"}], ",", 
      FractionBox["1", "10000000000000000"], ",", "\<\"xy\"\>"}], "}"}]}]}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", "\"\<List\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"exprstr", "=", 
    RowBox[{"ExportString", "[", 
     RowBox[{"exprvalue", ",", "form", ",", 
      RowBox[{"ConversionOptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ListSeparators\>\"", "\[Rule]", 
         RowBox[{"{", "\"\<,\>\"", "}"}]}], "}"}]}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"CForm", "[", "exprstr", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"impstr", "=", 
    RowBox[{"ImportString", "[", 
     RowBox[{"exprstr", ",", "form"}], "]"}]}], ",", "\"\<  Check: \>\"", ",",
    
   RowBox[{
    RowBox[{"ToExpression", "[", "impstr", "]"}], "\[Equal]", "exprvalue"}]}],
   "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Syntax", "::", "\<\"com\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Warning: comma encountered with no adjacent expression; \
the expression will be treated as Null. \\!\\(\\\"\\\\n\\\"\\) \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Syntax::com\\\"]\\)\"\>"}]], \
"Message"],

Cell["\<\
ToExpression::sntxi: 
   Incomplete expression; more input is needed. More\[Ellipsis]\
\>", "Message"],

Cell["\<\
ToExpression::sntx: Syntax error in or before \"1.2},\". More\[Ellipsis]
                                                   ^\
\>", "Message"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Syntax", "::", "\<\"com\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Warning: comma encountered with no adjacent expression; \
the expression will be treated as Null. \\!\\(\\\"\\\\n\\\"\\) \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Syntax::com\\\"]\\)\"\>"}]], \
"Message"],

Cell["\<\
ToExpression::sntxi: 
   Incomplete expression; more input is needed. More\[Ellipsis]\
\>", "Message"],

Cell["\<\
ToExpression::sntx: Syntax error in or before \"2.2, \". More\[Ellipsis]
                                                   ^\
\>", "Message"],

Cell["\<\
ToExpression::sntx: Syntax error in or before \"2.3},\". More\[Ellipsis]
                                                   ^\
\>", "Message"],

Cell["\<\
General::stop: 
   Further output of ToExpression::sntx
     will be suppressed during this calculation. More\[Ellipsis]\
\>", "Message"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\\n1/10000000000000000\\nxy\"\
\>", ",", 
   InterpretationBox[
    StyleBox[
     "\"\<{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\\n1/10000000000000000\\nxy\>\"",
     ShowStringCharacters->True,
     NumberMarks->True],
    CForm["{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\n1/10000000000000000\nxy"],
    AutoDelete->True,
    Editable->True], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"{{1.1,\"\>", ",", "\<\"1.2},\"\>", ",", "\<\"{2.1,\"\>", 
     ",", "\<\"2.2,\"\>", ",", "\<\"2.3},\"\>", ",", "\<\"3.}\"\>", 
     ",", "\<\"1/10000000000000000\"\>", ",", "\<\"xy\"\>"}], "}"}], 
   ",", "\<\"  Check: \"\>", ",", "False"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", "\"\<CSV\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"exprstr", "=", 
    RowBox[{"ExportString", "[", 
     RowBox[{"exprvalue", ",", "form"}], "]"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"CForm", "[", "exprstr", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"impstr", "=", 
    RowBox[{"ImportString", "[", 
     RowBox[{"exprstr", ",", "form"}], "]"}]}], ",", "\"\<  Check: \>\"", ",",
    
   RowBox[{
    RowBox[{"ToExpression", "[", "impstr", "]"}], "\[Equal]", "exprvalue"}]}],
   "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\\\"{{1.1, 1.2}, {2.1, 2.2, 2.3}, \
3.}\\\"\\n1/10000000000000000\\nxy\"\>", ",", 
   InterpretationBox[
    StyleBox[
     "\"\<\\\"{{1.1, 1.2}, {2.1, 2.2, 2.3}, \
3.}\\\"\\n1/10000000000000000\\nxy\>\"",
     ShowStringCharacters->True,
     NumberMarks->True],
    CForm["\"{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\"\n1/10000000000000000\nxy"],
    AutoDelete->True,
    Editable->True], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "\<\"{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"1/10000000000000000\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"xy\"\>", "}"}]}], "}"}], ",", "\<\"  Check: \"\>", ",",
    "False"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", "\"\<Table\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"exprstr", "=", 
    RowBox[{"ExportString", "[", 
     RowBox[{"exprvalue", ",", "form"}], "]"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"CForm", "[", "exprstr", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"impstr", "=", 
    RowBox[{"ImportString", "[", 
     RowBox[{"exprstr", ",", "form"}], "]"}]}], ",", "\"\<  Check: \>\"", ",",
    
   RowBox[{
    RowBox[{"ToExpression", "[", "impstr", "]"}], "\[Equal]", "exprvalue"}]}],
   "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Syntax", "::", "\<\"com\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Warning: comma encountered with no adjacent expression; \
the expression will be treated as Null. \\!\\(\\\"\\\\n\\\"\\) \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Syntax::com\\\"]\\)\"\>"}]], \
"Message"],

Cell["\<\
ToExpression::sntxi: 
   Incomplete expression; more input is needed. More\[Ellipsis]\
\>", "Message"],

Cell["\<\
ToExpression::sntx: Syntax error in or before \"1.2},\". More\[Ellipsis]
                                                   ^\
\>", "Message"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Syntax", "::", "\<\"com\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Warning: comma encountered with no adjacent expression; \
the expression will be treated as Null. \\!\\(\\\"\\\\n\\\"\\) \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Syntax::com\\\"]\\)\"\>"}]], \
"Message"],

Cell["\<\
ToExpression::sntxi: 
   Incomplete expression; more input is needed. More\[Ellipsis]\
\>", "Message"],

Cell["\<\
ToExpression::sntx: Syntax error in or before \"2.2, \". More\[Ellipsis]
                                                   ^\
\>", "Message"],

Cell["\<\
ToExpression::sntx: Syntax error in or before \"2.3},\". More\[Ellipsis]
                                                   ^\
\>", "Message"],

Cell["\<\
General::stop: 
   Further output of ToExpression::sntx
     will be suppressed during this calculation. More\[Ellipsis]\
\>", "Message"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\\n1/10000000000000000\\nxy\"\
\>", ",", 
   InterpretationBox[
    StyleBox[
     "\"\<{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\\n1/10000000000000000\\nxy\>\"",
     ShowStringCharacters->True,
     NumberMarks->True],
    CForm["{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\n1/10000000000000000\nxy"],
    AutoDelete->True,
    Editable->True], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"{{1.1,\"\>", ",", "\<\"1.2},\"\>", ",", "\<\"{2.1,\"\>", 
       ",", "\<\"2.2,\"\>", ",", "\<\"2.3},\"\>", ",", "\<\"3.}\"\>"}], "}"}],
      ",", 
     RowBox[{"{", "\<\"1/10000000000000000\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"xy\"\>", "}"}]}], "}"}], ",", "\<\"  Check: \"\>", ",",
    "False"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", "\"\<Text\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"exprstr", "=", 
    RowBox[{"ExportString", "[", 
     RowBox[{"exprvalue", ",", "form"}], "]"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"CForm", "[", "exprstr", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"impstr", "=", 
    RowBox[{"ImportString", "[", 
     RowBox[{"exprstr", ",", "form"}], "]"}]}], ",", "\"\<  Check: \>\"", ",",
    
   RowBox[{
    RowBox[{"ToExpression", "[", "impstr", "]"}], "\[Equal]", "exprvalue"}]}],
   "}"}]}], "Input"],

Cell["\<\
ToExpression::sntx: 
   Syntax error in or before 
    \"{{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}, -----------------, xy}
                                                           ^
     \". More\[Ellipsis]\
\>", "Message"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"                                            1\\n{{{1.1, 1.2}, \
{2.1, 2.2, 2.3}, 3.}, -----------------, xy}\\n                               \
     10000000000000000\"\>", ",", 
   InterpretationBox[
    StyleBox[
     "\"\<                                            1\\n{{{1.1, 1.2}, {2.1, \
2.2, 2.3}, 3.}, -----------------, xy}\\n                                    \
10000000000000000\>\"",
     ShowStringCharacters->True,
     NumberMarks->True],
    CForm[
    "                                            1\n{{{1.1, 1.2}, {2.1, 2.2, \
2.3}, 3.}, -----------------, xy}\n                                    \
10000000000000000"],
    AutoDelete->True,
    Editable->True], 
   ",", "\<\"                                            1\\n{{{1.1, 1.2}, \
{2.1, 2.2, 2.3}, 3.}, -----------------, xy}\\n                               \
     10000000000000000\"\>", ",", "\<\"  Check: \"\>", ",", 
   RowBox[{"$Failed", "\[Equal]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.1`", ",", "1.2`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.1`", ",", "2.2`", ",", "2.3`"}], "}"}], ",", "3.`"}], 
       "}"}], ",", 
      FractionBox["1", "10000000000000000"], ",", "\<\"xy\"\>"}], "}"}]}]}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", "\"\<TSV\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"exprstr", "=", 
    RowBox[{"ExportString", "[", 
     RowBox[{"exprvalue", ",", "form"}], "]"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"CForm", "[", "exprstr", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"impstr", "=", 
    RowBox[{"ImportString", "[", 
     RowBox[{"exprstr", ",", "form"}], "]"}]}], ",", "\"\<  Check: \>\"", ",",
    
   RowBox[{
    RowBox[{"ToExpression", "[", "impstr", "]"}], "\[Equal]", "exprvalue"}]}],
   "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\\n1/10000000000000000\\nxy\"\
\>", ",", 
   InterpretationBox[
    StyleBox[
     "\"\<{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\\n1/10000000000000000\\nxy\>\"",
     ShowStringCharacters->True,
     NumberMarks->True],
    CForm["{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\n1/10000000000000000\nxy"],
    AutoDelete->True,
    Editable->True], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "\<\"{{1.1, 1.2}, {2.1, 2.2, 2.3}, 3.}\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"1/10000000000000000\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"xy\"\>", "}"}]}], "}"}], ",", "\<\"  Check: \"\>", ",",
    "False"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", "\"\<Words\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"exprstr", "=", 
    RowBox[{"ExportString", "[", 
     RowBox[{"exprvalue", ",", "form"}], "]"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"CForm", "[", "exprstr", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"impstr", "=", 
    RowBox[{"ImportString", "[", 
     RowBox[{"exprstr", ",", "form"}], "]"}]}], ",", "\"\<  Check: \>\"", ",",
    
   RowBox[{
    RowBox[{"ToExpression", "[", "impstr", "]"}], "\[Equal]", "exprvalue"}]}],
   "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1.1\\n1.2\\n2.1\\n2.2\\n2.299999999999999\\n3.\\n1/\
10000000000000000\\nxy\"\>", ",", 
   InterpretationBox[
    StyleBox[
     "\"\<1.1\\n1.2\\n2.1\\n2.2\\n2.299999999999999\\n3.\\n1/\
10000000000000000\\nxy\>\"",
     ShowStringCharacters->True,
     NumberMarks->True],
    CForm[
    "1.1\n1.2\n2.1\n2.2\n2.299999999999999\n3.\n1/10000000000000000\nxy"],
    AutoDelete->True,
    Editable->True], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1.1\"\>", ",", "\<\"1.2\"\>", ",", "\<\"2.1\"\>", 
     ",", "\<\"2.2\"\>", ",", "\<\"2.299999999999999\"\>", ",", "\<\"3.\"\>", 
     ",", "\<\"1/10000000000000000\"\>", ",", "\<\"xy\"\>"}], "}"}], 
   ",", "\<\"  Check: \"\>", ",", "False"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[CellGroupData[{

Cell["Optmization Utilities", "Title",
 CellChangeTimes->{{3.571838639759204*^9, 3.5718386513958693`*^9}, {
  3.5718527028308716`*^9, 3.571852709445283*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"testmode", "\[NotEqual]", "0"}], ",", 
    RowBox[{
     RowBox[{"testmode", "=", "0"}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"debugmode", "\[NotEqual]", "0"}], ",", 
    RowBox[{
     RowBox[{"debugmode", "=", "0"}], ";"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4107621556875*^9, 3.410762238609375*^9}}],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["Numerical gradients,  gradient checks & analysis transforms", "Subtitle"],

Cell[CellGroupData[{

Cell["Selsection of parameters", "Subsection"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["parindtonames",
  FontWeight->"Bold"],
 " [",
 StyleBox["select, paramnamesall",
  FontSlant->"Italic"],
 "]\n   - Creates a list of parameter names selected from ",
 StyleBox["paramnamesall",
  FontSlant->"Italic"],
 " (a list of all parameter names) that corresponds to parameter indices in \
selection list ",
 StyleBox["selsct",
  FontSlant->"Italic"],
 ". ",
 StyleBox["select",
  FontSlant->"Italic"],
 " can be arbitrarily nested list. \n",
 StyleBox["getgradsel",
  FontWeight->"Bold"],
 " [",
 StyleBox["grad, select",
  FontSlant->"Italic"],
 "]\n    - Returns a reduced gradient according to reduced parameters ",
 StyleBox["select",
  FontSlant->"Italic"],
 ", where full gradient (with respect to all parameters) is ",
 StyleBox["grad",
  FontSlant->"Italic"],
 ".\n",
 StyleBox["setparamsel",
  FontWeight->"Bold"],
 " [",
 StyleBox["p0, select, paramall",
  FontSlant->"Italic"],
 "] - returns a full parameter list if ",
 StyleBox["p0",
  FontSlant->"Italic"],
 " is a reduced set of parameters, ",
 StyleBox["select",
  FontSlant->"Italic"],
 " is a list of indices of parameters in the full set corresponding to \
parameters from reduced set, and ",
 StyleBox["paramall",
  FontSlant->"Italic"],
 " is a list of default values for the full set of parameters.\n\nForm of \
selection indices:\n",
 StyleBox["{p1, {p21, p22, p23}, p3, p4}",
  FontSlant->"Italic"],
 " means the following: 1st parameter from reduced set defines parameter with \
index ",
 StyleBox["p1",
  FontSlant->"Italic"],
 " in the full set, 2nd parameter from the reduced set defines parameters ",
 StyleBox["p21, p22, p23",
  FontSlant->"Italic"],
 " from the full set, 3rd parameter form the reduced set defines parameter ",
 StyleBox["p3",
  FontSlant->"Italic"],
 " from the full set, and 4th parameter from the reduced set defines the \
parameter with index ",
 StyleBox["p4",
  FontSlant->"Italic"],
 " in the full set. Other parameters in the full set have referential values \
defined in paramall.\n"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"parindtonames", "[", 
     RowBox[{"select_", ",", "paramnamesall_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ret", ",", "cur", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Converts", " ", "a", " ", "parameter", " ", "selection", " ", "list", 
        " ", "containing", " ", "indices", " ", "to", " ", "a", " ", "list", 
        " ", "containing", " ", 
        RowBox[{"names", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "select", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"paramnamesall", "[", 
           RowBox[{"[", "select", "]"}], "]"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"paramnamesall", "[", 
           RowBox[{"[", 
            RowBox[{"select", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "select", "]"}]}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"parindtonames", "[", 
          RowBox[{
           RowBox[{"select", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "paramnamesall"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "select", "]"}]}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getgradsel", "[", " ", 
     RowBox[{"grad_", ",", "select_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gradsel", ",", "val", ",", "depend", ",", "i", ",", "j"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Change", " ", "gradient", " ", "with", " ", "respect", " ", "to", " ",
         "all", " ", "parameters", " ", "to", " ", "gradient", " ", "with", 
        " ", "respect", " ", "to", " ", "selected", " ", 
        RowBox[{"parameters", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"gradsel", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "   ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<grad: \>\"", " ", ",", "grad"}], "]"}], "   ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "select", "]"}]}], ",", 
         RowBox[{"i", "=", 
          RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"depend", "=", 
           RowBox[{"select", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Depth", "[", "depend", "]"}], "<", "2"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"depend", "=", 
              RowBox[{"{", "depend", "}"}]}], ";"}]}], "    ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "generic", " ", "parameters", " ", "that", " ", "depend", " ", 
             "on", " ", "a", " ", "specific", " ", "parameter"}], " ", "*)"}],
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"gradsel", ",", "\[IndentingNewLine]", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"grad", "[", 
               RowBox[{"[", " ", 
                RowBox[{"depend", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], " ", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "depend", "]"}]}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", "  ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<i: \>\"", ",", "i", ",", "\"\<, depend: \>\"", ",", "depend", 
           ",", "\"\<, gradsel: \>\"", ",", "gradsel"}], "]"}], "  ", "*)"}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "gradsel"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setparamsel", "[", 
    RowBox[{"p0_", ",", "select_", ",", "paramall_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ret", ",", "cur", ",", "i", ",", "j", ",", "p", ",", "depend"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Sets", " ", "generic", " ", "parameters", " ", "according", " ", "to", 
       " ", "reduced", " ", "parameters", " ", "and", " ", "selection", " ", 
       RowBox[{"list", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "=", "paramall"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "select", "]"}]}], ",", 
        RowBox[{"i", "=", 
         RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"depend", "=", 
          RowBox[{"select", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Depth", "[", "depend", "]"}], "<", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"depend", "=", 
             RowBox[{"{", "depend", "}"}]}], ";"}]}], "    ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "indices", " ", "of", " ", "generic", " ", "parameters", " ", 
            "that", " ", "depend", " ", "on", " ", "a", " ", "specific", " ", 
            "parameter"}], " ", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "depend", "]"}]}], ",", 
           RowBox[{"j", "=", 
            RowBox[{"j", "+", "1"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", 
               RowBox[{"depend", "[", 
                RowBox[{"[", "j", "]"}], "]"}], " ", "]"}], "]"}], "=", 
             RowBox[{"p0", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", "p"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["\<\
Derived Minimization Functions (suitable for use outside Mathematica):\
\>", "Subtitle",
 CellChangeTimes->{{3.5718649569067464`*^9, 3.5718649608126116`*^9}}],

Cell["\<\
Remarks:
  args is passed as the last argument to the Mathematica's minimization \
function.\
\>", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Unconstrained minimization:",
  FontSlant->"Italic"],
 "\nmathminimize ",
 StyleBox["[",
  FontWeight->"Plain"],
 StyleBox["anfunc, ancd, p0, tol, maxit, printlev , args ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]\n  - minimizes objective function defined by ",
  FontWeight->"Plain"],
 StyleBox["anfunc",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontWeight->"Plain"],
 StyleBox["ancd",
  FontSlant->"Italic"],
 StyleBox[", which specify the standard analysis function for calculation and \
its definition data used for calculation. ",
  FontWeight->"Plain"],
 StyleBox["tol",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - tolerance, ",
  FontWeight->"Plain"],
 StyleBox["maxit",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - max. num. iterations, ",
  FontWeight->"Plain"],
 StyleBox["printlev",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - printing level (if >0 then intermediate results are printed), ",
  
  FontWeight->"Plain"],
 StyleBox["args -",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" additional arguments passed directly to ",
  FontWeight->"Plain"],
 StyleBox["Mathematica'",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["s function ",
  FontWeight->"Plain"],
 "FindMinimum",
 StyleBox[", which does the job. ",
  FontWeight->"Plain"],
 "Analysis recording is switched off",
 StyleBox[". during minimization (for faster execution)\n  \n  ",
  FontWeight->"Plain"],
 "mathminimize0",
 StyleBox[": The same, but it does not affect analysis recording (if switched \
on then recording works, otherwise it does not, the same is true for \
plotting).\n  \n  ",
  FontWeight->"Plain"],
 "mathminimizetest",
 StyleBox[": The same as ",
  FontWeight->"Plain"],
 "mathminimize",
 StyleBox[", but ",
  FontWeight->"Plain"],
 "analysis recording",
 StyleBox[" is reset at the beginning (data cleaned) and then",
  FontWeight->"Plain"],
 " turned on",
 StyleBox[", and ",
  FontWeight->"Plain"],
 "analysis course is plotted",
 StyleBox[" if the problem is 2D.",
  FontWeight->"Plain"]
}], "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mathminimize", "[", 
     RowBox[{
     "anfunc_", ",", "ancd_", ",", "p0_", ",", "tol_", ",", "maxit_", ",", 
      "printlev_", ",", "args_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"save", ",", "plot", ",", "ret"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"save", "=", "saveanresults"}], ";", "  ", 
       RowBox[{"plot", "=", "plotanresults"}], ";", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"save", " ", "recording"}], " ", "&"}], " ", "plotting", 
         " ", "options"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"saveanresults", "=", "0"}], ";", "  ", 
       RowBox[{"plotanresults", "=", "0"}], ";", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"switch", " ", "off", " ", "recording"}], " ", "&"}], " ", 
         "plotting"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ret", "=", 
        RowBox[{"mathminimize0", "[", 
         RowBox[{
         "anfunc", ",", "ancd", ",", "p0", ",", "tol", ",", "maxit", ",", 
          "printlev", ",", "args"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"saveanresults", "=", "save"}], ";", "  ", 
       RowBox[{"plotanresults", "=", "plot"}], ";", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"restore", " ", "recording"}], " ", "&"}], " ", "plotting", 
         " ", "options"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "ret", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mathminimizetest", "[", 
     RowBox[{
     "anfunc_", ",", "ancd_", ",", "p0_", ",", "tol_", ",", "maxit_", ",", 
      "printlev_", ",", "args_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"save", ",", "plot", ",", "ret"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"resetplotan", "[", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"save", "=", "saveanresults"}], ";", "  ", 
       RowBox[{"plot", "=", "plotanresults"}], ";", "\[IndentingNewLine]", 
       RowBox[{"saveanresults", "=", "1"}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<--------------------\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Before minimization, recorded data (global) anresults = \>\"",
             ",", "anresults"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "\"\<====================\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"ret", "=", 
        RowBox[{"mathminimize0", "[", 
         RowBox[{
         "anfunc", ",", "ancd", ",", "p0", ",", "tol", ",", "maxit", ",", 
          "printlev", ",", "args"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<====================\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<After minimization, recorded data (global) anresults = \>\"", 
            ",", "anresults"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "\"\<--------------------\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"saveanresults", "=", "save"}], ";", "  ", 
       RowBox[{"plotanresults", "=", "plot"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\\n\\nmathminimizetest - Results:\\n\>\"", ",", "ret"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "p0", "]"}], "\[Equal]", "2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"showancourse", "[", 
           RowBox[{"anfunc", ",", "ancd"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "ret", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IDmathminimize", "=", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mathminimize0", "[", 
    RowBox[{
    "anfunc_", ",", "ancd_", ",", "p0_", ",", "tol_", ",", "maxit_", ",", 
     "printlev_", ",", "args_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "gradfunc", ",", "var", ",", "var0", ",", "dim", ",", "res", ",", "i", 
       ",", "tolint", ",", "maxitint"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IDmathminimize", "++"}], ";", "\[IndentingNewLine]", 
      RowBox[{"dim", "=", 
       RowBox[{"Length", "[", "p0", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"var", "=", 
         RowBox[{"vecvar", "[", 
          RowBox[{"\"\<xopt\>\"", ",", "dim"}], "]"}]}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"var", "=", 
       RowBox[{"vecvar", "[", 
        RowBox[{
         RowBox[{"\"\<varmin\>\"", "<>", 
          RowBox[{"ToString", "[", "IDmathminimize", "]"}], "<>", 
          "\"\<i\>\""}], ",", "dim"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"var0", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"var", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"p0", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"maxit", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"maxitint", "=", "maxit"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"maxitint", "=", "100"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"tol", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"tolint", "=", "tol"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tolint", "=", "Automatic"}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<mathminimize, arguments: anfunc = \>\"", ",", "anfunc", ",", 
           "\"\<, ancd = \>\"", ",", "ancd", ",", "\"\<, p0 = \>\"", ",", 
           "p0", ",", "\"\<, tolint = \>\"", ",", "tolint", ",", 
           "\"\<, maxitint = \>\"", ",", "maxitint", ",", "\"\<, args = \>\"",
            ",", "args"}], "]"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<dim = \>\"", ",", "dim", ",", 
            "\"\<, aux. variables var = \>\"", ",", "var", ",", 
            "\"\<, representation of starting guess: \>\"", ",", "var0"}], 
           "]"}], ";"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"gradfunc", "=", 
       RowBox[{"Table", "[", "  ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"anfunc", "[", 
            RowBox[{
            "var", ",", "1", ",", "1", ",", "1", ",", "1", ",", "ancd"}], 
            "]"}], " ", "[", 
           RowBox[{"[", "6", "]"}], "]"}], " ", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "   ", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], " ", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Gradient functions after definition: \>\"", ",", "gradfunc"}], 
          " ", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{
        RowBox[{"FindMinimum", "[", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"anfunc", "[", 
             RowBox[{
             "var", ",", "1", ",", "1", ",", "1", ",", "1", ",", "ancd"}], 
             "]"}], " ", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "  ", "//", "Hold"}], 
          "\[IndentingNewLine]", ",", "var0", 
          StyleBox[",",
           FormatType->StandardForm], 
          StyleBox["\[IndentingNewLine]",
           FormatType->StandardForm], 
          StyleBox[
           RowBox[{"Gradient", "->", "gradfunc"}],
           FormatType->StandardForm], 
          StyleBox[",",
           FormatType->StandardForm], 
          StyleBox["\[IndentingNewLine]",
           FormatType->StandardForm], 
          StyleBox[
           RowBox[{"MaxIterations", "->", "maxitint"}],
           FormatType->StandardForm], 
          StyleBox[",",
           FormatType->StandardForm], 
          StyleBox["\[IndentingNewLine]",
           FormatType->StandardForm], 
          StyleBox[
           RowBox[{"AccuracyGoal", "->", "tolint"}],
           FormatType->StandardForm], 
          StyleBox[",",
           FormatType->StandardForm], 
          StyleBox["\[IndentingNewLine]",
           FormatType->StandardForm], 
          RowBox[{"Compiled", "\[Rule]", "False"}], ",", 
          StyleBox["\[IndentingNewLine]",
           FormatType->StandardForm], 
          StyleBox["args",
           FormatType->StandardForm]}], 
         StyleBox["\[IndentingNewLine]",
          FormatType->StandardForm], 
         RowBox[{"(*", 
          StyleBox["\[IndentingNewLine]",
           FormatType->StandardForm], 
          RowBox[{
           StyleBox["{",
            FormatType->StandardForm], 
           StyleBox[" ",
            FormatType->StandardForm], 
           RowBox[{
            StyleBox[
             RowBox[{"Method", "->", "Automatic"}],
             FormatType->StandardForm], 
            StyleBox[",",
             FormatType->StandardForm], 
            RowBox[{"Compiled", "\[Rule]", "False"}]}], "}"}], 
          "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", "]"}], "//", 
        "Timing"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"Without", " ", "explicit", " ", "gradient", " ", 
          RowBox[{"definition", ":", "\[IndentingNewLine]", "res"}]}], "=", 
         RowBox[{
          RowBox[{"FindMinimum", "[", "  ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"anfunc", "[", 
               RowBox[{
               "var", ",", "1", ",", "1", ",", "1", ",", "1", ",", "ancd"}], 
               "]"}], " ", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "  ", "//", "Hold"}], 
            "\[IndentingNewLine]", ",", "var0", 
            StyleBox[",",
             FormatType->StandardForm], 
            StyleBox["\[IndentingNewLine]",
             FormatType->StandardForm], 
            StyleBox["args",
             FormatType->StandardForm]}], 
           StyleBox["\[IndentingNewLine]",
            FormatType->StandardForm], 
           RowBox[{"(*", 
            StyleBox["\[IndentingNewLine]",
             FormatType->StandardForm], 
            RowBox[{
             StyleBox["{",
              FormatType->StandardForm], 
             StyleBox[" ",
              FormatType->StandardForm], 
             RowBox[{
              StyleBox[
               RowBox[{"Method", "->", "Automatic"}],
               FormatType->StandardForm], 
              StyleBox[",",
               FormatType->StandardForm], 
              RowBox[{"Compiled", "\[Rule]", "False"}]}], "}"}], 
            "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", "]"}], "//",
           "Timing"}]}], ";"}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<After minimization, res = \>\"", ",", "res"}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"var", " ", "/.", " ", 
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], " ", "}"}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
  RowBox[{"Append", "[", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"{", "5", "}"}], ",", "3", ",", "4"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "5", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.5718650173389125`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Constrained minimization:",
  FontSlant->"Italic"],
 "\nmathoptimize ",
 StyleBox["[",
  FontWeight->"Plain"],
 StyleBox["anfunc, ancd, p0, numconstr, tol, maxit, printlev , args ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]\n  - minimizes objective function defined by ",
  FontWeight->"Plain"],
 StyleBox["anfunc",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontWeight->"Plain"],
 StyleBox["ancd",
  FontSlant->"Italic"],
 StyleBox[", which specify the standard analysis function for calculation and \
its definition data used for calculation. ",
  FontWeight->"Plain"],
 StyleBox["tol",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - tolerance, ",
  FontWeight->"Plain"],
 StyleBox["maxit",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - max. num. iterations, ",
  FontWeight->"Plain"],
 StyleBox["printlev",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" - printing level (if >0 then intermediate results are printed), ",
  
  FontWeight->"Plain"],
 StyleBox["args -",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" additional arguments passed directly to ",
  FontWeight->"Plain"],
 StyleBox["Mathematica'",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["s function ",
  FontWeight->"Plain"],
 "FindMinimum",
 StyleBox[", which does the job. ",
  FontWeight->"Plain"],
 "Analysis recording is switched off",
 StyleBox[". during minimization (for faster execution). Parameter ",
  FontWeight->"Plain"],
 StyleBox["numconstr",
  FontSlant->"Italic"],
 StyleBox[" defines the number of constraints.\n  \n  ",
  FontWeight->"Plain"],
 "mathoptimize0",
 StyleBox[": The same, but it does not affect analysis recording (if switched \
on then recording works, otherwise it does not, the same is true for \
plotting).\n  \n  ",
  FontWeight->"Plain"],
 "mathoptimizetest",
 StyleBox[": The same as ",
  FontWeight->"Plain"],
 "mathoptimize",
 StyleBox[", but ",
  FontWeight->"Plain"],
 "analysis recording",
 StyleBox[" is reset at the beginning (data cleaned) and then",
  FontWeight->"Plain"],
 " turned on",
 StyleBox[", and ",
  FontWeight->"Plain"],
 "analysis course is plotted",
 StyleBox[" if the problem is 2D.",
  FontWeight->"Plain"]
}], "Subsection"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mathoptimize", "[", 
     RowBox[{
     "anfunc_", ",", "ancd_", ",", "p0_", ",", "numconstr_", ",", "tol_", ",",
       "maxit_", ",", "printlev_", ",", "args_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"save", ",", "plot", ",", "ret"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"save", "=", "saveanresults"}], ";", "  ", 
       RowBox[{"plot", "=", "plotanresults"}], ";", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"save", " ", "recording"}], " ", "&"}], " ", "plotting", 
         " ", "options"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"saveanresults", "=", "0"}], ";", "  ", 
       RowBox[{"plotanresults", "=", "0"}], ";", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"switch", " ", "off", " ", "recording"}], " ", "&"}], " ", 
         "plotting"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ret", "=", 
        RowBox[{"mathoptimize0", "[", 
         RowBox[{
         "anfunc", ",", "ancd", ",", "p0", ",", "numconstr", ",", "tol", ",", 
          "maxit", ",", "printlev", ",", "args"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"saveanresults", "=", "save"}], ";", "  ", 
       RowBox[{"plotanresults", "=", "plot"}], ";", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"restore", " ", "recording"}], " ", "&"}], " ", "plotting", 
         " ", "options"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "ret", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mathoptimizetest", "[", 
     RowBox[{
     "anfunc_", ",", "ancd_", ",", "p0_", ",", "numconstr_", ",", "tol_", ",",
       "maxit_", ",", "printlev_", ",", "args_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"save", ",", "plot", ",", "ret"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"resetplotan", "[", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"save", "=", "saveanresults"}], ";", "  ", 
       RowBox[{"plot", "=", "plotanresults"}], ";", "\[IndentingNewLine]", 
       RowBox[{"saveanresults", "=", "1"}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<--------------------\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Before minimization, recorded data (global) anresults = \>\"",
             ",", "anresults"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "\"\<====================\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"ret", "=", 
        RowBox[{"mathoptimize0", "[", 
         RowBox[{
         "anfunc", ",", "ancd", ",", "p0", ",", "numconstr", ",", "tol", ",", 
          "maxit", ",", "printlev", ",", "args"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<====================\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<After minimization, recorded data (global) anresults = \>\"", 
            ",", "anresults"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "\"\<--------------------\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"saveanresults", "=", "save"}], ";", "  ", 
       RowBox[{"plotanresults", "=", "plot"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\\n\\nmathminimizetest - Results:\\n\>\"", ",", "ret"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "p0", "]"}], "\[Equal]", "2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"showancourse", "[", 
           RowBox[{"anfunc", ",", "ancd"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "ret", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IDmathminimize", "=", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mathoptimize0", "[", 
    RowBox[{
    "anfunc_", ",", "ancd_", ",", "p0_", ",", "numconstr_", ",", "tol_", ",", 
     "maxit_", ",", "printlev_", ",", "args_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "optfunc", ",", "gradfunc", ",", "var", ",", "var0", ",", "dim", ",", 
       "res", ",", "i", ",", "numconstrint", ",", "tolint", ",", "maxitint"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IDmathminimize", "++"}], ";", "\[IndentingNewLine]", 
      RowBox[{"dim", "=", 
       RowBox[{"Length", "[", "p0", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"var", "=", 
         RowBox[{"vecvar", "[", 
          RowBox[{"\"\<xopt\>\"", ",", "dim"}], "]"}]}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"var", "=", 
       RowBox[{"vecvar", "[", 
        RowBox[{
         RowBox[{"\"\<varmin\>\"", "<>", 
          RowBox[{"ToString", "[", "IDmathminimize", "]"}], "<>", 
          "\"\<i\>\""}], ",", "dim"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"var0", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"var", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"p0", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"maxit", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"maxitint", "=", "maxit"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"maxitint", "=", "100"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"tol", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"tolint", "=", 
         RowBox[{"N", "[", "tol", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tolint", "=", "Automatic"}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"numconstrint", "=", "numconstr"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<mathminimize, arguments: anfunc = \>\"", ",", "anfunc", ",", 
           "\"\<, ancd = \>\"", ",", "ancd", ",", "\"\<, p0 = \>\"", ",", 
           "p0", ",", "\"\<, numconstrint: \>\"", ",", "numconstrint", ",", 
           "\"\<, tolint = \>\"", ",", "tolint", ",", "\"\<, maxitint = \>\"",
            ",", "maxitint", ",", "\"\<, args = \>\"", ",", "args"}], "]"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<dim = \>\"", ",", "dim", ",", 
            "\"\<, aux. variables var = \>\"", ",", "var", ",", 
            "\"\<, representation of starting guess: \>\"", ",", "var0"}], 
           "]"}], ";"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gradfunc", "=", 
         RowBox[{"Table", "[", "  ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"anfunc", "[", 
              RowBox[{
              "var", ",", "1", ",", "1", ",", "1", ",", "1", ",", "ancd"}], 
              "]"}], " ", "[", 
             RowBox[{"[", "6", "]"}], "]"}], " ", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "   ", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Gradient functions after definition: \>\"", ",", 
             "gradfunc"}], " ", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"optfunc", "=", 
       RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "  ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"anfunc", "[", 
               RowBox[{
               "var", ",", "1", ",", "1", ",", "1", ",", "1", ",", "ancd"}], 
               "]"}], " ", "[", 
              RowBox[{"[", "4", "]"}], "]"}], " ", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "\[LessEqual]", "0"}], 
           "    ", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "numconstr"}], "}"}]}], " ", "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"anfunc", "[", 
           RowBox[{
           "var", ",", "1", ",", "1", ",", "1", ",", "1", ",", "ancd"}], 
           "]"}], " ", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", "\[IndentingNewLine]", 
        "]"}]}], "  ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Problem definition: \>\"", ",", "optfunc"}], "  ", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "args", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "args", "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"Length", "[", "args", "]"}], "\[GreaterEqual]", "2"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"res", "=", 
           RowBox[{
            RowBox[{"NMinimize", "[", 
             RowBox[{
             "optfunc", "  ", ",", "var", " ", ",", "\[IndentingNewLine]", 
              RowBox[{"AccuracyGoal", "\[Rule]", "tolint"}], ",", 
              "\[IndentingNewLine]", 
              StyleBox[
               RowBox[{"MaxIterations", "->", "maxitint"}],
               FormatType->StandardForm], 
              StyleBox[",",
               FormatType->StandardForm], 
              StyleBox["\[IndentingNewLine]",
               FormatType->StandardForm], 
              StyleBox[
               RowBox[{"args", "[", 
                RowBox[{"[", "1", "]"}], "]"}],
               FormatType->StandardForm], 
              StyleBox[",",
               FormatType->StandardForm], 
              StyleBox[
               RowBox[{"args", "[", 
                RowBox[{"[", "2", "]"}], "]"}],
               FormatType->StandardForm]}], "\[IndentingNewLine]", "]"}], "//",
             " ", "Timing"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"Length", "[", "args", "]"}], "=", "1"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"res", "=", 
           RowBox[{
            RowBox[{"NMinimize", "[", 
             RowBox[{
             "optfunc", "  ", ",", "var", " ", ",", "\[IndentingNewLine]", 
              RowBox[{"AccuracyGoal", "\[Rule]", "tolint"}], ",", 
              "\[IndentingNewLine]", 
              StyleBox[
               RowBox[{"MaxIterations", "->", "maxitint"}],
               FormatType->StandardForm], 
              StyleBox[",",
               FormatType->StandardForm], 
              StyleBox["\[IndentingNewLine]",
               FormatType->StandardForm], 
              StyleBox[
               RowBox[{"args", "[", 
                RowBox[{"[", "1", "]"}], "]"}],
               FormatType->StandardForm]}], "\[IndentingNewLine]", "]"}], "//",
             " ", "Timing"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Length", "[", "args", "]"}], "\[Equal]", "0"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "=", 
          RowBox[{
           RowBox[{"NMinimize", "[", 
            RowBox[{
            "optfunc", "  ", ",", "var", " ", ",", "\[IndentingNewLine]", 
             RowBox[{"AccuracyGoal", "\[Rule]", "tolint"}], ",", 
             "\[IndentingNewLine]", 
             StyleBox[
              RowBox[{"MaxIterations", "->", "maxitint"}],
              FormatType->StandardForm]}], "\[IndentingNewLine]", "]"}], "//",
            " ", "Timing"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"saveanresults", ">", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"anresults", "=", 
            RowBox[{"anresults", " ", "/.", " ", 
             RowBox[{"Table", "[", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"var", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
                RowBox[{"p0", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "var", "]"}]}], "}"}]}], "]"}]}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
       "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<After optimization, res = \>\"", ",", "res"}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", "dim"}], ",", 
          RowBox[{"i", "=", 
           RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"printlev", ">", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<i = \>\"", ",", "i", ",", "\"\< clearing: \>\"", ",", 
                RowBox[{"var", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Clear", "[", 
            RowBox[{"var", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"var", " ", "/.", " ", 
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], " ", "}"}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 Background->RGBColor[
  0.984313725490196, 0.9725490196078431, 0.8431372549019608]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell["Testing area", "Title"],

Cell[CellGroupData[{

Cell["Performing Optimization", "Subtitle",
 CellChangeTimes->{{3.5718439601977644`*^9, 3.5718439791814814`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Optimization with direct call to Mathematical Routines (for testing)\
\>", "Subtitle",
 CellChangeTimes->{{3.5718439912091026`*^9, 3.5718440315049734`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Example : Unconstrained Minimization of simple custom function\
\>", "Subsection",
 CellChangeTimes->{{3.571844180036168*^9, 3.571844207499514*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"at", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "dfx", ",", "dfy"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RosenbrockNum", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumberQ"}], ",", 
     RowBox[{"y_", "?", "NumberQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "a", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"at", "++"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<f:\>\"", ",", "at"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"Rosenbrock", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Print", "[", 
       RowBox[{
       "x", ",", "\"\<  \>\"", ",", "y", ",", "\"\<  \>\"", ",", "a"}], "]"}],
       ";", "\[IndentingNewLine]", "a"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.5718442096726384`*^9, 3.571844209844648*^9}, 
   3.571844262208703*^9, {3.571844292360013*^9, 3.571844295152418*^9}, {
   3.571844330267988*^9, 3.5718443462079*^9}, {3.571844410531967*^9, 
   3.5718444282460546`*^9}, {3.571845315733654*^9, 3.5718453735438476`*^9}, {
   3.5718454298410673`*^9, 3.571845430329096*^9}, {3.571845493911172*^9, 
   3.571845495315174*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.5718455926088943`*^9, 3.5718456440776396`*^9}, {
   3.5718457588580465`*^9, 3.5718460188035083`*^9}, 3.571848772160266*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RosenbrockControlled", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.5718456484456472`*^9, 3.5718456526732545`*^9}, {
  3.571845701285774*^9, 3.5718457327635746`*^9}, {3.5718459365465665`*^9, 
  3.5718459412733746`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\", y = \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\", f = \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 4, ", x = ", 1, ", y = ", 1, ", f = ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5718459925580072`*^9, {3.5718460244538317`*^9, 3.57184603386937*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5718457154745855`*^9, 3.57184573373463*^9}, 
   3.571845941975376*^9, 3.5718459926150103`*^9, {3.5718460244718323`*^9, 
   3.57184603387337*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RosenbrockNum", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.571845500151182*^9, 3.5718455020231857`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5718455052523913`*^9, 3.5718456635464735`*^9, 
  3.5718460396627007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"methFM", "=", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["ConjugateGradient", "MR"], ",", 
     StyleBox["Gradient", "MR"], ",", 
     StyleBox["Newton", "MR"], 
     StyleBox[",", "MR"], 
     StyleBox["QuasiNewton", "MR"], ",", 
     StyleBox["LevenbergMarquardt", "MR"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"method", " ", "=", " ", 
    StyleBox["QuasiNewton", "MR"]}], 
   StyleBox[";", "MR"]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evaluationCount", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"at", "=", "0"}], ";", 
  RowBox[{"dt", "=", "0"}], ";", 
  RowBox[{"ct", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x0", " ", "=", " ", "1.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y0", " ", "=", " ", "1.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"FindMinimum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RosenbrockControlled", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "//", "Hold"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "x0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "y0"}], "}"}]}], "}"}], 
      StyleBox[",",
       FormatType->StandardForm], 
      RowBox[{
       StyleBox["Method",
        FormatType->StandardForm], 
       StyleBox["\[Rule]",
        FormatType->StandardForm], "method"}], 
      StyleBox[",",
       FormatType->StandardForm], 
      RowBox[{"AccuracyGoal", "\[Rule]", "2"}], ",", 
      RowBox[{"StepMonitor", "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ct", "++"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<ct:\>\"", ",", "ct"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dt", "++"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<dt:\>\"", ",", "dt"}], "]"}]}], "}"}]}], 
      StyleBox[",",
       FormatType->StandardForm], 
      RowBox[{"Compiled", "\[Rule]", "False"}]}], "]"}], ",", "dt", ",", 
    "ct"}], "}"}], "//", "Timing"}]}], "Input",
 CellChangeTimes->{{3.5718451130604267`*^9, 3.5718451194347916`*^9}, {
   3.5718453967861767`*^9, 3.5718454021414833`*^9}, {3.5718460606513934`*^9, 
   3.5718460880918417`*^9}, {3.571846161399415*^9, 3.571846257925522*^9}, {
   3.571846293023529*^9, 3.571846338722143*^9}, {3.571846399110898*^9, 
   3.5718464020593033`*^9}, {3.571846440709078*^9, 3.571846442105158*^9}, 
   3.571846482328001*^9, {3.5718465462033677`*^9, 3.571846573214635*^9}, 
   3.5718466129369073`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", "1.01`", 
   "\[InvisibleSpace]", "\<\", y = \"\>", "\[InvisibleSpace]", "1.02`", 
   "\[InvisibleSpace]", "\<\", f = \"\>", "\[InvisibleSpace]", 
   "0.00010099999999999996`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 1, ", x = ", 1.01, ", y = ", 1.02, ", f = ", 
   0.00010099999999999996`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846614763012*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["dt:", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846614789013*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", "1.01`", 
   "\[InvisibleSpace]", "\<\", y = \"\>", "\[InvisibleSpace]", "1.02`", 
   "\[InvisibleSpace]", "\<\", f = \"\>", "\[InvisibleSpace]", 
   "0.00010099999999999996`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 2, ", x = ", 1.01, ", y = ", 1.02, ", f = ", 
   0.00010099999999999996`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846614839016*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["dt:", 2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846614894019*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", 
   "1.010000015050173`", "\[InvisibleSpace]", "\<\", y = \"\>", 
   "\[InvisibleSpace]", "1.02`", "\[InvisibleSpace]", "\<\", f = \"\>", 
   "\[InvisibleSpace]", "0.00010100090912309715`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 3, ", x = ", 1.010000015050173, ", y = ", 
   1.02, ", f = ", 0.00010100090912309715`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846614945022*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["dt:", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.5718466149890246`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", "1.01`", 
   "\[InvisibleSpace]", "\<\", y = \"\>", "\[InvisibleSpace]", 
   "1.0200000151991844`", "\[InvisibleSpace]", "\<\", f = \"\>", 
   "\[InvisibleSpace]", "0.00010099969603941436`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 4, ", x = ", 1.01, ", y = ", 
   1.0200000151991844`, ", f = ", 0.00010099969603941436`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.5718466150380273`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["dt:", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.57184661508103*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", 
   "0.9666451668851432`", "\[InvisibleSpace]", "\<\", y = \"\>", 
   "\[InvisibleSpace]", "1.03435335088381`", 
   "\[InvisibleSpace]", "\<\", f = \"\>", "\[InvisibleSpace]", 
   "1.0001222346202778`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 5, ", x = ", 0.9666451668851432, ", y = ", 
   1.03435335088381, ", f = ", 1.0001222346202778`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.5718466151260324`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["dt:", 5],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846615173035*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", 
   "0.9666451668851432`", "\[InvisibleSpace]", "\<\", y = \"\>", 
   "\[InvisibleSpace]", "1.03435335088381`", 
   "\[InvisibleSpace]", "\<\", f = \"\>", "\[InvisibleSpace]", 
   "1.0001222346202778`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 6, ", x = ", 0.9666451668851432, ", y = ", 
   1.03435335088381, ", f = ", 1.0001222346202778`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.5718466152190375`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["dt:", 6],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.5718466152680407`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", 
   "0.9666451817863044`", "\[InvisibleSpace]", "\<\", y = \"\>", 
   "\[InvisibleSpace]", "1.03435335088381`", 
   "\[InvisibleSpace]", "\<\", f = \"\>", "\[InvisibleSpace]", 
   "1.0001216577462493`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 7, ", x = ", 0.9666451817863044, ", y = ", 
   1.03435335088381, ", f = ", 1.0001216577462493`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.5718466153180437`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["dt:", 7],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846615371046*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "8", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", 
   "0.9666451668851432`", "\[InvisibleSpace]", "\<\", y = \"\>", 
   "\[InvisibleSpace]", "1.034353366296876`", 
   "\[InvisibleSpace]", "\<\", f = \"\>", "\[InvisibleSpace]", 
   "1.0001225427289453`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 8, ", x = ", 0.9666451668851432, ", y = ", 
   1.034353366296876, ", f = ", 1.0001225427289453`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.57184661542505*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["dt:", 8],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846615481053*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "9", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", 
   "1.0099394623336795`", "\[InvisibleSpace]", "\<\", y = \"\>", 
   "\[InvisibleSpace]", "1.0200200420184777`", 
   "\[InvisibleSpace]", "\<\", f = \"\>", "\[InvisibleSpace]", 
   "0.00009897204730168456`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 9, ", x = ", 1.0099394623336795`, ", y = ", 
   1.0200200420184777`, ", f = ", 0.00009897204730168456],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846615535056*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["dt:", 9],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846615590059*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", 
   "1.0099394623336795`", "\[InvisibleSpace]", "\<\", y = \"\>", 
   "\[InvisibleSpace]", "1.0200200420184777`", 
   "\[InvisibleSpace]", "\<\", f = \"\>", "\[InvisibleSpace]", 
   "0.00009897204730168456`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 10, ", x = ", 1.0099394623336795`, ", y = ", 
   1.0200200420184777`, ", f = ", 0.00009897204730168456],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.5718466156470623`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["dt:", 10],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.5718466157040653`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "11", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", 
   "1.0099394773829502`", "\[InvisibleSpace]", "\<\", y = \"\>", 
   "\[InvisibleSpace]", "1.0200200420184777`", 
   "\[InvisibleSpace]", "\<\", f = \"\>", "\[InvisibleSpace]", 
   "0.00009897208924446575`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 11, ", x = ", 1.0099394773829502`, ", y = ", 
   1.0200200420184777`, ", f = ", 0.00009897208924446575],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846615761069*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm["dt:", 11],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846615821072*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rosenbrock, evaluation No. \"\>", "\[InvisibleSpace]", "12", 
   "\[InvisibleSpace]", "\<\", x = \"\>", "\[InvisibleSpace]", 
   "1.0099394623336795`", "\[InvisibleSpace]", "\<\", y = \"\>", 
   "\[InvisibleSpace]", "1.0200200572179607`", 
   "\[InvisibleSpace]", "\<\", f = \"\>", "\[InvisibleSpace]", 
   "0.00009897217598670717`"}],
  SequenceForm[
  "Rosenbrock, evaluation No. ", 12, ", x = ", 1.0099394623336795`, ", y = ", 
   1.0200200572179607`, ", f = ", 0.00009897217598670717],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846615881076*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "12"}],
  SequenceForm["dt:", 12],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.571846615943079*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ct:\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["ct:", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.571846226883864*^9, 3.571846258801572*^9}, {
   3.5718462940925903`*^9, 3.5718463396471963`*^9}, 3.5718464031669054`*^9, 
   3.571846442881202*^9, {3.571846484465205*^9, 3.5718465070628986`*^9}, {
   3.5718465473265696`*^9, 3.5718465746347165`*^9}, 3.5718466160000825`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.015999999999999903`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.00009897204730168456`", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "1.0099394623336795`"}], ",", 
         RowBox[{"y", "\[Rule]", "1.0200200420184777`"}]}], "}"}]}], "}"}], 
     ",", "12", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5718462268994637`*^9, 3.5718462671170473`*^9}, {
   3.5718463067973175`*^9, 3.57184634075826*^9}, 3.5718464046957083`*^9, {
   3.571846457947064*^9, 3.571846508388901*^9}, 3.571846548309371*^9, 
   3.571846581641117*^9, 3.571846616065086*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.571844211158723*^9, 3.5718442144409113`*^9}}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.571863590477014*^9}],

Cell[CellGroupData[{

Cell["Second Example : Using Analysis Function", "Subsection",
 CellChangeTimes->{{3.571866722395499*^9, 3.5718667389864483`*^9}}],

Cell[CellGroupData[{

Cell["MathTestAnFunc2 (nD)", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["x1", "2"], "+", 
    SuperscriptBox["x2", "2"], "+", 
    SuperscriptBox["x3", "2"], "+", 
    SuperscriptBox["x4", "2"], "+", 
    SuperscriptBox["x5", "2"], "+"}], "..."}], "+", 
  SuperscriptBox["xn", "2"]}]], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MathTestAnFunc2", "[", 
    RowBox[{
    "p_", ",", "f1_", ",", "f2_", ",", "f3_", ",", "f4_", ",", "f5_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"obj", ",", "i", ",", "ret"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"obj", "=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "p", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ret", " ", "=", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"f1", ",", "obj", ",", "\[IndentingNewLine]", "0", ",", 
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "f3", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"p", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "p", "]"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "0", ",", 
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "f5"}], "}"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"++", "evaluationCount"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<MathTestAnFunc2 No. \>\"", ",", "evaluationCount", ",", 
        "\"\<: \>\"", " ", ",", "p", ",", "\"\<, obj=\>\"", ",", 
        RowBox[{"ret", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "ret"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5718645641302795`*^9, 3.5718646296514106`*^9}, {
   3.5719095259938583`*^9, 3.571909531847193*^9}, {3.5719117895772877`*^9, 
   3.5719119559386005`*^9}, 3.5719120076392345`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MathTestAnFunc2", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"MathTestAnFunc2 No. \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   "\[InvisibleSpace]", "\<\", obj=\"\>", "\[InvisibleSpace]", "91"}],
  SequenceForm[
  "MathTestAnFunc2 No. ", 4, ": ", {1, 2, 3, 4, 5, 6}, ", obj=", 91],
  Editable->False]], "Print",
 CellChangeTimes->{{3.5719119602668486`*^9, 3.5719119670567493`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", 
   RowBox[{"91", " ", "Null"}], ",", "0", ",", 
   RowBox[{"{", "}"}], ",", "Null", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "Null"}], ",", 
     RowBox[{"4", " ", "Null"}], ",", 
     RowBox[{"6", " ", "Null"}], ",", 
     RowBox[{"8", " ", "Null"}], ",", 
     RowBox[{"10", " ", "Null"}], ",", 
     RowBox[{"12", " ", "Null"}]}], "}"}], ",", "0", ",", 
   RowBox[{"{", "}"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.5718645268621473`*^9, 3.571864528949267*^9}, {
  3.5718646179045897`*^9, 3.571864630088211*^9}, {3.5719095432726135`*^9, 
  3.5719095433194137`*^9}, {3.571911919707528*^9, 3.571911926784933*^9}, {
  3.5719119602688484`*^9, 3.5719119670567493`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5718667572606697`*^9, 3.5718667575456867`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "evaluationCount", "]"}], "\[IndentingNewLine]", 
 RowBox[{"IsDefined", "[", "evaluationCount", "]"}]}], "Input",
 CellChangeTimes->{{3.571912380327383*^9, 3.5719124238276873`*^9}}],

Cell[BoxData[
 RowBox[{"IsDefined", "[", "evaluationCount", "]"}]], "Output",
 CellChangeTimes->{{3.571912388236597*^9, 3.5719124249757533`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"++", "evaluationCount"}]], "Input",
 CellChangeTimes->{{3.5719123595637465`*^9, 3.571912364430955*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PreIncrement", "::", "\<\"rvalue\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(evaluationCount\\) is not a variable with a value, \
so its value cannot be changed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/rvalue\\\", ButtonNote -> \
\\\"PreIncrement::rvalue\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.571912431194109*^9}],

Cell[BoxData[
 RowBox[{"++", "evaluationCount"}]], "Output",
 CellChangeTimes->{{3.5719123651329565`*^9, 3.57191237269897*^9}, 
   3.5719124311981087`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Third Example : Table of minimizations by different methods", \
"Subsection",
 CellChangeTimes->{{3.571866781812074*^9, 3.571866802601263*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"thisanfunc", "=", "MathTestAnFunc2"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thisancd", "=", "cd0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ct", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dt", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"VarName", "[", 
      RowBox[{"prefix_", ",", "i_"}], "]"}], ":=", 
     RowBox[{"prefix", "<>", 
      RowBox[{"ToString", "[", "i", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"VarName", "[", "i_", "]"}], ":=", 
     RowBox[{"VarName", "[", 
      RowBox[{"\"\<xx\>\"", ",", "i"}], "]"}]}], ";"}], "\[IndentingNewLine]",
    
   RowBox[{
    RowBox[{"VarPrefix", "=", "\"\<xx\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "\"\<xx*\>\"", "]"}], ";", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{"Unfortunately", ",", " ", 
      RowBox[{"we", " ", "can", " ", "not", " ", "use", " ", "here", " ", 
       RowBox[{"VarPrefix", "<>", "\"\<\>\""}], "*", "\"\< . \>"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"par", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "12", ",", "3", ",", "34", ",", "5", ",", "6"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"Length", "[", "par", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Var. name \>\"", ",", "i", ",", "\"\<: \>\"", ",", 
        RowBox[{"VarName", "[", "VarPerfixi", "]"}]}], "]"}]}], "]"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"par1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"VarName", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "par", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"par0", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"VarName", "[", "i", "]"}], "]"}], ",", 
        RowBox[{"par", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "par", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"methFM", "=", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["ConjugateGradient", "MR"], ",", 
       StyleBox["Gradient", "MR"], ",", 
       StyleBox["Newton", "MR"], 
       StyleBox[",", "MR"], 
       StyleBox["QuasiNewton", "MR"], ",", 
       StyleBox["LevenbergMarquardt", "MR"]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"methFM", "=", 
     RowBox[{"{", 
      StyleBox["ConjugateGradient", "MR"], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"evaluationCount", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resFM", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"at", "=", "0"}], ";", 
        RowBox[{"dt", "=", "0"}], ";", 
        RowBox[{"ct", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FindMinimum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"thisanfunc", "[", 
               RowBox[{
               "par1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], 
               "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "  ", 
             RowBox[{"(*", " ", 
              RowBox[{"//", "Hold"}], "  ", "*)"}], " ", ",", "par0", 
             StyleBox[",",
              FormatType->StandardForm], 
             RowBox[{
              StyleBox["Method",
               FormatType->StandardForm], 
              StyleBox["\[Rule]",
               FormatType->StandardForm], " ", 
              RowBox[{"methFM", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], 
             StyleBox[",",
              FormatType->StandardForm], 
             RowBox[{"AccuracyGoal", "\[Rule]", "2"}], ",", 
             RowBox[{"StepMonitor", "\[RuleDelayed]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ct", "++"}], ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"\"\<ct:\>\"", ",", "ct"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"dt", "++"}], ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<dt:\>\"", ",", "dt", ",", "\"\<, num. eval.: \>\"", ",",
                   "evaluationCount"}], "]"}]}], "}"}]}], 
             StyleBox[",",
              FormatType->StandardForm], 
             RowBox[{"Compiled", "\[Rule]", "False"}]}], "]"}], ",", "dt", 
           ",", "ct"}], "}"}], "//", "Timing"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "methFM", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "methFM", 
   "\[IndentingNewLine]", "resFM", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"//", "MatrixForm"}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5718614139401684`*^9, 3.5718614973323717`*^9}, {
  3.571861531281592*^9, 3.5718616938309145`*^9}, {3.571861789870855*^9, 
  3.5718617918569684`*^9}, {3.5718621010575857`*^9, 3.571862187056217*^9}, {
  3.5718623384350824`*^9, 3.571862385940298*^9}, {3.571862520598422*^9, 
  3.5718625240304284`*^9}, {3.571862583997737*^9, 3.5718626262101517`*^9}, {
  3.571862855029479*^9, 3.5718628582166615`*^9}, {3.5718628937795005`*^9, 
  3.571862894262528*^9}, {3.5718629410372033`*^9, 3.57186301009499*^9}, {
  3.571863053541651*^9, 3.5718630769099874`*^9}, {3.571909607641485*^9, 
  3.57190970431622*^9}, {3.571909751109073*^9, 3.571909818969903*^9}, {
  3.571909864738521*^9, 3.57190988552271*^9}, {3.571911978148369*^9, 
  3.5719119857299824`*^9}, {3.5719120281564083`*^9, 3.5719120326776667`*^9}, {
  3.57191206594757*^9, 3.571912074650028*^9}, {3.571912127760375*^9, 
  3.571912156403906*^9}, {3.571912191221897*^9, 3.5719123504221306`*^9}, {
  3.571912492395471*^9, 3.5719125412972684`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xx1", ",", "xx2", ",", "xx3", ",", "xx4", ",", "xx5", ",", "xx6"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.5718630777100325`*^9, 3.5718636421669703`*^9, 3.5718646411996856`*^9, 
   3.5718648813606596`*^9, {3.571909683864584*^9, 3.571909707763826*^9}, 
   3.571909752489152*^9, 3.5719098262723207`*^9, {3.5719098702278347`*^9, 
   3.571909886937791*^9}, {3.5719119901002316`*^9, 3.5719120355058284`*^9}, {
   3.5719120761320305`*^9, 3.5719121000859265`*^9}, {3.571912132861584*^9, 
   3.571912158413021*^9}, 3.571912196037173*^9, {3.571912253312574*^9, 
   3.571912354275337*^9}, 3.571912501056967*^9, 3.571912543335385*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xx1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xx2", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xx3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xx4", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xx5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xx6", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5718630777100325`*^9, 3.5718636421669703`*^9, 3.5718646411996856`*^9, 
   3.5718648813606596`*^9, {3.571909683864584*^9, 3.571909707763826*^9}, 
   3.571909752489152*^9, 3.5719098262723207`*^9, {3.5719098702278347`*^9, 
   3.571909886937791*^9}, {3.5719119901002316`*^9, 3.5719120355058284`*^9}, {
   3.5719120761320305`*^9, 3.5719121000859265`*^9}, {3.571912132861584*^9, 
   3.571912158413021*^9}, 3.571912196037173*^9, {3.571912253312574*^9, 
   3.571912354275337*^9}, 3.571912501056967*^9, 3.571912543341385*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"MathTestAnFunc2 No. \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "xx1", ",", "xx2", ",", "xx3", ",", "xx4", ",", "xx5", ",", "xx6"}], 
    "}"}], "\[InvisibleSpace]", "\<\", obj=\"\>", "\[InvisibleSpace]", 
   RowBox[{
    SuperscriptBox["xx1", "2"], "+", 
    SuperscriptBox["xx2", "2"], "+", 
    SuperscriptBox["xx3", "2"], "+", 
    SuperscriptBox["xx4", "2"], "+", 
    SuperscriptBox["xx5", "2"], "+", 
    SuperscriptBox["xx6", "2"]}]}],
  SequenceForm[
  "MathTestAnFunc2 No. ", 1, 
   ": ", {$CellContext`xx1, $CellContext`xx2, $CellContext`xx3, \
$CellContext`xx4, $CellContext`xx5, $CellContext`xx6}, 
   ", obj=", $CellContext`xx1^2 + $CellContext`xx2^2 + $CellContext`xx3^2 + \
$CellContext`xx4^2 + $CellContext`xx5^2 + $CellContext`xx6^2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.571909707826226*^9, 3.571909752496153*^9, 3.571909826277321*^9, {
   3.5719098702328353`*^9, 3.571909886942791*^9}, {3.571911990273241*^9, 
   3.571912035511829*^9}, {3.571912076163231*^9, 3.5719121001015267`*^9}, {
   3.571912132861584*^9, 3.5719121584500227`*^9}, 3.5719121960441732`*^9, {
   3.5719122533195744`*^9, 3.571912354306537*^9}, 3.571912501063967*^9, 
   3.5719125433433857`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\", num. eval.: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["dt:", 1, ", num. eval.: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.571909707826226*^9, 3.571909752496153*^9, 3.571909826277321*^9, {
   3.5719098702328353`*^9, 3.571909886942791*^9}, {3.571911990273241*^9, 
   3.571912035511829*^9}, {3.571912076163231*^9, 3.5719121001015267`*^9}, {
   3.571912132861584*^9, 3.5719121584500227`*^9}, 3.5719121960441732`*^9, {
   3.5719122533195744`*^9, 3.571912354306537*^9}, 3.571912501063967*^9, 
   3.5719125433453856`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", num. eval.: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["dt:", 2, ", num. eval.: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.571909707826226*^9, 3.571909752496153*^9, 3.571909826277321*^9, {
   3.5719098702328353`*^9, 3.571909886942791*^9}, {3.571911990273241*^9, 
   3.571912035511829*^9}, {3.571912076163231*^9, 3.5719121001015267`*^9}, {
   3.571912132861584*^9, 3.5719121584500227`*^9}, 3.5719121960441732`*^9, {
   3.5719122533195744`*^9, 3.571912354306537*^9}, 3.571912501063967*^9, 
   3.5719125433473854`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\", num. eval.: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["dt:", 3, ", num. eval.: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.571909707826226*^9, 3.571909752496153*^9, 3.571909826277321*^9, {
   3.5719098702328353`*^9, 3.571909886942791*^9}, {3.571911990273241*^9, 
   3.571912035511829*^9}, {3.571912076163231*^9, 3.5719121001015267`*^9}, {
   3.571912132861584*^9, 3.5719121584500227`*^9}, 3.5719121960441732`*^9, {
   3.5719122533195744`*^9, 3.571912354306537*^9}, 3.571912501063967*^9, 
   3.571912543348386*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ct:\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["ct:", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.571909707826226*^9, 3.571909752496153*^9, 3.571909826277321*^9, {
   3.5719098702328353`*^9, 3.571909886942791*^9}, {3.571911990273241*^9, 
   3.571912035511829*^9}, {3.571912076163231*^9, 3.5719121001015267`*^9}, {
   3.571912132861584*^9, 3.5719121584500227`*^9}, 3.5719121960441732`*^9, {
   3.5719122533195744`*^9, 3.571912354306537*^9}, 3.571912501063967*^9, 
   3.5719125433493853`*^9}],

Cell[BoxData[
 RowBox[{"{", "ConjugateGradient", "}"}]], "Output",
 CellChangeTimes->{
  3.5718630777100325`*^9, 3.5718636421669703`*^9, 3.5718646411996856`*^9, 
   3.5718648813606596`*^9, {3.571909683864584*^9, 3.571909707763826*^9}, 
   3.571909752489152*^9, 3.5719098262723207`*^9, {3.5719098702278347`*^9, 
   3.571909886937791*^9}, {3.5719119901002316`*^9, 3.5719120355058284`*^9}, {
   3.5719120761320305`*^9, 3.5719121000859265`*^9}, {3.571912132861584*^9, 
   3.571912158413021*^9}, 3.571912196037173*^9, {3.571912253312574*^9, 
   3.571912354275337*^9}, 3.571912501056967*^9, 3.571912543351386*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0.`", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.000013710000000045764`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xx1", "\[Rule]", "0.00010000000000010001`"}], ",", 
          RowBox[{"xx2", "\[Rule]", "0.001200000000000756`"}], ",", 
          RowBox[{"xx3", "\[Rule]", "0.000300000000000189`"}], ",", 
          RowBox[{"xx4", "\[Rule]", "0.003400000000006287`"}], ",", 
          RowBox[{"xx5", "\[Rule]", "0.0005000000000006111`"}], ",", 
          RowBox[{"xx6", "\[Rule]", "0.000600000000000378`"}]}], "}"}]}], 
       "}"}], ",", "3", ",", "1"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5718630777100325`*^9, 3.5718636421669703`*^9, 3.5718646411996856`*^9, 
   3.5718648813606596`*^9, {3.571909683864584*^9, 3.571909707763826*^9}, 
   3.571909752489152*^9, 3.5719098262723207`*^9, {3.5719098702278347`*^9, 
   3.571909886937791*^9}, {3.5719119901002316`*^9, 3.5719120355058284`*^9}, {
   3.5719120761320305`*^9, 3.5719121000859265`*^9}, {3.571912132861584*^9, 
   3.571912158413021*^9}, 3.571912196037173*^9, {3.571912253312574*^9, 
   3.571912354275337*^9}, 3.571912501056967*^9, 3.571912543352386*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5718439923791046`*^9, 3.5718439925663047`*^9}, 
   3.5718440603636527`*^9, {3.571861029644844*^9, 3.571861041865491*^9}, {
   3.571861208174157*^9, 3.571861319577593*^9}, {3.5718613513389482`*^9, 
   3.5718614124269657`*^9}, {3.571863155496278*^9, 3.571863210658745*^9}, {
   3.571863248990096*^9, 3.57186325726857*^9}, {3.5718633268335485`*^9, 
   3.571863328061619*^9}, {3.571863376270376*^9, 3.571863386509962*^9}, {
   3.57186344524043*^9, 3.571863483975298*^9}, {3.571863646929243*^9, 
   3.5718636487153454`*^9}, 3.5718643171379175`*^9, {3.571864663511032*^9, 
   3.5718647305790396`*^9}, {3.5718648142300863`*^9, 3.571864815275288*^9}, 
   3.571864908414973*^9, 3.571909655020133*^9, 3.571909699152611*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dt:\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["dt:", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5718648161332893`*^9, {3.571864887897071*^9, 3.571864909953061*^9}, 
   3.57186692518771*^9, 3.571909658124539*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindMinimum", "::", "\<\"fmgz\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a minimum; it may be a maximum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMinimum/fmgz\\\", \
ButtonNote -> \\\"FindMinimum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5718647319674425`*^9, 3.57186481633609*^9, {3.571864887897071*^9, 
   3.571864909956061*^9}, 3.57186692519071*^9, 3.5719096583741393`*^9}],

Cell[BoxData[
 RowBox[{"{", "ConjugateGradient", "}"}]], "Output",
 CellChangeTimes->{
  3.571861042442692*^9, 3.571861250042552*^9, 3.571861320831664*^9, {
   3.5718613539285526`*^9, 3.571861379487454*^9}, 3.5718630847834377`*^9, {
   3.571863158953476*^9, 3.571863213161004*^9}, 3.5718632578496027`*^9, 
   3.5718633317788315`*^9, {3.5718634594520545`*^9, 3.5718634860657015`*^9}, 
   3.5718636498194084`*^9, 3.5718646485472984`*^9, {3.5718647107577343`*^9, 
   3.5718647319674425`*^9}, 3.57186481639849*^9, {3.571864887897071*^9, 
   3.571864909958061*^9}, 3.57186692519171*^9, 3.571909658452139*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.`", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xx1", "\[Rule]", "1.`"}], ",", 
            RowBox[{"xx2", "\[Rule]", "12.`"}], ",", 
            RowBox[{"xx3", "\[Rule]", "3.`"}], ",", 
            RowBox[{"xx4", "\[Rule]", "34.`"}], ",", 
            RowBox[{"xx5", "\[Rule]", "5.`"}], ",", 
            RowBox[{"xx6", "\[Rule]", "6.`"}]}], "}"}]}], "}"}], ",", "1", 
        ",", "0"}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.571861042442692*^9, 3.571861250042552*^9, 3.571861320831664*^9, {
   3.5718613539285526`*^9, 3.571861379487454*^9}, 3.5718630847834377`*^9, {
   3.571863158953476*^9, 3.571863213161004*^9}, 3.5718632578496027`*^9, 
   3.5718633317788315`*^9, {3.5718634594520545`*^9, 3.5718634860657015`*^9}, 
   3.5718636498194084`*^9, 3.5718646485472984`*^9, {3.5718647107577343`*^9, 
   3.5718647319674425`*^9}, 3.57186481639849*^9, {3.571864887897071*^9, 
   3.571864909958061*^9}, 3.57186692519171*^9, 3.5719096585301394`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.571866853614616*^9, 3.571866853986637*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.571866862569128*^9, 3.5718668627811403`*^9}}],

Cell[CellGroupData[{

Cell["Test of using the derived minimization algorithms:", "Subsection"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xoptshift", ",", "yoptshift"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"22", ",", "10"}], "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"obj0", "[", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "xoptshift"}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", "-", "yoptshift"}], ")"}], "^", "2"}]}]}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input"],

Cell[CellGroupData[{

Cell["Preliminary Test (copy - to delete later)", "Subsubsection",
 CellChangeTimes->{{3.5719126039018793`*^9, 3.5719126294703245`*^9}, {
  3.5719126618945265`*^9, 3.571912672550136*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"thisanfunc", "=", "testanfunc"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thisancd", "=", "cd0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thisp0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thistol", "=", 
   RowBox[{"1", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thismaxit", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thisprintlev", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thisargs", "=", 
   RowBox[{"{", 
    RowBox[{
     StyleBox[
      RowBox[{"Method", "->", 
       StyleBox["QuasiNewton", "MR"]}],
      FormatType->StandardForm], 
     StyleBox[",",
      FormatType->StandardForm], 
     RowBox[{"Compiled", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thisnumconstr", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thistol", "=", "0"}], ";", "\[IndentingNewLine]", 
    RowBox[{"thismaxit", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", "Null"}], "Input"],

Cell[CellGroupData[{

Cell[BoxData["anresults"], "Input"],

Cell[BoxData["anresults"], "Output",
 CellChangeTimes->{3.571912676917386*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"thisargs", "=", 
     RowBox[{"{", "}"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"anresults", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resetplotan", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"saveanresults", "=", "1"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"mathminimize0", "[", 
    RowBox[{
    "thisanfunc", ",", "thisancd", ",", "thisp0", ",", "thistol", ",", 
     "thismaxit", ",", "thisprintlev", ",", "thisargs"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mathminimize, arguments: anfunc = \"\>", "\[InvisibleSpace]", 
   "testanfunc", "\[InvisibleSpace]", "\<\", ancd = \"\>", 
   "\[InvisibleSpace]", "cd0", "\[InvisibleSpace]", "\<\", p0 = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "0"}], "}"}], 
   "\[InvisibleSpace]", "\<\", tolint = \"\>", "\[InvisibleSpace]", 
   FractionBox["1", "1000000"], "\[InvisibleSpace]", "\<\", maxitint = \"\>", 
   "\[InvisibleSpace]", "10000", "\[InvisibleSpace]", "\<\", args = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "}"}]}],
  SequenceForm[
  "mathminimize, arguments: anfunc = ", $CellContext`testanfunc, 
   ", ancd = ", $CellContext`cd0, ", p0 = ", {-10, 0}, ", tolint = ", 
   Rational[1, 1000000], ", maxitint = ", 10000, ", args = ", {}],
  Editable->False]], "Print",
 CellChangeTimes->{3.571912676938387*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim = \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", aux. variables var = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"varmin1i1", ",", "varmin1i2"}], "}"}], 
   "\[InvisibleSpace]", "\<\", representation of starting guess: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"varmin1i1", ",", 
       RowBox[{"-", "10"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"varmin1i2", ",", "0"}], "}"}]}], "}"}]}],
  SequenceForm[
  "dim = ", 2, 
   ", aux. variables var = ", {$CellContext`varmin1i1, \
$CellContext`varmin1i2}, 
   ", representation of starting guess: ", {{$CellContext`varmin1i1, -10}, \
{$CellContext`varmin1i2, 0}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.571912676941387*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Gradient functions after definition: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"0.2`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.2`"}], "+", "varmin1i1"}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        SqrtBox[
         RowBox[{
          RowBox[{"0.1`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.2`"}], "+", "varmin1i1"}], ")"}], "2"]}], "+", 
          RowBox[{"0.005`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[InvisibleSpace]", "+", "varmin1i2"}], ")"}], 
            "2"]}]}]], "]"}], " ", 
       RowBox[{"Sin", "[", 
        SqrtBox[
         RowBox[{
          RowBox[{"0.1`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.2`"}], "+", "varmin1i1"}], ")"}], "2"]}], "+", 
          RowBox[{"0.005`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[InvisibleSpace]", "+", "varmin1i2"}], ")"}], 
            "2"]}]}]], "]"}]}], 
      SqrtBox[
       RowBox[{
        RowBox[{"0.1`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.2`"}], "+", "varmin1i1"}], ")"}], "2"]}], "+", 
        RowBox[{"0.005`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1.`", "\[InvisibleSpace]", "+", "varmin1i2"}], ")"}], 
          "2"]}]}]]], ",", 
     FractionBox[
      RowBox[{"0.01`", " ", 
       RowBox[{"(", 
        RowBox[{"1.`", "\[InvisibleSpace]", "+", "varmin1i2"}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        SqrtBox[
         RowBox[{
          RowBox[{"0.1`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.2`"}], "+", "varmin1i1"}], ")"}], "2"]}], "+", 
          RowBox[{"0.005`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[InvisibleSpace]", "+", "varmin1i2"}], ")"}], 
            "2"]}]}]], "]"}], " ", 
       RowBox[{"Sin", "[", 
        SqrtBox[
         RowBox[{
          RowBox[{"0.1`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.2`"}], "+", "varmin1i1"}], ")"}], "2"]}], "+", 
          RowBox[{"0.005`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[InvisibleSpace]", "+", "varmin1i2"}], ")"}], 
            "2"]}]}]], "]"}]}], 
      SqrtBox[
       RowBox[{
        RowBox[{"0.1`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.2`"}], "+", "varmin1i1"}], ")"}], "2"]}], "+", 
        RowBox[{"0.005`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1.`", "\[InvisibleSpace]", "+", "varmin1i2"}], ")"}], 
          "2"]}]}]]]}], "}"}]}],
  SequenceForm[
  "Gradient functions after definition: ", {
   0.2 (-0.2 + $CellContext`varmin1i1) (0.1 (-0.2 + $CellContext`varmin1i1)^2 + 
      0.005 (1. + $CellContext`varmin1i2)^2)^Rational[-1, 2] 
    Cos[(0.1 (-0.2 + $CellContext`varmin1i1)^2 + 
       0.005 (1. + $CellContext`varmin1i2)^2)^Rational[1, 2]] 
    Sin[(0.1 (-0.2 + $CellContext`varmin1i1)^2 + 
       0.005 (1. + $CellContext`varmin1i2)^2)^Rational[1, 2]], 
    0.01 (1. + $CellContext`varmin1i2) (0.1 (-0.2 + $CellContext`varmin1i1)^2 + 
      0.005 (1. + $CellContext`varmin1i2)^2)^Rational[-1, 2] 
    Cos[(0.1 (-0.2 + $CellContext`varmin1i1)^2 + 
       0.005 (1. + $CellContext`varmin1i2)^2)^Rational[1, 2]] 
    Sin[(0.1 (-0.2 + $CellContext`varmin1i1)^2 + 
       0.005 (1. + $CellContext`varmin1i2)^2)^Rational[1, 2]]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.5719126771293983`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After minimization, res = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"{", 
      RowBox[{"0.007157883683013737`", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"varmin1i1", "\[Rule]", 
          RowBox[{"-", "10.`"}]}], ",", 
         RowBox[{"varmin1i2", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]}], "}"}]}],
  
  SequenceForm[
  "After minimization, res = ", {
   0., {0.007157883683013737, {$CellContext`varmin1i1 -> -10., \
$CellContext`varmin1i2 -> 0.}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.5719126772414045`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.007157883683013737`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10.`"}], ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5719126773204093`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["anresults"], "Input"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.5719126773954134`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5719126095958896`*^9, 3.57191260987669*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"thisanfunc", "=", "testanfunc"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thisancd", "=", "cd0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thisp0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thistol", "=", 
   RowBox[{"1", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thismaxit", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thisprintlev", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thisargs", "=", 
   RowBox[{"{", 
    RowBox[{
     StyleBox[
      RowBox[{"Method", "->", 
       StyleBox["QuasiNewton", "MR"]}],
      FormatType->StandardForm], 
     StyleBox[",",
      FormatType->StandardForm], 
     RowBox[{"Compiled", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thisnumconstr", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thistol", "=", "0"}], ";", "\[IndentingNewLine]", 
    RowBox[{"thismaxit", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", "Null"}], "Input"],

Cell[CellGroupData[{

Cell[BoxData["anresults"], "Input"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"thisargs", "=", 
     RowBox[{"{", "}"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"anresults", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resetplotan", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"saveanresults", "=", "1"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"mathminimize0", "[", 
    RowBox[{
    "thisanfunc", ",", "thisancd", ",", "thisp0", ",", "thistol", ",", 
     "thismaxit", ",", "thisprintlev", ",", "thisargs"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mathminimize, arguments: anfunc = \"\>", "\[InvisibleSpace]", 
   "testanfunc", "\[InvisibleSpace]", "\<\", ancd = \"\>", 
   "\[InvisibleSpace]", "cd0", "\[InvisibleSpace]", "\<\", p0 = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "0"}], "}"}], 
   "\[InvisibleSpace]", "\<\", tolint = \"\>", "\[InvisibleSpace]", 
   FractionBox["1", "1000000"], "\[InvisibleSpace]", "\<\", maxitint = \"\>", 
   "\[InvisibleSpace]", "10000", "\[InvisibleSpace]", "\<\", args = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "}"}]}],
  SequenceForm[
  "mathminimize, arguments: anfunc = ", testanfunc, ", ancd = ", cd0, 
   ", p0 = ", {-10, 0}, ", tolint = ", 
   Rational[1, 1000000], ", maxitint = ", 10000, ", args = ", {}],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim = \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", aux. variables var = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"varmin1i1", ",", "varmin1i2"}], "}"}], 
   "\[InvisibleSpace]", "\<\", representation of starting guess: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"varmin1i1", ",", 
       RowBox[{"-", "10"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"varmin1i2", ",", "0"}], "}"}]}], "}"}]}],
  SequenceForm[
  "dim = ", 2, ", aux. variables var = ", {varmin1i1, varmin1i2}, 
   ", representation of starting guess: ", {{varmin1i1, -10}, {
    varmin1i2, 0}}],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Gradient functions after definition: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "varmin1i1"}], ")"}]}], "-", 
      RowBox[{"400", " ", "varmin1i1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["varmin1i1", "2"]}], "+", "varmin1i2"}], ")"}]}]}], 
     ",", 
     RowBox[{"200", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["varmin1i1", "2"]}], "+", "varmin1i2"}], ")"}]}]}], 
    "}"}]}],
  SequenceForm[
  "Gradient functions after definition: ", {(-2) (1 - varmin1i1) - (400 
     varmin1i1) (-varmin1i1^2 + varmin1i2), 200 (-varmin1i1^2 + varmin1i2)}],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After minimization, res = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.020000000000095497`", " ", "Second"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.6132082694615693`", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"varmin1i1", "\[Rule]", 
          RowBox[{"-", "0.9006707092982855`"}]}], ",", 
         RowBox[{"varmin1i2", "\[Rule]", "0.8086403850112225`"}]}], "}"}]}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  "After minimization, res = ", {
   0.020000000000095497` Second, {
    3.6132082694615693`, {
     varmin1i1 -> -0.9006707092982855, varmin1i2 -> 0.8086403850112225}}}],
  Editable->False]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.6132082694615693`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9006707092982855`"}], ",", "0.8086403850112225`"}], 
    "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["anresults"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.`"}], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1.000121`*^6", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"11.`", ",", "1.`"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "400022.`"}], ",", 
         RowBox[{"-", "20000.`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.`"}], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1.000121`*^6", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"11.`", ",", "1.`"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "400022.`"}], ",", 
         RowBox[{"-", "20000.`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.`"}], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1.000121`*^6", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"11.`", ",", "1.`"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "400022.`"}], ",", 
         RowBox[{"-", "20000.`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.`"}], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1.000121`*^6", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"11.`", ",", "1.`"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "400022.`"}], ",", 
         RowBox[{"-", "20000.`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.`"}], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1.000121`*^6", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"11.`", ",", "1.`"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "400022.`"}], ",", 
         RowBox[{"-", "20000.`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.00623762073723`"}], ",", "0.24967438687186055`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "61603.2851359008`", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"5.75656323386537`", ",", "0.7503256131281395`"}], "}"}], ",",
        "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "49699.402918513304`"}], ",", 
         RowBox[{"-", "4962.54814568258`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.297501457587939`"}], ",", "0.325467574634188`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "32945.09421838132`", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"4.972033882953751`", ",", "0.674532425365812`"}], "}"}], ",",
        "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "31198.510599487265`"}], ",", 
         RowBox[{"-", "3628.610240667254`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.098146600734594`"}], ",", "0.47345165684184076`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "8343.468088542293`", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"3.624694943892753`", ",", "0.5265483431581592`"}], "}"}], 
       ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "11316.50661235396`"}], ",", 
         RowBox[{"-", "1825.0121405602958`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.4106406381955487`"}], ",", "0.5696946204981209`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2758.958054657495`", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"2.8409460176974277`", ",", "0.4303053795018791`"}], "}"}], 
       ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5060.964335739004`"}], ",", 
         RowBox[{"-", "1048.2987332043444`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.8488040897759381`"}], ",", "0.6543362039828569`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "771.941761600949`", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"2.194467885793081`", ",", "0.34566379601714314`"}], "}"}], 
       ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2049.5433992471912`"}], ",", 
         RowBox[{"-", "552.7480716778756`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.461005469879723`"}], ",", "0.7158212964096142`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "207.3319678657817`", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"1.7451841734701088`", ",", "0.2841787035903858`"}], "}"}], 
       ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "834.0225622756418`"}], ",", 
         RowBox[{"-", "283.74313732177126`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.190372887123903`"}], ",", "0.7601298819078309`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "47.94394093259682`", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"1.430243005216072`", ",", "0.23987011809216907`"}], "}"}], 
       ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "317.14299805205206`"}], ",", 
         RowBox[{"-", "131.37154569837307`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.021371407199475`"}], ",", "0.7883287389789037`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10.581855470537835`", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"1.2330426682205715`", ",", "0.21167126102109635`"}], "}"}], 
       ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "108.16984696727835`"}], ",", 
         RowBox[{"-", "50.97416249314646`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9327519542332007`"}], ",", "0.8032445355079826`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4.181509296356323`", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"1.129507418725218`", ",", "0.19675546449201742`"}], "}"}], 
       ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "28.781798164979275`"}], ",", 
         RowBox[{"-", "13.356334523574453`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9006707092982855`"}], ",", "0.8086403850112225`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3.6132082694615693`", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"1.092030324287063`", ",", "0.19135961498877752`"}], "}"}], 
       ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.726273162139047`"}], ",", 
         RowBox[{"-", "0.5134683153308561`"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], 
    "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"thisargs", "=", 
   RowBox[{"{", 
    RowBox[{"Method", "->", 
     StyleBox["NelderMead", "MR"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thisargs", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thisargs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"StepMonitor", "\[Rule]", "None"}], ",", 
     RowBox[{"Method", "->", 
      StyleBox["NelderMead", "MR"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]",
 
 RowBox[{
  RowBox[{
   RowBox[{"thistol", "=", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"anresults", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resetplotan", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"saveanresults", "=", "1"}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"mathoptimize0", "[", 
  RowBox[{
  "thisanfunc", ",", "thisancd", ",", "thisp0", ",", "thisnumconstr", ",", 
   "thistol", ",", "thismaxit", ",", "thisprintlev", ",", "thisargs"}], 
  "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mathminimize, arguments: anfunc = \"\>", "\[InvisibleSpace]", 
   "testanfunc", "\[InvisibleSpace]", "\<\", ancd = \"\>", 
   "\[InvisibleSpace]", "cd0", "\[InvisibleSpace]", "\<\", p0 = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "0"}], "}"}], 
   "\[InvisibleSpace]", "\<\", numconstrint: \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", tolint = \"\>", "\[InvisibleSpace]", 
   "Automatic", "\[InvisibleSpace]", "\<\", maxitint = \"\>", 
   "\[InvisibleSpace]", "10000", "\[InvisibleSpace]", "\<\", args = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"StepMonitor", "\[Rule]", "None"}], ",", 
     RowBox[{"Method", "\[Rule]", "NelderMead"}]}], "}"}]}],
  SequenceForm[
  "mathminimize, arguments: anfunc = ", testanfunc, ", ancd = ", cd0, 
   ", p0 = ", {-10, 0}, ", numconstrint: ", 2, ", tolint = ", Automatic, 
   ", maxitint = ", 10000, ", args = ", {
   StepMonitor -> None, Method -> NelderMead}],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim = \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", aux. variables var = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"varmin2i1", ",", "varmin2i2"}], "}"}], 
   "\[InvisibleSpace]", "\<\", representation of starting guess: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"varmin2i1", ",", 
       RowBox[{"-", "10"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"varmin2i2", ",", "0"}], "}"}]}], "}"}]}],
  SequenceForm[
  "dim = ", 2, ", aux. variables var = ", {varmin2i1, varmin2i2}, 
   ", representation of starting guess: ", {{varmin2i1, -10}, {
    varmin2i2, 0}}],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Problem definition: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "varmin2i1"}], ")"}], "2"], "+", 
      RowBox[{"100", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["varmin2i1", "2"]}], "+", "varmin2i2"}], ")"}], 
        "2"]}]}], ",", 
     RowBox[{
      RowBox[{"1", "-", "varmin2i1", "-", "varmin2i2"}], "\[LessEqual]", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"1", "-", "varmin2i2"}], "\[LessEqual]", "0"}]}], "}"}]}],
  SequenceForm[
  "Problem definition: ", {(1 - varmin2i1)^2 + 
    100 (-varmin2i1^2 + varmin2i2)^2, 1 - varmin2i1 - varmin2i2 <= 0, 
    1 - varmin2i2 <= 0}],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After optimization, res = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.6609999999999445`", " ", "Second"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.840356704265595`", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"varmin2i1", "\[Rule]", 
          RowBox[{"-", "1.6127712932871434`"}]}], ",", 
         RowBox[{"varmin2i2", "\[Rule]", "2.6127712926793603`"}]}], "}"}]}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  "After optimization, res = ", {
   0.6609999999999445 Second, {
    6.840356704265595, {
     varmin2i1 -> -1.6127712932871434`, varmin2i2 -> 2.6127712926793603`}}}],
  Editable->False]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.840356704265595`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6127712932871434`"}], ",", "2.6127712926793603`"}], 
    "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["anresults"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"varmin2i1", ",", "varmin2i2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "varmin2i1"}], ")"}], "2"], "+", 
        RowBox[{"100", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["varmin2i1", "2"]}], "+", "varmin2i2"}], ")"}], 
          "2"]}]}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "-", "varmin2i1", "-", "varmin2i2"}], ",", 
         RowBox[{"1", "-", "varmin2i2"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "varmin2i1"}], ")"}]}], "-", 
          RowBox[{"400", " ", "varmin2i1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["varmin2i1", "2"]}], "+", "varmin2i2"}], 
            ")"}]}]}], ",", 
         RowBox[{"200", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["varmin2i1", "2"]}], "+", "varmin2i2"}], 
           ")"}]}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"varmin2i1", ",", "varmin2i2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "varmin2i1"}], ")"}], "2"], "+", 
        RowBox[{"100", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["varmin2i1", "2"]}], "+", "varmin2i2"}], ")"}], 
          "2"]}]}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "-", "varmin2i1", "-", "varmin2i2"}], ",", 
         RowBox[{"1", "-", "varmin2i2"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "varmin2i1"}], ")"}]}], "-", 
          RowBox[{"400", " ", "varmin2i1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["varmin2i1", "2"]}], "+", "varmin2i2"}], 
            ")"}]}]}], ",", 
         RowBox[{"200", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["varmin2i1", "2"]}], "+", "varmin2i2"}], 
           ")"}]}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"varmin2i1", ",", "varmin2i2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "varmin2i1"}], ")"}], "2"], "+", 
        RowBox[{"100", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["varmin2i1", "2"]}], "+", "varmin2i2"}], ")"}], 
          "2"]}]}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "-", "varmin2i1", "-", "varmin2i2"}], ",", 
         RowBox[{"1", "-", "varmin2i2"}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "varmin2i1"}], ")"}]}], "-", 
          RowBox[{"400", " ", "varmin2i1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["varmin2i1", "2"]}], "+", "varmin2i2"}], 
            ")"}]}]}], ",", 
         RowBox[{"200", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["varmin2i1", "2"]}], "+", "varmin2i2"}], 
           ")"}]}]}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "cd0"}], "}"}]}], 
    "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.571866865781312*^9, 3.5718668662133365`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5718668227788525`*^9, 3.571866823004865*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.571843961481838*^9, 3.571843961680849*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5718439625438986`*^9, 3.5718439627579107`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing Optimization Utilities", "Subtitle",
 CellChangeTimes->{{3.5718375668854017`*^9, 3.571837576407526*^9}, {
  3.571847133901121*^9, 3.5718471343691216`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.571837579787531*^9, 3.571837580047531*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5718375811575327`*^9, 3.5718375817675333`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"]
},
AutoGeneratedPackage->None,
CellGrouping->Manual,
WindowSize->{1307, 1021},
WindowMargins->{{Automatic, 264}, {Automatic, 9}},
DockedCells->(FrontEndExecute[{
   FrontEnd`NotebookApply[
    FrontEnd`InputNotebook[], #, Placeholder]}]& ),
ShowSelection->True,
Magnification->1.25,
FrontEndVersion->"6.0 for Microsoft Windows (64-bit) (June 19, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[568, 21, 837, 23, 255, "Subsubtitle"],
Cell[1408, 46, 45, 0, 58, "Input"],
Cell[CellGroupData[{
Cell[1478, 50, 416, 16, 87, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1919, 70, 505, 13, 190, "Input"],
Cell[2427, 85, 137, 1, 35, "Output"]
}, Open  ]],
Cell[2579, 89, 26, 0, 35, "Input"]
}, Closed]],
Cell[2620, 92, 45, 0, 50, "Input"],
Cell[CellGroupData[{
Cell[2690, 96, 181, 8, 36, "Subsubtitle"],
Cell[2874, 106, 642, 14, 224, "Subsection"],
Cell[3519, 122, 93, 3, 58, "Subsection"],
Cell[CellGroupData[{
Cell[3637, 129, 586, 16, 94, "Input"],
Cell[4226, 147, 91, 1, 35, "Output"]
}, Open  ]],
Cell[4332, 151, 26, 0, 35, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[4395, 156, 883, 33, 105, "Subtitle"],
Cell[5281, 191, 93, 2, 34, "Text"],
Cell[CellGroupData[{
Cell[5399, 197, 113, 1, 46, "Subsection"],
Cell[5515, 200, 96, 3, 55, "Subsubsection"],
Cell[CellGroupData[{
Cell[5636, 207, 1571, 37, 336, "Input"],
Cell[7210, 246, 296, 6, 27, "Print"],
Cell[7509, 254, 91, 1, 35, "Output"],
Cell[CellGroupData[{
Cell[7625, 259, 57, 1, 35, "Input"],
Cell[7685, 262, 137, 1, 35, "Output"]
}, Open  ]],
Cell[7837, 266, 26, 0, 35, "Input"]
}, Open  ]]
}, Open  ]],
Cell[7890, 270, 26, 0, 35, "Input"]
}, Closed]],
Cell[7931, 273, 26, 0, 27, "Input"],
Cell[7960, 275, 45, 0, 58, "Input"],
Cell[8008, 277, 45, 0, 58, "Input"],
Cell[CellGroupData[{
Cell[8078, 281, 120, 1, 103, "Title"],
Cell[CellGroupData[{
Cell[8223, 286, 120, 1, 62, "Subtitle"],
Cell[8346, 289, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[8397, 293, 62, 1, 35, "Subsubtitle",
 InitializationCell->True],
Cell[8462, 296, 314, 9, 35, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[8801, 309, 699, 21, 77, "Text",
 InitializationCell->True],
Cell[9503, 332, 1905, 45, 364, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[11423, 380, 793, 35, 99, "Text",
 InitializationCell->True],
Cell[12219, 417, 3151, 82, 540, "Input",
 InitializationCell->True],
Cell[15373, 501, 927, 26, 144, "Input",
 InitializationCell->True],
Cell[16303, 529, 1721, 45, 210, "Input",
 InitializationCell->True],
Cell[18027, 576, 53, 1, 35, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[18117, 582, 41, 0, 35, "Subsubtitle"],
Cell[CellGroupData[{
Cell[18183, 586, 57, 0, 46, "Subsection"],
Cell[18243, 588, 823, 15, 160, "Text"],
Cell[19069, 605, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19132, 610, 162, 3, 46, "Subsection"],
Cell[19297, 615, 349, 10, 56, "Text"],
Cell[19649, 627, 162, 3, 34, "Subsubsection"],
Cell[19814, 632, 146, 5, 72, "Text"],
Cell[19963, 639, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20026, 644, 103, 2, 46, "Subsection"],
Cell[20132, 648, 1137, 26, 120, "Text"],
Cell[CellGroupData[{
Cell[21294, 678, 35, 0, 34, "Subsubsection"],
Cell[21332, 680, 72, 0, 34, "Text"],
Cell[21407, 682, 37, 0, 34, "Text"],
Cell[21447, 684, 28, 0, 34, "Text"],
Cell[21478, 686, 26, 0, 35, "Input"]
}, Open  ]],
Cell[21519, 689, 26, 0, 35, "Input"]
}, Open  ]],
Cell[21560, 692, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21623, 697, 31, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[21679, 701, 107, 3, 35, "Input"],
Cell[21789, 706, 39, 1, 38, "Output"],
Cell[CellGroupData[{
Cell[21853, 711, 151, 5, 35, "Input"],
Cell[22007, 718, 39, 1, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22083, 724, 168, 5, 35, "Input"],
Cell[22254, 731, 147, 6, 58, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22450, 743, 139, 4, 35, "Input"],
Cell[22592, 749, 147, 6, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22776, 760, 183, 6, 35, "Input"],
Cell[22962, 768, 124, 4, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23123, 777, 200, 6, 35, "Input"],
Cell[23326, 785, 124, 4, 35, "Output"]
}, Open  ]],
Cell[23465, 792, 26, 0, 35, "Input"],
Cell[23494, 794, 26, 0, 35, "Input"]
}, Open  ]],
Cell[23535, 797, 26, 0, 35, "Input"]
}, Open  ]],
Cell[23576, 800, 92, 1, 35, "Input"]
}, Closed]],
Cell[23683, 804, 26, 0, 27, "Input"],
Cell[CellGroupData[{
Cell[23734, 808, 136, 1, 103, "Title"],
Cell[23873, 811, 456, 14, 58, "Input"],
Cell[24332, 827, 45, 0, 58, "Input"],
Cell[CellGroupData[{
Cell[24402, 831, 89, 2, 62, "Subtitle"],
Cell[24494, 835, 3855, 104, 665, "Text"],
Cell[CellGroupData[{
Cell[28374, 943, 40, 0, 34, "Subsubsection"],
Cell[28417, 945, 1396, 21, 200, "Text"],
Cell[29816, 968, 26, 0, 35, "Input"]
}, Open  ]],
Cell[29857, 971, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[29908, 975, 244, 8, 61, "Subsubtitle"],
Cell[30155, 985, 45, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[30225, 989, 279, 6, 93, "Text"],
Cell[30507, 997, 5341, 133, 980, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[35873, 1134, 45, 0, 34, "Subsubsection"],
Cell[35921, 1136, 26, 0, 35, "Input"],
Cell[35950, 1138, 369, 9, 80, "Input"],
Cell[36322, 1149, 390, 10, 80, "Input"],
Cell[36715, 1161, 26, 0, 35, "Input"]
}, Open  ]]
}, Open  ]],
Cell[36768, 1165, 26, 0, 35, "Input"]
}, Closed]],
Cell[36809, 1168, 45, 0, 50, "Input"],
Cell[CellGroupData[{
Cell[36879, 1172, 347, 9, 61, "Subsubtitle"],
Cell[37229, 1183, 45, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[37299, 1187, 572, 18, 221, "Text"],
Cell[37874, 1207, 6361, 160, 980, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[44260, 1371, 32, 0, 34, "Subsubsection"],
Cell[44295, 1373, 26, 0, 35, "Input"],
Cell[44324, 1375, 365, 9, 80, "Input"],
Cell[44692, 1386, 396, 10, 80, "Input"],
Cell[45091, 1398, 26, 0, 35, "Input"]
}, Open  ]]
}, Open  ]],
Cell[45144, 1402, 26, 0, 35, "Input"]
}, Closed]],
Cell[45185, 1405, 26, 0, 27, "Input"],
Cell[CellGroupData[{
Cell[45236, 1409, 216, 5, 36, "Subsubtitle"],
Cell[45455, 1416, 45, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[45525, 1420, 520, 16, 199, "Text"],
Cell[46048, 1438, 8736, 223, 1481, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[54809, 1665, 44, 0, 34, "Subsubsection"],
Cell[54856, 1667, 4791, 132, 586, "Input"],
Cell[59650, 1801, 26, 0, 35, "Input"]
}, Open  ]]
}, Open  ]],
Cell[59703, 1805, 26, 0, 35, "Input"]
}, Closed]],
Cell[59744, 1808, 26, 0, 27, "Input"],
Cell[CellGroupData[{
Cell[59795, 1812, 219, 5, 61, "Subsubtitle"],
Cell[60017, 1819, 45, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[60087, 1823, 298, 8, 155, "Text"],
Cell[60388, 1833, 7854, 202, 1310, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[68267, 2039, 45, 0, 34, "Subsubsection"],
Cell[68315, 2041, 26, 0, 35, "Input"],
Cell[68344, 2043, 867, 27, 124, "Input"],
Cell[69214, 2072, 353, 9, 80, "Input"],
Cell[69570, 2083, 350, 9, 80, "Input"],
Cell[69923, 2094, 354, 9, 80, "Input"],
Cell[70280, 2105, 440, 12, 80, "Input"],
Cell[70723, 2119, 26, 0, 35, "Input"]
}, Open  ]]
}, Open  ]],
Cell[70776, 2123, 26, 0, 35, "Input"]
}, Closed]],
Cell[70817, 2126, 80, 1, 72, "Input"],
Cell[CellGroupData[{
Cell[70922, 2131, 212, 6, 36, "Subsubtitle"],
Cell[71137, 2139, 45, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[71207, 2143, 320, 9, 155, "Text"],
Cell[71530, 2154, 8296, 204, 1332, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[79851, 2362, 49, 0, 34, "Subsubsection"],
Cell[79903, 2364, 26, 0, 35, "Input"],
Cell[79932, 2366, 867, 27, 124, "Input"],
Cell[80802, 2395, 356, 9, 80, "Input"],
Cell[81161, 2406, 353, 9, 80, "Input"],
Cell[81517, 2417, 352, 9, 80, "Input"],
Cell[81872, 2428, 26, 0, 35, "Input"],
Cell[81901, 2430, 357, 9, 80, "Input"],
Cell[82261, 2441, 26, 0, 35, "Input"]
}, Open  ]]
}, Open  ]],
Cell[82314, 2445, 26, 0, 35, "Input"]
}, Closed]],
Cell[82355, 2448, 115, 1, 50, "Input"],
Cell[CellGroupData[{
Cell[82495, 2453, 214, 4, 35, "Subsubtitle"],
Cell[82712, 2459, 1145, 25, 136, "Subsubsection"],
Cell[83860, 2486, 2551, 76, 329, "Input",
 InitializationCell->True],
Cell[86414, 2564, 10290, 231, 1921, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[96729, 2799, 139, 1, 46, "Subsection"],
Cell[CellGroupData[{
Cell[96893, 2804, 1231, 29, 146, "Input"],
Cell[98127, 2835, 1627, 50, 41, "Output"],
Cell[99757, 2887, 889, 22, 35, "Output"],
Cell[100649, 2911, 938, 24, 35, "Output"],
Cell[101590, 2937, 601, 11, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102228, 2953, 782, 23, 124, "Input"],
Cell[103013, 2978, 533, 14, 41, "Output"],
Cell[103549, 2994, 286, 4, 35, "Output"],
Cell[103838, 3000, 291, 4, 35, "Output"],
Cell[104132, 3006, 402, 8, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104571, 3019, 391, 10, 35, "Input"],
Cell[104965, 3031, 246, 6, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105248, 3042, 488, 13, 35, "Input"],
Cell[105739, 3057, 118, 2, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105894, 3064, 604, 17, 35, "Input"],
Cell[106501, 3083, 163, 4, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106701, 3092, 548, 14, 35, "Input"],
Cell[107252, 3108, 238, 5, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107527, 3118, 678, 19, 58, "Input"],
Cell[108208, 3139, 291, 8, 35, "Output"]
}, Open  ]],
Cell[108514, 3150, 26, 0, 35, "Input"]
}, Open  ]],
Cell[108555, 3153, 26, 0, 35, "Input"]
}, Open  ]],
Cell[108596, 3156, 87, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[108708, 3161, 168, 2, 62, "Subtitle"],
Cell[108879, 3165, 422, 8, 76, "Text"],
Cell[CellGroupData[{
Cell[109326, 3177, 133, 1, 46, "Subsection"],
Cell[109462, 3180, 7459, 245, 645, "Subsubsection"],
Cell[116924, 3427, 23165, 640, 2292, "Input",
 InitializationCell->True],
Cell[140092, 4069, 90, 1, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140219, 4075, 248, 6, 69, "Subsection"],
Cell[140470, 4083, 6561, 178, 551, "Subsubsection"],
Cell[147034, 4263, 33214, 711, 3920, "Input",
 InitializationCell->True],
Cell[180251, 4976, 90, 1, 35, "Input"],
Cell[180344, 4979, 91, 1, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180472, 4985, 312, 8, 46, "Subsection"],
Cell[CellGroupData[{
Cell[180809, 4997, 97, 1, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[180931, 5002, 295, 7, 35, "Input"],
Cell[181229, 5011, 1347, 26, 54, "Output"],
Cell[CellGroupData[{
Cell[182601, 5041, 343, 7, 35, "Input"],
Cell[182947, 5050, 1332, 26, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184316, 5081, 201, 5, 35, "Input"],
Cell[184520, 5088, 580, 14, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185137, 5107, 300, 7, 35, "Input"],
Cell[185440, 5116, 1421, 28, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186898, 5149, 199, 5, 35, "Input"],
Cell[187100, 5156, 470, 12, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187607, 5173, 202, 5, 35, "Input"],
Cell[187812, 5180, 537, 15, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188386, 5200, 295, 7, 35, "Input"],
Cell[188684, 5209, 368, 7, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189089, 5221, 293, 7, 35, "Input"],
Cell[189385, 5230, 405, 8, 60, "Output"]
}, Open  ]],
Cell[189805, 5241, 86, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[189916, 5246, 343, 7, 35, "Input"],
Cell[190262, 5255, 1661, 32, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191960, 5292, 141, 4, 35, "Input"],
Cell[192104, 5298, 1105, 32, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193246, 5335, 201, 5, 35, "Input"],
Cell[193450, 5342, 464, 12, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193951, 5359, 199, 5, 35, "Input"],
Cell[194153, 5366, 456, 12, 54, "Output"]
}, Open  ]],
Cell[194624, 5381, 85, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[194734, 5386, 204, 5, 35, "Input"],
Cell[194941, 5393, 510, 14, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195488, 5412, 207, 5, 35, "Input"],
Cell[195698, 5419, 976, 32, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196711, 5456, 250, 6, 35, "Input"],
Cell[196964, 5464, 540, 15, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197541, 5484, 254, 6, 35, "Input"],
Cell[197798, 5492, 997, 32, 64, "Output"]
}, Open  ]],
Cell[198810, 5527, 86, 1, 58, "Input"]
}, Open  ]]
}, Open  ]],
Cell[198923, 5532, 87, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[199035, 5537, 8524, 196, 938, "Input"],
Cell[207562, 5735, 431, 10, 43, "Print"],
Cell[207996, 5747, 146, 2, 27, "Print"],
Cell[208145, 5751, 4519, 78, 309, "Output"],
Cell[212667, 5831, 138, 1, 27, "Print"],
Cell[212808, 5834, 2963, 52, 307, "Output"],
Cell[215774, 5888, 167, 2, 27, "Print"],
Cell[215944, 5892, 5647, 96, 307, "Output"],
Cell[221594, 5990, 141, 1, 27, "Print"],
Cell[221738, 5993, 2979, 52, 307, "Output"],
Cell[224720, 6047, 154, 1, 27, "Print"],
Cell[224877, 6050, 2967, 52, 307, "Output"],
Cell[227847, 6104, 143, 2, 27, "Print"],
Cell[227993, 6108, 2193, 39, 307, "Output"]
}, Open  ]],
Cell[230201, 6150, 92, 1, 35, "Input"],
Cell[230296, 6153, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230359, 6158, 48, 0, 46, "Subsection"],
Cell[CellGroupData[{
Cell[230432, 6162, 124, 1, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[230581, 6167, 1815, 41, 322, "Input"],
Cell[232399, 6210, 109, 1, 27, "Print"],
Cell[232511, 6213, 109, 1, 27, "Print"],
Cell[232623, 6216, 108, 1, 27, "Print"]
}, Open  ]],
Cell[232746, 6220, 91, 1, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232874, 6226, 117, 1, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[233016, 6231, 16687, 465, 1554, "Input"],
Cell[249706, 6698, 2701, 63, 243, "Print"],
Cell[252410, 6763, 1007, 26, 72, "Print"],
Cell[253420, 6791, 1156, 30, 72, "Print"],
Cell[254579, 6823, 2603, 66, 135, "Print"],
Cell[257185, 6891, 324, 7, 50, "Print"],
Cell[257512, 6900, 367, 8, 27, "Print"],
Cell[257882, 6910, 366, 8, 27, "Print"],
Cell[258251, 6920, 411, 10, 50, "Print"],
Cell[258665, 6932, 520, 13, 27, "Print"],
Cell[259188, 6947, 521, 13, 27, "Print"]
}, Open  ]],
Cell[259724, 6963, 91, 1, 35, "Input"]
}, Open  ]],
Cell[259830, 6967, 317, 4, 58, "Input"],
Cell[CellGroupData[{
Cell[260172, 6975, 2772, 59, 432, "Input"],
Cell[262947, 7036, 1571, 34, 35, "Output"]
}, Open  ]],
Cell[264533, 7073, 26, 0, 35, "Input"]
}, Open  ]],
Cell[264574, 7076, 26, 0, 35, "Input"]
}, Closed]],
Cell[264615, 7079, 26, 0, 27, "Input"]
}, Open  ]],
Cell[264656, 7082, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[264707, 7086, 79, 0, 62, "Subtitle"],
Cell[CellGroupData[{
Cell[264811, 7090, 46, 0, 46, "Subsection"],
Cell[CellGroupData[{
Cell[264882, 7094, 2035, 64, 349, "Text"],
Cell[266920, 7160, 7229, 175, 1026, "Input"],
Cell[274152, 7337, 26, 0, 35, "Input"]
}, Open  ]],
Cell[274193, 7340, 26, 0, 35, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[274256, 7345, 1351, 38, 146, "Subsection"],
Cell[275610, 7385, 14225, 331, 2016, "Input"],
Cell[289838, 7718, 26, 0, 35, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[289901, 7723, 1382, 49, 146, "Subsection"],
Cell[291286, 7774, 4144, 96, 608, "Input"],
Cell[295433, 7872, 26, 0, 35, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[295496, 7877, 59, 0, 25, "Subsubsection"],
Cell[295558, 7879, 422, 11, 80, "Input"],
Cell[295983, 7892, 478, 12, 102, "Input"],
Cell[296464, 7906, 183, 4, 80, "Input"],
Cell[296650, 7912, 302, 7, 80, "Input"],
Cell[296955, 7921, 424, 10, 80, "Input"],
Cell[297382, 7933, 302, 7, 80, "Input"],
Cell[297687, 7942, 26, 0, 35, "Input"],
Cell[297716, 7944, 26, 0, 35, "Input"]
}, Closed]],
Cell[297757, 7947, 26, 0, 27, "Input"]
}, Open  ]],
Cell[297798, 7950, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[297849, 7954, 58, 0, 62, "Subtitle"],
Cell[CellGroupData[{
Cell[297932, 7958, 1060, 29, 113, "Subsubtitle"],
Cell[CellGroupData[{
Cell[299017, 7991, 65, 0, 46, "Subsection"],
Cell[299085, 7993, 3123, 91, 337, "Input",
 InitializationCell->True],
Cell[302211, 8086, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302274, 8091, 82, 1, 46, "Subsection"],
Cell[CellGroupData[{
Cell[302381, 8096, 12412, 319, 1041, "Input",
 InitializationCell->True],
Cell[314796, 8417, 306, 5, 70, "Output"]
}, Open  ]],
Cell[315117, 8425, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[315168, 8429, 97, 2, 46, "Subsection"],
Cell[315268, 8433, 992, 20, 256, "Input"],
Cell[CellGroupData[{
Cell[316285, 8457, 59, 0, 34, "Subsubsection"],
Cell[316347, 8459, 486, 12, 102, "Input"],
Cell[316836, 8473, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316899, 8478, 60, 0, 34, "Subsubsection"],
Cell[316962, 8480, 424, 10, 102, "Input"],
Cell[317389, 8492, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317452, 8497, 59, 0, 34, "Subsubsection"],
Cell[317514, 8499, 499, 12, 102, "Input"],
Cell[318016, 8513, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318079, 8518, 60, 0, 34, "Subsubsection"],
Cell[318142, 8520, 433, 10, 102, "Input"],
Cell[318578, 8532, 26, 0, 35, "Input"]
}, Open  ]],
Cell[318619, 8535, 26, 0, 35, "Input"],
Cell[318648, 8537, 26, 0, 35, "Input"]
}, Open  ]],
Cell[318689, 8540, 26, 0, 35, "Input"]
}, Open  ]],
Cell[318730, 8543, 26, 0, 35, "Input"]
}, Closed]],
Cell[318771, 8546, 26, 0, 27, "Input"],
Cell[CellGroupData[{
Cell[318822, 8550, 122, 3, 35, "Subsubtitle"],
Cell[318947, 8555, 71, 0, 34, "Subsubsection"],
Cell[319021, 8557, 3246, 86, 461, "Input",
 InitializationCell->True],
Cell[322270, 8645, 84, 1, 34, "Subsubsection"],
Cell[322357, 8648, 3094, 81, 527, "Input",
 InitializationCell->True],
Cell[325454, 8731, 26, 0, 35, "Input"]
}, Closed]],
Cell[325495, 8734, 26, 0, 27, "Input"],
Cell[CellGroupData[{
Cell[325546, 8738, 103, 2, 35, "Subsubtitle"],
Cell[CellGroupData[{
Cell[325674, 8744, 296, 7, 58, "Input"],
Cell[325973, 8753, 377, 8, 35, "Output"]
}, Open  ]],
Cell[326365, 8764, 2623, 65, 455, "Text"],
Cell[328991, 8831, 45, 0, 58, "Input"],
Cell[CellGroupData[{
Cell[329061, 8835, 731, 27, 56, "Subsubsection"],
Cell[329795, 8864, 940, 23, 205, "Input",
 InitializationCell->True],
Cell[330738, 8889, 26, 0, 35, "Input"]
}, Open  ]],
Cell[330779, 8892, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[330830, 8896, 259, 5, 54, "Subsubsection"],
Cell[331092, 8903, 24487, 600, 4451, "Input",
 InitializationCell->True],
Cell[355582, 9505, 26, 0, 35, "Input"]
}, Open  ]],
Cell[355623, 9508, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[355674, 9512, 3782, 125, 421, "Subsubsection"],
Cell[359459, 9639, 5302, 132, 359, "Input",
 InitializationCell->True],
Cell[364764, 9773, 26, 0, 35, "Input"]
}, Open  ]],
Cell[364805, 9776, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[364856, 9780, 2121, 68, 238, "Subsubsection"],
Cell[366980, 9850, 4236, 100, 645, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[371231, 9953, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[371282, 9957, 3429, 112, 415, "Subsubsection"],
Cell[374714, 10071, 5216, 117, 755, "Input",
 InitializationCell->True],
Cell[379933, 10190, 26, 0, 35, "Input"]
}, Open  ]],
Cell[379974, 10193, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[380025, 10197, 1468, 49, 116, "Subsubsection"],
Cell[381496, 10248, 2919, 73, 447, "Input",
 InitializationCell->True],
Cell[384418, 10323, 26, 0, 35, "Input"]
}, Open  ]],
Cell[384459, 10326, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[384510, 10330, 997, 28, 114, "Subsubsection"],
Cell[385510, 10360, 3095, 84, 667, "Input",
 InitializationCell->True],
Cell[388608, 10446, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388671, 10451, 1259, 39, 135, "Subsubsection"],
Cell[389933, 10492, 4174, 105, 733, "Input",
 InitializationCell->True],
Cell[394110, 10599, 26, 0, 35, "Input"]
}, Open  ]],
Cell[394151, 10602, 26, 0, 35, "Input"]
}, Closed]],
Cell[394192, 10605, 26, 0, 27, "Input"],
Cell[CellGroupData[{
Cell[394243, 10609, 162, 5, 36, "Subsubtitle"],
Cell[CellGroupData[{
Cell[394430, 10618, 50, 0, 46, "Subsection"],
Cell[CellGroupData[{
Cell[394505, 10622, 2092, 57, 294, "Subsubsection"],
Cell[396600, 10681, 19859, 470, 1618, "Input",
 InitializationCell->True],
Cell[416462, 11153, 304, 5, 70, "Output"],
Cell[416769, 11160, 26, 0, 35, "Input"]
}, Open  ]],
Cell[416810, 11163, 26, 0, 35, "Input"],
Cell[416839, 11165, 26, 0, 35, "Input"]
}, Open  ]],
Cell[416880, 11168, 80, 1, 80, "Input"],
Cell[CellGroupData[{
Cell[416985, 11173, 50, 0, 46, "Subsection"],
Cell[CellGroupData[{
Cell[417060, 11177, 5269, 168, 639, "Subsubsection"],
Cell[422332, 11347, 18625, 447, 1283, "Input",
 InitializationCell->True],
Cell[440960, 11796, 26, 0, 35, "Input"]
}, Open  ]],
Cell[441001, 11799, 26, 0, 35, "Input"],
Cell[441030, 11801, 26, 0, 35, "Input"]
}, Open  ]],
Cell[441071, 11804, 26, 0, 35, "Input"]
}, Closed]],
Cell[441112, 11807, 26, 0, 27, "Input"],
Cell[CellGroupData[{
Cell[441163, 11811, 76, 0, 46, "Subsection"],
Cell[441242, 11813, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[441293, 11817, 141, 3, 34, "Subsubsection"],
Cell[441437, 11822, 1529, 35, 300, "Input"],
Cell[442969, 11859, 1327, 30, 256, "Input"],
Cell[444299, 11891, 248, 6, 80, "Input"],
Cell[444550, 11899, 253, 6, 80, "Input"],
Cell[444806, 11907, 253, 6, 80, "Input"],
Cell[445062, 11915, 26, 0, 35, "Input"]
}, Closed]],
Cell[445103, 11918, 45, 0, 50, "Input"],
Cell[CellGroupData[{
Cell[445173, 11922, 102, 2, 34, "Subsubsection"],
Cell[445278, 11926, 364, 9, 80, "Input"],
Cell[445645, 11937, 419, 10, 80, "Input"],
Cell[446067, 11949, 650, 17, 102, "Input"],
Cell[446720, 11968, 595, 13, 102, "Input"],
Cell[447318, 11983, 442, 10, 146, "Input"],
Cell[447763, 11995, 848, 16, 146, "Input"],
Cell[448614, 12013, 230, 5, 80, "Input"],
Cell[448847, 12020, 563, 11, 102, "Input"],
Cell[449413, 12033, 230, 5, 80, "Input"],
Cell[449646, 12040, 224, 5, 80, "Input"],
Cell[449873, 12047, 249, 6, 80, "Input"],
Cell[450125, 12055, 222, 5, 80, "Input"],
Cell[450350, 12062, 222, 5, 80, "Input"],
Cell[450575, 12069, 45, 0, 58, "Input"],
Cell[450623, 12071, 80, 1, 80, "Input"],
Cell[CellGroupData[{
Cell[450728, 12076, 531, 13, 80, "Input"],
Cell[451262, 12091, 692, 16, 146, "Input"],
Cell[451957, 12109, 26, 0, 35, "Input"]
}, Open  ]],
Cell[451998, 12112, 80, 1, 80, "Input"],
Cell[452081, 12115, 546, 13, 80, "Input"],
Cell[452630, 12130, 531, 13, 80, "Input"],
Cell[453164, 12145, 870, 21, 124, "Input"],
Cell[454037, 12168, 26, 0, 35, "Input"],
Cell[454066, 12170, 26, 0, 35, "Input"]
}, Closed]],
Cell[454107, 12173, 45, 0, 50, "Input"],
Cell[CellGroupData[{
Cell[454177, 12177, 45, 0, 34, "Subsubsection"],
Cell[454225, 12179, 3578, 83, 652, "Input"],
Cell[457806, 12264, 238, 6, 80, "Input"],
Cell[CellGroupData[{
Cell[458069, 12274, 30, 0, 34, "Text"],
Cell[458102, 12276, 223, 5, 80, "Input"],
Cell[458328, 12283, 242, 6, 80, "Input"],
Cell[458573, 12291, 515, 14, 80, "Input"],
Cell[459091, 12307, 524, 14, 80, "Input"],
Cell[459618, 12323, 242, 6, 80, "Input"],
Cell[459863, 12331, 770, 21, 102, "Input"],
Cell[460636, 12354, 482, 12, 80, "Input"],
Cell[461121, 12368, 736, 19, 124, "Input"],
Cell[461860, 12389, 26, 0, 35, "Input"]
}, Open  ]],
Cell[461901, 12392, 26, 0, 35, "Input"],
Cell[461930, 12394, 26, 0, 35, "Input"]
}, Closed]],
Cell[461971, 12397, 45, 0, 50, "Input"],
Cell[CellGroupData[{
Cell[462041, 12401, 61, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[462127, 12405, 39, 0, 35, "Input"],
Cell[462169, 12407, 195, 3, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462401, 12415, 43, 0, 34, "Subsubsection"],
Cell[462447, 12417, 1815, 42, 278, "Input"],
Cell[464265, 12461, 203, 5, 80, "Input"],
Cell[464471, 12468, 26, 0, 35, "Input"],
Cell[464500, 12470, 724, 18, 146, "Input"],
Cell[465227, 12490, 469, 11, 80, "Input"],
Cell[465699, 12503, 287, 8, 80, "Input"],
Cell[465989, 12513, 982, 24, 212, "Input"],
Cell[466974, 12539, 26, 0, 35, "Input"],
Cell[467003, 12541, 26, 0, 35, "Input"]
}, Open  ]],
Cell[467044, 12544, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[467095, 12548, 44, 0, 34, "Subsubsection"],
Cell[467142, 12550, 113, 3, 55, "Text"],
Cell[CellGroupData[{
Cell[467280, 12557, 2938, 67, 388, "Input"],
Cell[470221, 12626, 45, 0, 58, "Input"],
Cell[470269, 12628, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[470320, 12632, 41, 0, 34, "Text"],
Cell[470364, 12634, 960, 22, 212, "Input"],
Cell[CellGroupData[{
Cell[471349, 12660, 904, 21, 190, "Input"],
Cell[472256, 12683, 2674, 62, 498, "Input"],
Cell[474933, 12747, 26, 0, 35, "Input"]
}, Open  ]],
Cell[474974, 12750, 2674, 62, 498, "Input"],
Cell[477651, 12814, 26, 0, 35, "Input"]
}, Open  ]],
Cell[477692, 12817, 26, 0, 35, "Input"],
Cell[477721, 12819, 26, 0, 35, "Input"]
}, Open  ]],
Cell[477762, 12822, 26, 0, 35, "Input"]
}, Open  ]],
Cell[477803, 12825, 26, 0, 35, "Input"]
}, Closed]],
Cell[477844, 12828, 26, 0, 27, "Input"],
Cell[477873, 12830, 26, 0, 35, "Input"]
}, Open  ]],
Cell[477914, 12833, 26, 0, 35, "Input"],
Cell[477943, 12835, 26, 0, 35, "Input"]
}, Closed]],
Cell[477984, 12838, 26, 0, 27, "Input"],
Cell[478013, 12840, 26, 0, 35, "Input"],
Cell[478042, 12842, 26, 0, 35, "Input"],
Cell[478071, 12844, 26, 0, 35, "Input"]
}, Open  ]],
Cell[478112, 12847, 96, 1, 35, "Input"],
Cell[478211, 12850, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[478262, 12854, 113, 4, 103, "Title"],
Cell[CellGroupData[{
Cell[478400, 12862, 47, 0, 62, "Subtitle"],
Cell[478450, 12864, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[478501, 12868, 96, 2, 35, "Subsubtitle"],
Cell[CellGroupData[{
Cell[478622, 12874, 134, 3, 46, "Subsection"],
Cell[478759, 12879, 1478, 40, 298, "Input",
 InitializationCell->True],
Cell[480240, 12921, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480303, 12926, 211, 6, 46, "Subsection"],
Cell[480517, 12934, 7925, 182, 1222, "Input",
 InitializationCell->True],
Cell[488445, 13118, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488508, 13123, 27, 0, 46, "Subsection"],
Cell[CellGroupData[{
Cell[488560, 13127, 36, 0, 34, "Subsubsection"],
Cell[488599, 13129, 253, 5, 80, "Input"],
Cell[488855, 13136, 251, 6, 80, "Input"],
Cell[489109, 13144, 253, 6, 80, "Input"],
Cell[489365, 13152, 284, 7, 80, "Input"],
Cell[489652, 13161, 26, 0, 35, "Input"]
}, Open  ]],
Cell[489693, 13164, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[489744, 13168, 35, 0, 34, "Subsubsection"],
Cell[489782, 13170, 607, 17, 80, "Input"],
Cell[490392, 13189, 220, 5, 80, "Input"],
Cell[490615, 13196, 249, 6, 80, "Input"],
Cell[490867, 13204, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490930, 13209, 50, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[491005, 13213, 1214, 29, 278, "Input"],
Cell[492222, 13244, 255, 6, 80, "Input"],
Cell[492480, 13252, 290, 7, 80, "Input"],
Cell[492773, 13261, 308, 8, 80, "Input"],
Cell[493084, 13271, 294, 7, 80, "Input"],
Cell[493381, 13280, 216, 5, 80, "Input"],
Cell[493600, 13287, 45, 0, 58, "Input"]
}, Open  ]],
Cell[493660, 13290, 26, 0, 35, "Input"]
}, Open  ]],
Cell[493701, 13293, 45, 0, 58, "Input"],
Cell[493749, 13295, 262, 6, 80, "Input"],
Cell[494014, 13303, 26, 0, 35, "Input"]
}, Open  ]],
Cell[494055, 13306, 45, 0, 58, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494137, 13311, 55, 0, 35, "Subsubtitle"],
Cell[CellGroupData[{
Cell[494217, 13315, 69, 0, 46, "Subsection"],
Cell[494289, 13317, 800, 27, 116, "Subsubsection"],
Cell[495092, 13346, 459, 13, 50, "Input"],
Cell[CellGroupData[{
Cell[495576, 13363, 61, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[495662, 13367, 29, 0, 34, "Text"],
Cell[495694, 13369, 558, 17, 80, "Input"],
Cell[496255, 13388, 526, 12, 102, "Input"],
Cell[496784, 13402, 261, 6, 80, "Input"],
Cell[497048, 13410, 214, 5, 80, "Input"],
Cell[497265, 13417, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497328, 13422, 52, 0, 34, "Text"],
Cell[497383, 13424, 620, 18, 80, "Input"],
Cell[498006, 13444, 526, 12, 102, "Input"],
Cell[498535, 13458, 261, 6, 80, "Input"],
Cell[498799, 13466, 214, 5, 80, "Input"],
Cell[499016, 13473, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499079, 13478, 52, 0, 34, "Text"],
Cell[499134, 13480, 419, 11, 80, "Input"],
Cell[499556, 13493, 526, 12, 102, "Input"],
Cell[500085, 13507, 261, 6, 80, "Input"],
Cell[500349, 13515, 214, 5, 80, "Input"],
Cell[500566, 13522, 251, 6, 80, "Input"],
Cell[500820, 13530, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500883, 13535, 29, 0, 34, "Text"],
Cell[500915, 13537, 530, 15, 80, "Input"],
Cell[501448, 13554, 526, 12, 102, "Input"],
Cell[501977, 13568, 261, 6, 80, "Input"],
Cell[502241, 13576, 214, 5, 80, "Input"],
Cell[502458, 13583, 261, 7, 80, "Input"],
Cell[502722, 13592, 301, 8, 80, "Input"],
Cell[503026, 13602, 26, 0, 35, "Input"]
}, Open  ]],
Cell[503067, 13605, 26, 0, 35, "Input"],
Cell[503096, 13607, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503159, 13612, 139, 4, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[503323, 13620, 60, 0, 34, "Text"],
Cell[503386, 13622, 629, 19, 80, "Input"],
Cell[504018, 13643, 538, 12, 124, "Input"],
Cell[504559, 13657, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504622, 13662, 59, 0, 34, "Text"],
Cell[504684, 13664, 629, 19, 80, "Input"],
Cell[505316, 13685, 258, 7, 80, "Input"],
Cell[505577, 13694, 744, 17, 190, "Input"],
Cell[506324, 13713, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506387, 13718, 62, 0, 34, "Text"],
Cell[506452, 13720, 722, 21, 80, "Input"],
Cell[507177, 13743, 258, 7, 80, "Input"],
Cell[507438, 13752, 270, 7, 102, "Input"],
Cell[507711, 13761, 995, 20, 300, "Input"],
Cell[508709, 13783, 609, 14, 168, "Input"],
Cell[509321, 13799, 293, 7, 80, "Input"],
Cell[509617, 13808, 218, 5, 80, "Input"],
Cell[509838, 13815, 26, 0, 35, "Input"]
}, Open  ]],
Cell[509879, 13818, 26, 0, 35, "Input"]
}, Open  ]],
Cell[509920, 13821, 26, 0, 35, "Input"]
}, Open  ]],
Cell[509961, 13824, 26, 0, 35, "Input"]
}, Closed]],
Cell[510002, 13827, 152, 2, 138, "Input"],
Cell[CellGroupData[{
Cell[510179, 13833, 122, 5, 46, "Subsection"],
Cell[510304, 13840, 161, 3, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[510490, 13847, 353, 9, 116, "Input"],
Cell[510846, 13858, 98, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510981, 13864, 626, 18, 102, "Input"],
Cell[511610, 13884, 290, 7, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[511937, 13896, 760, 21, 114, "Subsubsection"],
Cell[CellGroupData[{
Cell[512722, 13921, 848, 24, 124, "Input"],
Cell[513573, 13947, 101, 3, 46, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513711, 13955, 43, 0, 34, "Text"],
Cell[CellGroupData[{
Cell[513779, 13959, 719, 20, 102, "Input"],
Cell[514501, 13981, 289, 7, 43, "Print"],
Cell[514793, 13990, 82, 2, 27, "Print"]
}, Open  ]],
Cell[514890, 13995, 26, 0, 35, "Input"]
}, Open  ]],
Cell[514931, 13998, 26, 0, 35, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[514994, 14003, 711, 20, 146, "Subsubsection"],
Cell[515708, 14025, 378, 9, 58, "Input"],
Cell[CellGroupData[{
Cell[516111, 14038, 60, 1, 35, "Input"],
Cell[516174, 14041, 133, 5, 82, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516344, 14051, 87, 1, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[516456, 14056, 410, 12, 168, "Input"],
Cell[516869, 14070, 45, 1, 35, "Output"],
Cell[516917, 14073, 45, 1, 35, "Output"],
Cell[516965, 14076, 290, 7, 51, "Output"],
Cell[517258, 14085, 83, 2, 35, "Output"]
}, Open  ]],
Cell[517356, 14090, 26, 0, 35, "Input"]
}, Closed]],
Cell[517397, 14093, 26, 0, 27, "Input"]
}, Closed]]
}, Open  ]],
Cell[517450, 14097, 45, 0, 58, "Input"],
Cell[517498, 14099, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[517549, 14103, 49, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[517623, 14107, 450, 14, 35, "Input"],
Cell[518076, 14123, 347, 11, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518460, 14139, 62, 1, 35, "Input"],
Cell[518525, 14142, 312, 9, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518874, 14156, 198, 6, 35, "Input"],
Cell[519075, 14164, 93, 2, 35, "Output"]
}, Open  ]],
Cell[519183, 14169, 26, 0, 35, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[519246, 14174, 47, 0, 25, "Subsubsection"],
Cell[CellGroupData[{
Cell[519318, 14178, 116, 2, 35, "Input"],
Cell[519437, 14182, 88, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[519562, 14188, 69, 1, 35, "Input"],
Cell[519634, 14191, 42, 0, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[519713, 14196, 44, 0, 34, "Text"],
Cell[CellGroupData[{
Cell[519782, 14200, 129, 3, 35, "Input"],
Cell[519914, 14205, 93, 3, 35, "Output"]
}, Open  ]],
Cell[520022, 14211, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520085, 14216, 381, 9, 58, "Input"],
Cell[520469, 14227, 64, 1, 35, "Output"],
Cell[CellGroupData[{
Cell[520558, 14232, 80, 2, 35, "Input"],
Cell[520641, 14236, 31, 0, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520709, 14241, 212, 7, 35, "Input"],
Cell[520924, 14250, 92, 2, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521053, 14257, 255, 9, 35, "Input"],
Cell[521311, 14268, 92, 2, 35, "Output"]
}, Open  ]],
Cell[521418, 14273, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521481, 14278, 382, 9, 58, "Input"],
Cell[521866, 14289, 87, 2, 35, "Output"],
Cell[CellGroupData[{
Cell[521978, 14295, 80, 2, 35, "Input"],
Cell[522061, 14299, 31, 0, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522129, 14304, 212, 7, 35, "Input"],
Cell[522344, 14313, 114, 3, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522495, 14321, 255, 9, 35, "Input"],
Cell[522753, 14332, 114, 3, 35, "Output"]
}, Open  ]],
Cell[522882, 14338, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522945, 14343, 382, 9, 58, "Input"],
Cell[523330, 14354, 64, 1, 35, "Output"],
Cell[CellGroupData[{
Cell[523419, 14359, 212, 7, 35, "Input"],
Cell[523634, 14368, 92, 2, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[523763, 14375, 255, 9, 35, "Input"],
Cell[524021, 14386, 92, 2, 35, "Output"]
}, Open  ]],
Cell[524128, 14391, 26, 0, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524191, 14396, 70, 1, 35, "Input"],
Cell[524264, 14399, 43, 0, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524344, 14404, 207, 5, 58, "Input"],
Cell[524554, 14411, 82, 2, 38, "Output"],
Cell[CellGroupData[{
Cell[524661, 14417, 212, 7, 35, "Input"],
Cell[524876, 14426, 109, 3, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525022, 14434, 255, 9, 35, "Input"],
Cell[525280, 14445, 109, 3, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525426, 14453, 248, 8, 35, "Input"],
Cell[525677, 14463, 85, 2, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525799, 14470, 295, 11, 35, "Input"],
Cell[526097, 14483, 85, 2, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[526219, 14490, 64, 1, 35, "Input"],
Cell[526286, 14493, 223, 8, 35, "Output"]
}, Open  ]],
Cell[526524, 14504, 26, 0, 35, "Input"]
}, Open  ]],
Cell[526565, 14507, 129, 2, 124, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[526731, 14514, 47, 0, 25, "Subsubsection"],
Cell[CellGroupData[{
Cell[526803, 14518, 385, 12, 35, "Input"],
Cell[527191, 14532, 329, 11, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527557, 14548, 778, 20, 102, "Input"],
Cell[528338, 14570, 1299, 37, 150, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529674, 14612, 777, 20, 102, "Input"],
Cell[530454, 14634, 382, 8, 50, "Message"],
Cell[530839, 14644, 112, 3, 46, "Message"],
Cell[530954, 14649, 152, 3, 46, "Message"],
Cell[531109, 14654, 382, 8, 50, "Message"],
Cell[531494, 14664, 112, 3, 46, "Message"],
Cell[531609, 14669, 152, 3, 46, "Message"],
Cell[531764, 14674, 152, 3, 46, "Message"],
Cell[531919, 14679, 147, 4, 64, "Message"],
Cell[532069, 14685, 705, 16, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532811, 14706, 595, 16, 102, "Input"],
Cell[533409, 14724, 713, 18, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[534159, 14747, 597, 16, 102, "Input"],
Cell[534759, 14765, 382, 8, 50, "Message"],
Cell[535144, 14775, 112, 3, 46, "Message"],
Cell[535259, 14780, 152, 3, 46, "Message"],
Cell[535414, 14785, 382, 8, 50, "Message"],
Cell[535799, 14795, 112, 3, 46, "Message"],
Cell[535914, 14800, 152, 3, 46, "Message"],
Cell[536069, 14805, 152, 3, 46, "Message"],
Cell[536224, 14810, 147, 4, 64, "Message"],
Cell[536374, 14816, 802, 20, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537213, 14841, 596, 16, 102, "Input"],
Cell[537812, 14859, 228, 6, 100, "Message"],
Cell[538043, 14867, 1338, 32, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[539418, 14904, 595, 16, 102, "Input"],
Cell[540016, 14922, 691, 17, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540744, 14944, 597, 16, 102, "Input"],
Cell[541344, 14962, 749, 18, 212, "Output"]
}, Open  ]],
Cell[542108, 14983, 45, 0, 58, "Input"],
Cell[542156, 14985, 26, 0, 35, "Input"]
}, Closed]],
Cell[542197, 14988, 26, 0, 27, "Input"],
Cell[542226, 14990, 26, 0, 35, "Input"]
}, Open  ]],
Cell[542267, 14993, 26, 0, 35, "Input"],
Cell[542296, 14995, 45, 0, 58, "Input"],
Cell[542344, 14997, 26, 0, 35, "Input"]
}, Closed]],
Cell[542385, 15000, 26, 0, 27, "Input"],
Cell[542414, 15002, 129, 2, 124, "Input"],
Cell[542546, 15006, 26, 0, 35, "Input"],
Cell[542575, 15008, 80, 1, 80, "Input"],
Cell[542658, 15011, 80, 1, 80, "Input"],
Cell[542741, 15014, 80, 1, 80, "Input"],
Cell[542824, 15017, 45, 0, 58, "Input"],
Cell[542872, 15019, 296, 4, 278, "Input"],
Cell[CellGroupData[{
Cell[543193, 15027, 157, 2, 103, "Title"],
Cell[543353, 15031, 456, 14, 58, "Input"],
Cell[543812, 15047, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[543863, 15051, 79, 0, 62, "Subtitle"],
Cell[CellGroupData[{
Cell[543967, 15055, 46, 0, 46, "Subsection"],
Cell[CellGroupData[{
Cell[544038, 15059, 2035, 64, 266, "Text"],
Cell[546076, 15125, 7341, 178, 953, "Input",
 InitializationCell->True],
Cell[553420, 15305, 26, 0, 35, "Input"]
}, Open  ]],
Cell[553461, 15308, 26, 0, 35, "Input"]
}, Open  ]],
Cell[553502, 15311, 26, 0, 35, "Input"]
}, Open  ]],
Cell[553543, 15314, 26, 0, 35, "Input"],
Cell[CellGroupData[{
Cell[553594, 15318, 168, 3, 62, "Subtitle"],
Cell[553765, 15323, 116, 4, 55, "Text"],
Cell[CellGroupData[{
Cell[553906, 15331, 2128, 72, 294, "Subsection"],
Cell[556037, 15405, 13764, 334, 2097, "Input",
 InitializationCell->True],
Cell[569804, 15741, 26, 0, 52, "Input"],
Cell[569833, 15743, 26, 0, 52, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[569896, 15748, 289, 8, 72, "Input"],
Cell[570188, 15758, 147, 3, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570372, 15766, 2269, 76, 294, "Subsection"],
Cell[572644, 15844, 80, 1, 97, "Input"],
Cell[572727, 15847, 16830, 397, 2669, "Input",
 InitializationCell->True],
Cell[589560, 16246, 26, 0, 52, "Input"],
Cell[589589, 16248, 26, 0, 52, "Input"]
}, Closed]],
Cell[589630, 16251, 26, 0, 27, "Input"]
}, Open  ]],
Cell[589671, 16254, 26, 0, 35, "Input"],
Cell[589700, 16256, 26, 0, 35, "Input"],
Cell[589729, 16258, 26, 0, 35, "Input"],
Cell[589758, 16260, 26, 0, 35, "Input"]
}, Open  ]],
Cell[589799, 16263, 45, 0, 58, "Input"],
Cell[589847, 16265, 45, 0, 58, "Input"],
Cell[CellGroupData[{
Cell[589917, 16269, 29, 0, 103, "Title"],
Cell[CellGroupData[{
Cell[589971, 16273, 113, 1, 62, "Subtitle"],
Cell[CellGroupData[{
Cell[590109, 16278, 166, 3, 62, "Subtitle"],
Cell[CellGroupData[{
Cell[590300, 16285, 158, 3, 46, "Subsection"],
Cell[590461, 16290, 1422, 33, 234, "Input"],
Cell[591886, 16325, 191, 2, 58, "Input"],
Cell[CellGroupData[{
Cell[592102, 16331, 294, 6, 35, "Input"],
Cell[592399, 16339, 533, 10, 27, "Print"],
Cell[592935, 16351, 196, 3, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593168, 16359, 157, 3, 35, "Input"],
Cell[593328, 16364, 123, 2, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593488, 16371, 2816, 76, 256, "Input"],
Cell[596307, 16449, 799, 14, 27, "Print"],
Cell[597109, 16465, 436, 8, 27, "Print"],
Cell[597548, 16475, 799, 14, 27, "Print"],
Cell[598350, 16491, 436, 8, 27, "Print"],
Cell[598789, 16501, 825, 14, 27, "Print"],
Cell[599617, 16517, 438, 8, 27, "Print"],
Cell[600058, 16527, 830, 14, 27, "Print"],
Cell[600891, 16543, 435, 8, 27, "Print"],
Cell[601329, 16553, 849, 15, 27, "Print"],
Cell[602181, 16570, 436, 8, 27, "Print"],
Cell[602620, 16580, 849, 15, 27, "Print"],
Cell[603472, 16597, 438, 8, 27, "Print"],
Cell[603913, 16607, 849, 15, 27, "Print"],
Cell[604765, 16624, 436, 8, 27, "Print"],
Cell[605204, 16634, 848, 15, 27, "Print"],
Cell[606055, 16651, 436, 8, 27, "Print"],
Cell[606494, 16661, 860, 15, 27, "Print"],
Cell[607357, 16678, 436, 8, 27, "Print"],
Cell[607796, 16688, 864, 15, 27, "Print"],
Cell[608663, 16705, 440, 8, 27, "Print"],
Cell[609106, 16715, 862, 15, 27, "Print"],
Cell[609971, 16732, 438, 8, 27, "Print"],
Cell[610412, 16742, 862, 15, 27, "Print"],
Cell[611277, 16759, 438, 8, 27, "Print"],
Cell[611718, 16769, 438, 8, 27, "Print"],
Cell[612159, 16779, 664, 15, 35, "Output"]
}, Open  ]],
Cell[612838, 16797, 94, 1, 35, "Input"]
}, Open  ]],
Cell[612947, 16801, 87, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[613059, 16806, 130, 1, 46, "Subsection"],
Cell[CellGroupData[{
Cell[613214, 16811, 45, 0, 34, "Subsubsection"],
Cell[613262, 16813, 287, 9, 34, "Text"],
Cell[CellGroupData[{
Cell[613574, 16826, 2049, 50, 361, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[615648, 16880, 224, 5, 52, "Input"],
Cell[615875, 16887, 513, 10, 27, "Print"],
Cell[616391, 16899, 751, 17, 52, "Output"]
}, Open  ]]
}, Open  ]],
Cell[617169, 16920, 26, 0, 35, "Input"]
}, Open  ]],
Cell[617210, 16923, 96, 1, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617343, 16929, 219, 3, 75, "Input"],
Cell[617565, 16934, 145, 2, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617747, 16941, 127, 2, 52, "Input"],
Cell[617877, 16945, 465, 9, 29, "Message"],
Cell[618345, 16956, 155, 3, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[618537, 16964, 149, 2, 46, "Subsection"],
Cell[CellGroupData[{
Cell[618711, 16970, 6637, 162, 713, "Input"],
Cell[625351, 17134, 669, 11, 52, "Output"],
Cell[626023, 17147, 962, 22, 52, "Output"],
Cell[626988, 17171, 1332, 28, 27, "Print"],
Cell[628323, 17201, 657, 12, 27, "Print"],
Cell[628983, 17215, 657, 12, 27, "Print"],
Cell[629643, 17229, 655, 12, 27, "Print"],
Cell[630301, 17243, 559, 11, 27, "Print"],
Cell[630863, 17256, 607, 9, 52, "Output"],
Cell[631473, 17267, 1243, 24, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[632753, 17296, 762, 10, 35, "Input"],
Cell[633518, 17308, 282, 7, 27, "Print"],
Cell[633803, 17317, 623, 11, 29, "Message"],
Cell[634429, 17330, 603, 9, 52, "Output"],
Cell[635035, 17341, 1605, 37, 52, "Output"]
}, Open  ]],
Cell[636655, 17381, 92, 1, 35, "Input"]
}, Open  ]],
Cell[636762, 17385, 94, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[636881, 17390, 72, 0, 46, "Subsection"],
Cell[636956, 17392, 606, 19, 102, "Input"],
Cell[CellGroupData[{
Cell[637587, 17415, 187, 2, 34, "Subsubsection"],
Cell[637777, 17419, 1289, 38, 317, "Input"],
Cell[CellGroupData[{
Cell[639091, 17461, 35, 0, 52, "Input"],
Cell[639129, 17463, 78, 1, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[639244, 17469, 734, 19, 229, "Input"],
Cell[639981, 17490, 910, 19, 43, "Print"],
Cell[640894, 17511, 837, 23, 27, "Print"],
Cell[641734, 17536, 3889, 106, 156, "Print"],
Cell[645626, 17644, 635, 18, 27, "Print"],
Cell[646264, 17664, 212, 6, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646513, 17675, 35, 0, 52, "Input"],
Cell[646551, 17677, 89, 2, 52, "Output"]
}, Open  ]],
Cell[646655, 17682, 93, 1, 52, "Input"]
}, Open  ]],
Cell[646763, 17686, 1289, 38, 300, "Input"],
Cell[CellGroupData[{
Cell[648077, 17728, 35, 0, 35, "Input"],
Cell[648115, 17730, 45, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648197, 17736, 734, 19, 212, "Input"],
Cell[648934, 17757, 842, 18, 43, "Print"],
Cell[649779, 17777, 740, 20, 27, "Print"],
Cell[650522, 17799, 853, 26, 30, "Print"],
Cell[651378, 17827, 712, 19, 27, "Print"],
Cell[652093, 17848, 202, 6, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[652332, 17859, 35, 0, 35, "Input"],
Cell[652370, 17861, 11925, 367, 356, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[664332, 18233, 1127, 34, 234, "Input"],
Cell[665462, 18269, 1083, 23, 50, "Print"],
Cell[666548, 18294, 740, 20, 27, "Print"],
Cell[667291, 18316, 842, 25, 33, "Print"],
Cell[668136, 18343, 706, 19, 27, "Print"],
Cell[668845, 18364, 201, 6, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[669083, 18375, 35, 0, 35, "Input"],
Cell[669121, 18377, 4926, 152, 165, "Output"]
}, Open  ]],
Cell[674062, 18532, 26, 0, 35, "Input"],
Cell[674091, 18534, 26, 0, 35, "Input"]
}, Open  ]],
Cell[674132, 18537, 94, 1, 35, "Input"],
Cell[674229, 18540, 94, 1, 35, "Input"]
}, Open  ]],
Cell[674338, 18544, 92, 1, 35, "Input"],
Cell[674433, 18547, 96, 1, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674566, 18553, 169, 2, 62, "Subtitle"],
Cell[674738, 18557, 92, 1, 35, "Input"],
Cell[674833, 18560, 96, 1, 35, "Input"]
}, Open  ]],
Cell[674944, 18564, 26, 0, 35, "Input"]
}, Open  ]],
Cell[674985, 18567, 26, 0, 35, "Input"],
Cell[675014, 18569, 26, 0, 35, "Input"]
}
]
*)

(* End of internal cache information *)
